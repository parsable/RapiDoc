{"openapi":"3.0.0","info":{"version":"1.0.0","title":"Parsable API","description":"The Parsable API consists of HTTP RPC calls.  All calls should be POSTs, and all return data in JSON format.  All calls must be made via SSL."},"servers":[{"url":"https://api.parsable.net/"}],"paths":{"/api/auth#login":{"post":{"tags":["/api/auth"],"summary":"login","description":"","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["login"]},"arguments":{"type":"object","properties":{"email":{"type":"string"},"password":{"type":"string"}},"required":["email","password"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["login"]},"result":{"$ref":"#/components/schemas/authentication.LoginResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["login"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}}}},"/api/auth#logout":{"post":{"tags":["/api/auth"],"summary":"logout","description":"Logout","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["logout"]},"arguments":{"type":"object","properties":{}}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["logout"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["logout"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/auth#loginWithToken":{"post":{"tags":["/api/auth"],"summary":"loginWithToken","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["loginWithToken"]},"arguments":{"type":"object","properties":{"authToken":{"type":"string"}},"required":["authToken"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["loginWithToken"]},"result":{"$ref":"#/components/schemas/authentication.LoginResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["loginWithToken"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/data_sheets#querySets":{"post":{"tags":["/api/data_sheets"],"summary":"querySets","description":"Query data sheet sets on a team","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["querySets"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"opts":{"$ref":"#/components/schemas/data_sheet.DataSheetSetOptions"},"selectOpts":{"$ref":"#/components/schemas/data_sheet.DataSheetSetSelectOptions"}},"required":["teamId","selectOpts"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["querySets"]},"result":{"$ref":"#/components/schemas/data_sheet.DataSheetSetQueryResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["querySets"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/data_sheets#createSet":{"post":{"tags":["/api/data_sheets"],"summary":"createSet","description":"Create a new data sheet set on a team (subject to max limit) <br>\nCan only create a data sheet set with name and description <br>\nUse <code>definitionOps</code> or <code>sheetOps</code> for other creations","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["createSet"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"dsSet":{"$ref":"#/components/schemas/data_sheet.DataSheetSet"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"required":["teamId","dsSet","attributes"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createSet"]},"result":{"$ref":"#/components/schemas/data_sheet.DataSheetSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createSet"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/data_sheets#updateSet":{"post":{"tags":["/api/data_sheets"],"summary":"updateSet","description":"Update a single data sheet set <br>\nCan only update name and description <br>\nUse <code>definitionOps</code> or <code>sheetOps</code> for other updates","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateSet"]},"arguments":{"type":"object","properties":{"dsSetId":{"type":"string"},"dsSet":{"$ref":"#/components/schemas/data_sheet.DataSheetSet"}},"required":["dsSetId","dsSet"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateSet"]},"result":{"$ref":"#/components/schemas/data_sheet.DataSheetSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateSet"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/data_sheets#getSet":{"post":{"tags":["/api/data_sheets"],"summary":"getSet","description":"Get a single data sheet set <br>\nUse <code>querySheets</code> to list data sheets under this set","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getSet"]},"arguments":{"type":"object","properties":{"dsSetId":{"type":"string"},"selectOpts":{"$ref":"#/components/schemas/data_sheet.DataSheetSetSelectOptions"}},"required":["dsSetId","selectOpts"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getSet"]},"result":{"$ref":"#/components/schemas/data_sheet.DataSheetSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getSet"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/data_sheets#archiveSet":{"post":{"tags":["/api/data_sheets"],"summary":"archiveSet","description":"Archive a single data sheet set","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["archiveSet"]},"arguments":{"type":"object","properties":{"dsSetId":{"type":"string"}},"required":["dsSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archiveSet"]},"result":{"$ref":"#/components/schemas/data_sheet.DataSheetSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archiveSet"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/data_sheets#unarchiveSet":{"post":{"tags":["/api/data_sheets"],"summary":"unarchiveSet","description":"Unarchive a single data sheet set (subject to max limit)","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["unarchiveSet"]},"arguments":{"type":"object","properties":{"dsSetId":{"type":"string"}},"required":["dsSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchiveSet"]},"result":{"$ref":"#/components/schemas/data_sheet.DataSheetSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchiveSet"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/data_sheets#definitionOps":{"post":{"tags":["/api/data_sheets"],"summary":"definitionOps","description":"Add/update/move/get/archive/unarchive data sheet definitions on an existing data sheet set (subject to max limit) <br>\nposition = -1 appends to the end of the current list <br>\nPositions are applied in the order of the list, final positions depend on prior updates <br>\nReturns the updated definitions in the order passed in.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["definitionOps"]},"arguments":{"type":"object","properties":{"dsSetId":{"type":"string"},"defActions":{"type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheetDefinitionAction"}}},"required":["dsSetId","defActions"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["definitionOps"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheetDefinition"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["definitionOps"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/data_sheets#sheetOps":{"post":{"tags":["/api/data_sheets"],"summary":"sheetOps","description":"Add/update/get/archive/unarchive data sheets on an existing data sheet set (subject to max limit) <br>\nReturns the updated sheets in the order passed in.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["sheetOps"]},"arguments":{"type":"object","properties":{"dsSetId":{"type":"string"},"sheetActions":{"type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheetAction"}}},"required":["dsSetId","sheetActions"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["sheetOps"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheet"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["sheetOps"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/data_sheets#querySheets":{"post":{"tags":["/api/data_sheets"],"summary":"querySheets","description":"Query data sheets on a data sheet set","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["querySheets"]},"arguments":{"type":"object","properties":{"dsSetId":{"type":"string"},"opts":{"$ref":"#/components/schemas/data_sheet.DataSheetOptions"}},"required":["dsSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["querySheets"]},"result":{"$ref":"#/components/schemas/data_sheet.DataSheetQueryResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["querySheets"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/data_sheets#updateAttribute":{"post":{"tags":["/api/data_sheets"],"summary":"updateAttribute","description":"Update a single attribute on a data sheet\nreturn value will always be a list with a single attribute determined by which attribute was updated\n\nparam dataSheetId: data sheet to update\nparam attributeId: the AttributeId of the team level attribute to be updated\nparam values: the new AttributeValues to associated with Attribute attributeId on data sheet dataSheetId\nparam behave: determine the behaviour of the endpoint, merge or clobber. Default: clobber","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateAttribute"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"attributeId":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttributeValue"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["templateSetId","attributeId","values","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/field_data#getNumberUnits":{"post":{"tags":["/api/field_data"],"summary":"getNumberUnits","description":"Get all pre-defined measurement units","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getNumberUnits"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"}},"required":["teamId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getNumberUnits"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/field_data.NumberUnitQuantity"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getNumberUnits"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/formula#getOperations":{"post":{"tags":["/api/formula"],"summary":"getOperations","description":"Get a current list of available formula operations.  This includes functions and operators.  It's\ngenerally fixed across all teams, except for functions still in beta testing.  You can omit teamId to\nonly get production-ready operations available to everyone.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getOperations"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"}},"required":["teamId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getOperations"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/formula.Operation"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getOperations"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/formula#validateFormula":{"post":{"tags":["/api/formula"],"summary":"validateFormula","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["validateFormula"]},"arguments":{"type":"object","properties":{"formulaTokens":{"type":"array","items":{"$ref":"#/components/schemas/formula.FormulaToken"}}},"required":["formulaTokens"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["validateFormula"]},"result":{"$ref":"#/components/schemas/formula.ValidateResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["validateFormula"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/group_headers#indexEquipment":{"post":{"tags":["/api/group_headers"],"summary":"indexEquipment","description":"Get a list of all valid equipment icons for a team","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["indexEquipment"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"}},"required":["teamId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["indexEquipment"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/group_headers.EquipmentIcon"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["indexEquipment"]},"exception":{"type":"object","properties":{"message":{"type":"string"},"type":{"type":"integer"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/group_headers#indexNoticeIcons":{"post":{"tags":["/api/group_headers"],"summary":"indexNoticeIcons","description":"Get a list of all valid notice icons for a team","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["indexNoticeIcons"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"}},"required":["teamId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["indexNoticeIcons"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/group_headers.NoticeIcon"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["indexNoticeIcons"]},"exception":{"type":"object","properties":{"message":{"type":"string"},"type":{"type":"integer"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/group_headers#indexCategories":{"post":{"tags":["/api/group_headers"],"summary":"indexCategories","description":"Get a list of all valid categories for a team","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["indexCategories"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"}},"required":["teamId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["indexCategories"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/group_headers.StepGroupCategory"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["indexCategories"]},"exception":{"type":"object","properties":{"message":{"type":"string"},"type":{"type":"integer"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/group_headers#createCategory":{"post":{"tags":["/api/group_headers"],"summary":"createCategory","description":"Create a step group category for a team","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["createCategory"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"params":{"$ref":"#/components/schemas/group_headers.StepGroupCategoryParams"}},"required":["teamId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createCategory"]},"result":{"$ref":"#/components/schemas/group_headers.StepGroupCategory"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createCategory"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/group_headers#updateCategory":{"post":{"tags":["/api/group_headers"],"summary":"updateCategory","description":"Update a step group category","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateCategory"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"categoryId":{"type":"string"},"params":{"$ref":"#/components/schemas/group_headers.StepGroupCategoryParams"}},"required":["teamId","categoryId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateCategory"]},"result":{"$ref":"#/components/schemas/group_headers.StepGroupCategory"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateCategory"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/group_headers#getCategory":{"post":{"tags":["/api/group_headers"],"summary":"getCategory","description":"Get a step group category","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getCategory"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"categoryId":{"type":"string"}},"required":["teamId","categoryId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getCategory"]},"result":{"$ref":"#/components/schemas/group_headers.StepGroupCategory"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getCategory"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/group_headers#archiveCategory":{"post":{"tags":["/api/group_headers"],"summary":"archiveCategory","description":"Archive a step group category","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["archiveCategory"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"categoryId":{"type":"string"}},"required":["teamId","categoryId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archiveCategory"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archiveCategory"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/group_headers#unarchiveCategory":{"post":{"tags":["/api/group_headers"],"summary":"unarchiveCategory","description":"Unarchive a step group category","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["unarchiveCategory"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"categoryId":{"type":"string"}},"required":["teamId","categoryId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchiveCategory"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchiveCategory"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#query":{"post":{"tags":["/api/jobs"],"summary":"query","description":"Query a list of Jobs","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["query"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/job.JobSelectOpts"},"whereOpts":{"$ref":"#/components/schemas/job.JobWhereOpts"},"order":{"type":"array","items":{"$ref":"#/components/schemas/job.JobOrder"}}},"required":["selectOpts","whereOpts","order"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["query"]},"result":{"$ref":"#/components/schemas/job.JobQueryResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["query"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#queryUpdated":{"post":{"tags":["/api/jobs"],"summary":"queryUpdated","description":"Query a list of Jobs that have been changed since the lastUpdated time\nIf lastUpdated == 0, then same as calling query().\nThe call will result the same as calling query() with JobWhereOpts all default values.\n(i.e. all the jobs you belong too that have been started, previews that haven't been closed, etc. )","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["queryUpdated"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/job.JobSelectOpts"},"lastUpdated":{"type":"integer","format":"int64"},"jobTypes":{"type":"array","items":{"$ref":"#/components/schemas/job.JobType"}}},"required":["selectOpts","lastUpdated","jobTypes"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["queryUpdated"]},"result":{"$ref":"#/components/schemas/job.JobQueryUpdatedResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["queryUpdated"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#fetch":{"post":{"tags":["/api/jobs"],"summary":"fetch","description":"Fetch a specific list of Jobs. <br><br>\nEach element in the jobIds list must be either <br>\n1) A job uuid OR <br>\n2) A job lookupId in the format of <code>&lt;team-domain&gt;-j-&lt;lookup-id&gt;</code> for jobs and <code>&lt;team-domain&gt;-i-&lt;lookup-id&gt;</code> for issues <br>\nThe keys in the return value will be either job uuids or unique lookupId identifiers depending on what was passed in.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["fetch"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/job.JobSelectOpts"},"jobIds":{"type":"array","items":{"type":"string"}}},"required":["selectOpts","jobIds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetch"]},"result":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/job.JobFetchResult"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetch"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#createBlank":{"post":{"tags":["/api/jobs"],"summary":"createBlank","description":"Create a job with a blank (empty) template; returned struct has all non-empty components filled in.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["createBlank"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"params":{"$ref":"#/components/schemas/job.JobParams"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"required":["teamId","params","attributes"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createBlank"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createBlank"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#instantiateRecurringJob":{"post":{"tags":["/api/jobs"],"summary":"instantiateRecurringJob","description":"Use this function to instantiate a new 'copy' of the recurring job. This is basically to force create it\noutside of the normal recurring flow","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["instantiateRecurringJob"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"}},"required":["jobId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["instantiateRecurringJob"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["instantiateRecurringJob"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#retryRecurringJob":{"post":{"tags":["/api/jobs"],"summary":"retryRecurringJob","description":"Force run any pending instances of this recurring job.\nIf the recurring job has been paused due to many errors, it will unpause and retry.\nWill throw an error if something goes wrong","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["retryRecurringJob"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"}},"required":["jobId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["retryRecurringJob"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["retryRecurringJob"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#updateRecurringRule":{"post":{"tags":["/api/jobs"],"summary":"updateRecurringRule","description":"Update the schedule at which the job will be created","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateRecurringRule"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"recurringRule":{"$ref":"#/components/schemas/job.JobRecurringRule"}},"required":["jobId","recurringRule"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateRecurringRule"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateRecurringRule"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#createPreview":{"post":{"tags":["/api/jobs"],"summary":"createPreview","description":"Create a preview job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["createPreview"]},"arguments":{"type":"object","properties":{"templateId":{"type":"string"},"params":{"$ref":"#/components/schemas/job.JobParams"}},"required":["templateId","params"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createPreview"]},"result":{"$ref":"#/components/schemas/job.Job"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createPreview"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#createModular":{"post":{"tags":["/api/jobs"],"summary":"createModular","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["createModular"]},"arguments":{"type":"object","properties":{"params":{"$ref":"#/components/schemas/job.JobModularParams"}},"required":["params"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createModular"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createModular"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#addTemplates":{"post":{"tags":["/api/jobs"],"summary":"addTemplates","description":"Add templates to a job (when in planning); position to add before, -1 to add at end","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addTemplates"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"templateIds":{"type":"array","items":{"type":"string"}},"position":{"type":"integer","format":"int32"}},"required":["jobId","templateIds","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addTemplates"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addTemplates"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#cloneTemplate":{"post":{"tags":["/api/jobs"],"summary":"cloneTemplate","description":"Clone a template already inside a job (use the jobBaseStepId of the template). The job needs to be started\nNote : It will copy any added steps, and it will use the same template version even if the template was updated\nIt literally is a clone of the template hierarchy currently in the job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["cloneTemplate"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"templateJobBaseStepId":{"type":"string"},"position":{"type":"integer","format":"int32"}},"required":["jobId","templateJobBaseStepId","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneTemplate"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneTemplate"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#multiActionTemplates":{"post":{"tags":["/api/jobs"],"summary":"multiActionTemplates","description":"Set full list of templates on a job. This replaces the need for consecutive api calls when moving, removing, editing and adding templates <br>\nTo add a template with data sheet definition references, use AddAction with <code>extraInfo</code> set to the data sheet set id -> data sheet id map <br>\nTo edit a template's data sheet selections on a job in planning state, use EditAction with <code>extraInfo</code> set to the updated data sheet set id -> data sheet id map; note that you cannot edit a template on a started job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["multiActionTemplates"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"movements":{"type":"array","items":{"$ref":"#/components/schemas/common.ListActions"}}},"required":["jobId","movements"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["multiActionTemplates"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["multiActionTemplates"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#multiAddTemplates":{"post":{"tags":["/api/jobs"],"summary":"multiAddTemplates","description":"Add multiple templates to an active job.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["multiAddTemplates"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"adds":{"type":"array","items":{"$ref":"#/components/schemas/common.AddAction"}}},"required":["jobId","adds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["multiAddTemplates"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["multiAddTemplates"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#addStep":{"post":{"tags":["/api/jobs"],"summary":"addStep","description":"Add a step to a job.\n<ul>\n<li><code>parentJobBaseStepId</code> is the jobBaseStepId of the parent step group to be added to</li>\n<li><code>Position</code> is the position at which you want to insert the new child. Position == -1 inserts it at the end</li>\n</ul>","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addStep"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"parentJobBaseStepId":{"type":"string"},"step":{"$ref":"#/components/schemas/step.BaseStep"},"position":{"type":"integer","format":"int32"}},"required":["jobId","parentJobBaseStepId","step","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addStep"]},"result":{"$ref":"#/components/schemas/job.Job"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addStep"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#addStepGroup":{"post":{"tags":["/api/jobs"],"summary":"addStepGroup","description":"Add a step group to a job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addStepGroup"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"parentJobBaseStepId":{"type":"string"},"step":{"$ref":"#/components/schemas/step.BaseStep"},"position":{"type":"integer","format":"int32"}},"required":["jobId","parentJobBaseStepId","step","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addStepGroup"]},"result":{"$ref":"#/components/schemas/job.Job"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addStepGroup"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#cloneStep":{"post":{"tags":["/api/jobs"],"summary":"cloneStep","description":"Clone a step in a job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["cloneStep"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"parentJobBaseStepId":{"type":"string"},"stepId":{"type":"string"},"position":{"type":"integer","format":"int32"}},"required":["jobId","parentJobBaseStepId","stepId","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneStep"]},"result":{"$ref":"#/components/schemas/job.Job"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneStep"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#cloneJobStepGroup":{"post":{"tags":["/api/jobs"],"summary":"cloneJobStepGroup","description":"Clone a step group along with changes that were made to it","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["cloneJobStepGroup"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"parentJobBaseStepId":{"type":"string"},"jobBaseStepGroupId":{"type":"string"},"position":{"type":"integer","format":"int32"}},"required":["jobId","parentJobBaseStepId","jobBaseStepGroupId","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneJobStepGroup"]},"result":{"$ref":"#/components/schemas/job.Job"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneJobStepGroup"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#addDocument":{"post":{"tags":["/api/jobs"],"summary":"addDocument","description":"Add a document to a Job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addDocument"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"documentId":{"type":"string"}},"required":["jobId","documentId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addDocument"]},"result":{"$ref":"#/components/schemas/job.Job"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addDocument"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#updateDocumentPosition":{"post":{"tags":["/api/jobs"],"summary":"updateDocumentPosition","description":"Update a document position to a Job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateDocumentPosition"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"documentId":{"type":"string"},"position":{"type":"integer","format":"int32"}},"required":["jobId","documentId","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateDocumentPosition"]},"result":{"$ref":"#/components/schemas/job.Job"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateDocumentPosition"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#removeDocument":{"post":{"tags":["/api/jobs"],"summary":"removeDocument","description":"Remove a document from a job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["removeDocument"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"documentId":{"type":"string"}},"required":["jobId","documentId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeDocument"]},"result":{"$ref":"#/components/schemas/job.Job"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeDocument"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#addUser":{"post":{"tags":["/api/jobs"],"summary":"addUser","description":"Add a user to a job.  To add a user by userId, send email as an empty string. To add a user by email, send userId as empty string.\nNOTE: If you add a non-existing user by email to a team located in a regional datacenter, the user is included in the result with sentinel value for the id.\nThis is because a routine is kicked off that asynchronously requests the user to be provisioned in the global datacenter, waits for the user to sync over\nand then fires off a beacon notification. The sentinel value is a UUID with all 0s.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addUser"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"userId":{"type":"string"},"email":{"type":"string"},"jobRoleId":{"type":"string"}},"required":["jobId","userId","email","jobRoleId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addUser"]},"result":{"$ref":"#/components/schemas/job.Job"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addUser"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#archiveUser":{"post":{"tags":["/api/jobs"],"summary":"archiveUser","description":"Archive a user's role in a job. Archive all of a user's roles by passing \"\" to roleId.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["archiveUser"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"userId":{"type":"string"},"roleId":{"type":"string"}},"required":["jobId","userId","roleId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archiveUser"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archiveUser"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#updateMetadata":{"post":{"tags":["/api/jobs"],"summary":"updateMetadata","description":"Update the metadata (parameters) on a job. Updated are the values to be added or updated on the job. RemovedIds are the IDs of the values to be removed from the job.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateMetadata"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"updated":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/metadata.MetadataValue"}},"removedIds":{"type":"array","items":{"type":"string"}}},"required":["jobId","updated","removedIds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadata"]},"result":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/metadata.MetadataEntry"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadata"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#sendExecData":{"post":{"tags":["/api/jobs"],"summary":"sendExecData","description":"(Recommend using sendExecDataWithResult)\nSend all types of execution data. Returns the maximum seqId of the execution data created.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["sendExecData"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"execSnippets":{"type":"array","items":{"$ref":"#/components/schemas/job.ExecutionSnippet"}}},"required":["jobId","execSnippets"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["sendExecData"]},"result":{"type":"integer","format":"int64"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["sendExecData"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#sendExecDataWithResult":{"post":{"tags":["/api/jobs"],"summary":"sendExecDataWithResult","description":"Send all types of execution data. Returns a SendDataResult which includes the maximum\nseqId of the execution data created, AND the execution data with IDs filled in,\nboth seqIds and pending document IDs. Supports async document upload with pending IDs\nallocated inline.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["sendExecDataWithResult"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"execSnippets":{"type":"array","items":{"$ref":"#/components/schemas/job.ExecutionSnippet"}}},"required":["jobId","execSnippets"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["sendExecDataWithResult"]},"result":{"$ref":"#/components/schemas/job.SendDataResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["sendExecDataWithResult"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#getData":{"post":{"tags":["/api/jobs"],"summary":"getData","description":"Get Execution Data for a Job\nSend the last seqId received as an argument, to get everything > that value","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getData"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"seqId":{"type":"integer","format":"int64"},"options":{"$ref":"#/components/schemas/job.GetDataOptions"}},"required":["jobId","seqId","options"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getData"]},"result":{"$ref":"#/components/schemas/job.GetDataResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getData"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#complete":{"post":{"tags":["/api/jobs"],"summary":"complete","description":"Mark the job completed","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["complete"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"reason":{"type":"string"}},"required":["jobId","reason"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["complete"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["complete"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#uncomplete":{"post":{"tags":["/api/jobs"],"summary":"uncomplete","description":"Mark the job not completed","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["uncomplete"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"}},"required":["jobId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["uncomplete"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["uncomplete"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#updateJob":{"post":{"tags":["/api/jobs"],"summary":"updateJob","description":"Update job details","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateJob"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"params":{"$ref":"#/components/schemas/job.JobParams"}},"required":["jobId","params"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateJob"]},"result":{"$ref":"#/components/schemas/job.Job"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateJob"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#start":{"post":{"tags":["/api/jobs"],"summary":"start","description":"Complete planning stage; before this is called, execution data may not be recorded","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["start"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"}},"required":["jobId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["start"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["start"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#instantiateAdHocJob":{"post":{"tags":["/api/jobs"],"summary":"instantiateAdHocJob","description":"Instantiate a new instance of an ad hoc job <br>\nAfter starting a new normal job based on this ad hoc job, <br>\nthe ad hoc job itself does not change state. <br>\nReturns the instantiated active job with pre-planned roles assigned to the executor.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["instantiateAdHocJob"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"}},"required":["jobId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["instantiateAdHocJob"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["instantiateAdHocJob"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#getPriorityLevels":{"post":{"tags":["/api/jobs"],"summary":"getPriorityLevels","description":"Fetch available priority levels, and their titles, returned in priority order highest to lowest","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getPriorityLevels"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"}},"required":["teamId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getPriorityLevels"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/job.PriorityLevel"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getPriorityLevels"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#archive":{"post":{"tags":["/api/jobs"],"summary":"archive","description":"Mark a job as archived. Can only archive planned jobs.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["archive"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"}},"required":["jobId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#unarchive":{"post":{"tags":["/api/jobs"],"summary":"unarchive","description":"Mark a job as unarchived. Reverts job back to planned state.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["unarchive"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"}},"required":["jobId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchive"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#addAttributes":{"post":{"tags":["/api/jobs"],"summary":"addAttributes","description":"addAttributes that are set in the map will be changed. To add or edit, just include the attribute\nthis endpoint will not delete or update any attribute value, additive only","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addAttributes"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"required":["jobId","attributes"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addAttributes"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addAttributes"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#removeAttributes":{"post":{"tags":["/api/jobs"],"summary":"removeAttributes","description":"remove all attributes set in the map. Only values listed in the map will be removed.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["removeAttributes"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"required":["jobId","attributes"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeAttributes"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeAttributes"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#updateAttributes":{"post":{"tags":["/api/jobs"],"summary":"updateAttributes","description":"Clobber all job attributes with the provided map","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateAttributes"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"required":["jobId","attributes"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttributes"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttributes"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#updateAttributesRestricted":{"post":{"tags":["/api/jobs"],"summary":"updateAttributesRestricted","description":"Update attributes on a job with restrictions\nPerforms the same actions as updateAttributes, but with several safety checks. If a safety check fails, this\nfunction will skip the update, and return the current attribute state and an error object describing the\nsafety violation\n\nparam jobId: job to update\nparam attributes: the new AttributeValues to associated with Attribute attributeId on job jobId\nparam behave: determine the behaviour of the endpoint, merge or clobber. Default: clobber","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateAttributesRestricted"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["jobId","attributes","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttributesRestricted"]},"result":{"$ref":"#/components/schemas/abac.AbacUpdateAttributeResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttributesRestricted"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#updateAttribute":{"post":{"tags":["/api/jobs"],"summary":"updateAttribute","description":"Update a single attribute on a job\nreturns the current attribute state of the job\n\nparam jobId: job to update\nparam attributeId: the AttributeId of the team level attribute to be updated\nparam values: the new AttributeValues to associated with Attribute attributeId on job jobId\nparam behave: determine the behaviour of the endpoint, merge or clobber. Default: clobber","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateAttribute"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"attributeId":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttributeValue"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["jobId","attributeId","values","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#updateAttributeRestricted":{"post":{"tags":["/api/jobs"],"summary":"updateAttributeRestricted","description":"Update a single attribute on a job with restrictions\nPerforms the same actions as updateAttribute, but with several safety checks. If a safety check fails, this\nfunction will skip the update, and return the current attribute state and an error object describing the\nsafety violation\n\nparam jobId: job to update\nparam attributeId: the AttributeId of the team level attribute to be updated\nparam values: the new AttributeValues to associated with Attribute attributeId on job jobId\nparam behave: determine the behaviour of the endpoint, merge or clobber. Default: clobber","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateAttributeRestricted"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"attributeId":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttributeValue"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["jobId","attributeId","values","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttributeRestricted"]},"result":{"$ref":"#/components/schemas/abac.AbacUpdateAttributeResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttributeRestricted"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/jobs#updateOfflineJobs":{"post":{"tags":["/api/jobs"],"summary":"updateOfflineJobs","description":"Bulk Update offline jobs by addig templates/steps/step groups\nreturn value will be the updated job\n\nparam jobId: job to update\nparam TemplateInfo: Contains information about the new template that was added\nparam StepInfo: Contains information about the new stesps/step groups that were added","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateOfflineJobs"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"templateInfo":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateInfo"}},"stepInfo":{"type":"array","items":{"$ref":"#/components/schemas/step.StepInfo"}}},"required":["jobId","templateInfo","stepInfo"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateOfflineJobs"]},"result":{"$ref":"#/components/schemas/job.JobModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateOfflineJobs"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_filters#index":{"post":{"tags":["/api/job_filters"],"summary":"index","description":"Return job filters for the current user, mapped by job types (job or issue)","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["index"]},"arguments":{"type":"object","properties":{"jobTypes":{"type":"array","items":{"$ref":"#/components/schemas/job.JobType"}}},"required":["jobTypes"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["index"]},"result":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/job_filter.JobFilter"}}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["index"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_filters#get":{"post":{"tags":["/api/job_filters"],"summary":"get","description":"Get a single job filter based on id","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["get"]},"arguments":{"type":"object","properties":{"filterId":{"type":"string"}},"required":["filterId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"$ref":"#/components/schemas/job_filter.JobFilter"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_filters#add":{"post":{"tags":["/api/job_filters"],"summary":"add","description":"Add a new job filter for the current user\nfilter.position = -1 appends to the end of the current list\nReturns the updated list of job filters\nNOTE: Each user can have a max of 15 filters per job type","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["add"]},"arguments":{"type":"object","properties":{"filter":{"$ref":"#/components/schemas/job_filter.JobFilter"}},"required":["filter"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["add"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/job_filter.JobFilter"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["add"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_filters#update":{"post":{"tags":["/api/job_filters"],"summary":"update","description":"Update a job filter for the current user\nfilter.position = -1 appends to the end of the current list\nReturns the updated list of job filters","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["update"]},"arguments":{"type":"object","properties":{"filter":{"$ref":"#/components/schemas/job_filter.JobFilter"}},"required":["filter"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/job_filter.JobFilter"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_filters#remove":{"post":{"tags":["/api/job_filters"],"summary":"remove","description":"Remove a new job filter for the current user\nReturns the updated list of job filters","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["remove"]},"arguments":{"type":"object","properties":{"filterId":{"type":"string"}},"required":["filterId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["remove"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/job_filter.JobFilter"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["remove"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_filters#query":{"post":{"tags":["/api/job_filters"],"summary":"query","description":"Query for jobs based on the saved job filter (by options and order)\nReturns job query result containing filtered jobs","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["query"]},"arguments":{"type":"object","properties":{"filterId":{"type":"string"},"queryOpts":{"$ref":"#/components/schemas/job_filter.JobFilterQueryOpts"}},"required":["filterId","queryOpts"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["query"]},"result":{"$ref":"#/components/schemas/job.JobQueryResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["query"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_roles#index":{"post":{"tags":["/api/job_roles"],"summary":"index","description":"List all of a team's job roles","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["index"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"opts":{"$ref":"#/components/schemas/job_role.IndexOpts"},"selectOpts":{"$ref":"#/components/schemas/job_role.JobRoleSelectOpts"}},"required":["teamId","opts","selectOpts"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["index"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/job_role.JobRole"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["index"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_roles#getAllAssignedRoles":{"post":{"tags":["/api/job_roles"],"summary":"getAllAssignedRoles","description":"Gets a map of the team's job roles\nIf current user is not a team admin, return only his assigned roles.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getAllAssignedRoles"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"selectOpts":{"$ref":"#/components/schemas/job_role.JobRoleSelectOpts"}},"required":["teamId","selectOpts"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getAllAssignedRoles"]},"result":{"$ref":"#/components/schemas/job_role.AllRolesResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getAllAssignedRoles"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_roles#create":{"post":{"tags":["/api/job_roles"],"summary":"create","description":"Create a new job role\nFails with error XXX if name is not unique\nFails with error YYY if missing name","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["create"]},"arguments":{"type":"object","properties":{"teamId":{"description":"Team to create role for\n","type":"string"},"params":{"$ref":"#/components/schemas/job_role.JobRoleParams"}},"required":["teamId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["create"]},"result":{"$ref":"#/components/schemas/job_role.JobRole"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["create"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_roles#update":{"post":{"tags":["/api/job_roles"],"summary":"update","description":"Fails with error XXX if name is not unique","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["update"]},"arguments":{"type":"object","properties":{"roleId":{"description":"Id of job role\n","type":"string"},"params":{"$ref":"#/components/schemas/job_role.JobRoleParams"}},"required":["roleId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"$ref":"#/components/schemas/job_role.JobRole"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_roles#validatePermissionsForm":{"post":{"tags":["/api/job_roles"],"summary":"validatePermissionsForm","description":"Validate the contents of the job role permissions form. See PermissionChangeWarning\nfor details about warnings.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["validatePermissionsForm"]},"arguments":{"type":"object","properties":{"roleId":{"type":"string"},"permissions":{"$ref":"#/components/schemas/setting.SettingsForm"}},"required":["roleId","permissions"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["validatePermissionsForm"]},"result":{"$ref":"#/components/schemas/job_role.PermissionChangeWarning"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["validatePermissionsForm"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_roles#get":{"post":{"tags":["/api/job_roles"],"summary":"get","description":"Get a job role","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["get"]},"arguments":{"type":"object","properties":{"roleId":{"type":"string"},"selectOpts":{"$ref":"#/components/schemas/job_role.JobRoleSelectOpts"}},"required":["roleId","selectOpts"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"$ref":"#/components/schemas/job_role.JobRole"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_roles#archive":{"post":{"tags":["/api/job_roles"],"summary":"archive","description":"Archive a job role. Archived job roles can no longer be assigned in future jobs. They will still function normally\nin existing jobs.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["archive"]},"arguments":{"type":"object","properties":{"jobRoleId":{"type":"string"}},"required":["jobRoleId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"$ref":"#/components/schemas/job_role.JobRole"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_roles#unarchive":{"post":{"tags":["/api/job_roles"],"summary":"unarchive","description":"Unarchive a job role.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["unarchive"]},"arguments":{"type":"object","properties":{"jobRoleId":{"type":"string"}},"required":["jobRoleId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchive"]},"result":{"$ref":"#/components/schemas/job_role.JobRole"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_roles#getPermissionsSettings":{"post":{"tags":["/api/job_roles"],"summary":"getPermissionsSettings","description":"Get the current permissions form for a job role","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getPermissionsSettings"]},"arguments":{"type":"object","properties":{"jobRoleId":{"type":"string"}},"required":["jobRoleId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getPermissionsSettings"]},"result":{"$ref":"#/components/schemas/setting.SettingsForm"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getPermissionsSettings"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#query":{"post":{"tags":["/api/job_templates"],"summary":"query","description":"Query a list of Job Templates","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["query"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/job_template.TemplateSelectOpts"},"whereOpts":{"$ref":"#/components/schemas/job_template.TemplateWhereOpts"},"order":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateOrder"}}},"required":["selectOpts","whereOpts","order"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["query"]},"result":{"$ref":"#/components/schemas/job_template.TemplateQueryResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["query"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#fetch":{"post":{"tags":["/api/job_templates"],"summary":"fetch","description":"Fetch a specific list of JobTemplates. Returns a hashmap of TemplateFetchResults keyed off template ids. One entry for\nevery requested id. Value in hashmap is either an error indicating that the fetch failed or the JobTemplateModular object for that id.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["fetch"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/job_template.TemplateSelectOpts"},"templateIds":{"type":"array","items":{"type":"string"}}},"required":["selectOpts","templateIds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetch"]},"result":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/job_template.TemplateFetchResult"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetch"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#getLatestVersions":{"post":{"tags":["/api/job_templates"],"summary":"getLatestVersions","description":"Fetch a map of the given templates ids to their latest version","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getLatestVersions"]},"arguments":{"type":"object","properties":{"templateIds":{"type":"array","items":{"type":"string"}}},"required":["templateIds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getLatestVersions"]},"result":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getLatestVersions"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#create":{"post":{"tags":["/api/job_templates"],"summary":"create","description":"Create a new template","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["create"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"params":{"$ref":"#/components/schemas/job_template.JobTemplateParams"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"required":["teamId","attributes"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["create"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["create"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#update":{"post":{"tags":["/api/job_templates"],"summary":"update","description":"Update template title, description","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["update"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"params":{"$ref":"#/components/schemas/job_template.JobTemplateParams"}},"required":["jobTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#archive":{"post":{"tags":["/api/job_templates"],"summary":"archive","description":"Mark a job template as archived. Archived templates cannot be edited or used to start jobs. This marks all versions of\nthe job template as archived","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["archive"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"}},"required":["jobTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#unarchive":{"post":{"tags":["/api/job_templates"],"summary":"unarchive","description":"Mark a job template as unarchived. This marks all versions of the job template as unarchived","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["unarchive"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"}},"required":["jobTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchive"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#publish":{"post":{"tags":["/api/job_templates"],"summary":"publish","description":"Publish a job template","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["publish"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"}},"required":["jobTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["publish"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["publish"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#getPublicVersion":{"post":{"tags":["/api/job_templates"],"summary":"getPublicVersion","description":"Get a JobTemplate based on public version. <br><br>If publicVersion is 0, get the currently published version","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getPublicVersion"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"publicVersion":{"type":"integer","format":"int32"}},"required":["jobTemplateId","publicVersion"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getPublicVersion"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getPublicVersion"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#fetchPublicVersions":{"post":{"tags":["/api/job_templates"],"summary":"fetchPublicVersions","description":"Get a list of JobTemplateModulars based on a list of template ids and their public versions. <br><br>If publicVersion is 0, get the currently published version. <br><br>Returns a map<UUID, map<VersionNumber, JobTemplateModular/Error>> response.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["fetchPublicVersions"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/job_template.TemplateSelectOpts"},"versions":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplatePublicVersion"}}},"required":["selectOpts","versions"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetchPublicVersions"]},"result":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/job_template.TemplateFetchResult"}}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetchPublicVersions"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#fetchPublishedVersions":{"post":{"tags":["/api/job_templates"],"summary":"fetchPublishedVersions","description":"Get a list of JobTemplateModulars based on a list of template ids and their published versions. <br><br>If publicVersion (publishedVersion) is 0, get the currently published version. <br><br>Returns a map<UUID, map<VersionNumber, JobTemplateModular/Error>> response.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["fetchPublishedVersions"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/job_template.TemplateSelectOpts"},"versions":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplatePublicVersion"}}},"required":["selectOpts","versions"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetchPublishedVersions"]},"result":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/job_template.TemplateFetchResult"}}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetchPublishedVersions"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#beginReview":{"post":{"tags":["/api/job_templates"],"summary":"beginReview","description":"Enter review state, which means that editing will be locked until the review process ends; also generates\na new public version number which is returned. When configured, this will also call a registered webhook.\n<br><br>\nDuring review state, all operations which add or update content will fail with an error.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["beginReview"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"}},"required":["jobTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["beginReview"]},"result":{"type":"integer","format":"int32"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["beginReview"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#endReview":{"post":{"tags":["/api/job_templates"],"summary":"endReview","description":"Exit review state, release editing lock; returns current public version number.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["endReview"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"}},"required":["jobTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["endReview"]},"result":{"type":"integer","format":"int32"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["endReview"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#publishVersion":{"post":{"tags":["/api/job_templates"],"summary":"publishVersion","description":"Publish a specified version of the job template; must be called AFTER endReview","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["publishVersion"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"publicVersion":{"type":"integer","format":"int32"}},"required":["jobTemplateId","publicVersion"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["publishVersion"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["publishVersion"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#cloneTemplate":{"post":{"tags":["/api/job_templates"],"summary":"cloneTemplate","description":"Clone an entire template.\n\nErrorCodes:\n  RESOURCE_ARCHIVED - returned when there exist steps in the copied template that are assigned to an archived role","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["cloneTemplate"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"}},"required":["jobTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneTemplate"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneTemplate"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#addStepModular":{"post":{"tags":["/api/job_templates"],"summary":"addStepModular","description":"Add a step to a step group in a job template and return modular template.\n<ul>\n<li>position is the position to insert the new step. position == -1 inserts it at the end.</li>\n<li>If replace == true then it will replace instead of inserting at the position.</li>\n</ul>","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addStepModular"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"parentId":{"type":"string"},"step":{"$ref":"#/components/schemas/step.BaseStep"},"position":{"type":"integer","format":"int32"},"replace":{"type":"boolean"}},"required":["jobTemplateId","parentId","step","position","replace"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addStepModular"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addStepModular"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#addStepGroupModular":{"post":{"tags":["/api/job_templates"],"summary":"addStepGroupModular","description":"Add a step group to a step group in a job template and return modular template.\n<ul>\n<li>position is the position to insert the new step group. position == -1 inserts it at the end.</li>\n<li>If replace == true then it will replace instead of inserting at the position.</li>\n</ul>","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addStepGroupModular"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"parentId":{"type":"string"},"stepGroup":{"$ref":"#/components/schemas/step.BaseStep"},"position":{"type":"integer","format":"int32"},"replace":{"type":"boolean"}},"required":["jobTemplateId","parentId","stepGroup","position","replace"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addStepGroupModular"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addStepGroupModular"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#moveStepModular":{"post":{"tags":["/api/job_templates"],"summary":"moveStepModular","description":"Move a step to a step group in a job template and return modular template.\n<ul>\n<li>parentId/newParentId is the old/new step group to move the current step from/to.</li>\n<li>oldPosition/newPosition is the old/new position to move the current step from/to. newPosition == -1 inserts it at the end.</li>\n<li>Can move between step groups if parentId != newParentId.</li>\n</ul>","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["moveStepModular"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"parentId":{"type":"string"},"stepId":{"type":"string"},"oldPosition":{"type":"integer","format":"int32"},"newParentId":{"type":"string"},"newPosition":{"type":"integer","format":"int32"}},"required":["jobTemplateId","parentId","stepId","oldPosition","newParentId","newPosition"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["moveStepModular"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["moveStepModular"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#moveStepGroupModular":{"post":{"tags":["/api/job_templates"],"summary":"moveStepGroupModular","description":"Move a step group to a step group in a job template and return modular template.\n<ul>\n<li>parentId/newParentId is the old/new step group to move the current step group from/to.</li>\n<li>oldPosition/newPosition is the old/new position to move the current step group from/to. newPosition == -1 inserts it at the end.</li>\n<li>Can move between step groups if parentId != newParentId.</li>\n</ul>","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["moveStepGroupModular"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"parentId":{"type":"string"},"stepGroupId":{"type":"string"},"oldPosition":{"type":"integer","format":"int32"},"newParentId":{"type":"string"},"newPosition":{"type":"integer","format":"int32"}},"required":["jobTemplateId","parentId","stepGroupId","oldPosition","newParentId","newPosition"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["moveStepGroupModular"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["moveStepGroupModular"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#removeStepModular":{"post":{"tags":["/api/job_templates"],"summary":"removeStepModular","description":"Remove a step from a step group in a job template and return modular template.\n<br><br>\nposition is the position the step is currently at.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["removeStepModular"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"parentId":{"type":"string"},"stepId":{"type":"string"},"position":{"type":"integer","format":"int32"}},"required":["jobTemplateId","parentId","stepId","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeStepModular"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeStepModular"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#removeStepGroupModular":{"post":{"tags":["/api/job_templates"],"summary":"removeStepGroupModular","description":"Remove a step group from a step group in a job template and return modular template.\n<br><br>\nposition is the position the step group is currently at.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["removeStepGroupModular"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"parentId":{"type":"string"},"stepGroupId":{"type":"string"},"position":{"type":"integer","format":"int32"}},"required":["jobTemplateId","parentId","stepGroupId","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeStepGroupModular"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeStepGroupModular"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#cloneStepModular":{"post":{"tags":["/api/job_templates"],"summary":"cloneStepModular","description":"Clone a step in a job template and return modular template.\n<ul>\n<li>parentId/newParentId is the old/new step group to clone the current step from/to.</li>\n<li>position/newPosition is the old/new position to clone the current step from/to. newPosition == -1 inserts it at the end.</li>\n<li>Can clone between step groups if parentId != newParentId.</li>\n</ul>","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["cloneStepModular"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"parentId":{"type":"string"},"stepId":{"type":"string"},"position":{"type":"integer","format":"int32"},"newParentId":{"type":"string"},"newPosition":{"type":"integer","format":"int32"}},"required":["jobTemplateId","parentId","stepId","position","newParentId","newPosition"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneStepModular"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneStepModular"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#cloneStepGroupModular":{"post":{"tags":["/api/job_templates"],"summary":"cloneStepGroupModular","description":"Clone a step group in a job template and return modular template.\n<ul>\n<li>parentId/newParentId is the old/new step group to clone the current step group from/to.</li>\n<li>position/newPosition is the old/new position to clone the current step group from/to. newPosition == -1 inserts it at the end.</li>\n<li>Can clone between step groups if parentId != newParentId.</li>\n</ul>","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["cloneStepGroupModular"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"parentId":{"type":"string"},"stepGroupId":{"type":"string"},"position":{"type":"integer","format":"int32"},"newParentId":{"type":"string"},"newPosition":{"type":"integer","format":"int32"}},"required":["jobTemplateId","parentId","stepGroupId","position","newParentId","newPosition"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneStepGroupModular"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["cloneStepGroupModular"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#addDocument":{"post":{"tags":["/api/job_templates"],"summary":"addDocument","description":"Add a document to a Job Template; update version","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addDocument"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"jobTemplateVersion":{"type":"integer","format":"int32"},"documentId":{"type":"string"}},"required":["jobTemplateId","jobTemplateVersion","documentId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addDocument"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addDocument"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#removeDocument":{"post":{"tags":["/api/job_templates"],"summary":"removeDocument","description":"Remove a document from a Job Template; update version","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["removeDocument"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"documentId":{"type":"string"}},"required":["jobTemplateId","documentId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeDocument"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeDocument"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#updateDocument":{"post":{"tags":["/api/job_templates"],"summary":"updateDocument","description":"Update a document to a Job Template; update version","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateDocument"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"documentId":{"type":"string"},"position":{"type":"integer","format":"int32"}},"required":["jobTemplateId","documentId","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateDocument"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateDocument"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#updateMetadata":{"post":{"tags":["/api/job_templates"],"summary":"updateMetadata","description":"Update the metadata on a template. Updated are the values to be added or updated on the template. RemovedIds are the IDs of the values to be removed from the template.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateMetadata"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"},"updated":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/metadata.MetadataValue"}},"removedIds":{"type":"array","items":{"type":"string"}}},"required":["jobTemplateId","updated","removedIds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadata"]},"result":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/metadata.MetadataEntry"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadata"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#acquireLock":{"post":{"tags":["/api/job_templates"],"summary":"acquireLock","description":"Start editing the template\nNote that this lock is associated with the specific authToken used, not just\nthe user owning that token. The life of the lock is until releaseLock (which\nshould be called when editing is complete), forcible takeover, or implicitly\non logout.\n\nReturns the new lock on success.\n\nIf the lock is already owned by another token, raises JobTemplateLockFailed with\nprevious lock information.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["acquireLock"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"}},"required":["jobTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["acquireLock"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplateLock"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["acquireLock"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#forceAcquireLock":{"post":{"tags":["/api/job_templates"],"summary":"forceAcquireLock","description":"Start editing the template, forcibly taking over any existing lock.\nNote that this lock is associated with the specific authToken used, not just\nthe user owning that token. The life of the lock is until releaseLock (which\nshould be called when editing is complete), forcible takeover, or implicitly\non logout.\n\nReturns the new lock in the response structure. If the lock was owned by another\ntoken, also returns details of previous lock. This method is intended to be called\nafter acquireLock fails and an explicit user response to forcibly take the lock.\n\nWARNING: this could result in data loss if another user is editing.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["forceAcquireLock"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"}},"required":["jobTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["forceAcquireLock"]},"result":{"$ref":"#/components/schemas/job_template.ForceAcquireResponse"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["forceAcquireLock"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#releaseLock":{"post":{"tags":["/api/job_templates"],"summary":"releaseLock","description":"Release the lock on the template; will throw exception if you don't have the lock","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["releaseLock"]},"arguments":{"type":"object","properties":{"jobTemplateId":{"type":"string"}},"required":["jobTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["releaseLock"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["releaseLock"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#getHistory":{"post":{"tags":["/api/job_templates"],"summary":"getHistory","description":"Get diff of requested version of a template against the latest version\nReturns a hashmap keyed off version. One entry for every requested internalVersion. Value is either an error indicating\nsomething went wrong with the diffing operation for that version or the JobTemplateModular object with diff fields filled in","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getHistory"]},"arguments":{"type":"object","properties":{"id":{"type":"string"},"internalVersions":{"type":"array","items":{"type":"integer","format":"int32"}},"otherVersion":{"type":"integer","format":"int32"}},"required":["id","internalVersions","otherVersion"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getHistory"]},"result":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/job_template.TemplateHistoryResult"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getHistory"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#revert":{"post":{"tags":["/api/job_templates"],"summary":"revert","description":"Copies the draft version referred to on top of the current latest draft version","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["revert"]},"arguments":{"type":"object","properties":{"id":{"type":"string"},"internalVersion":{"type":"integer","format":"int32"}},"required":["id","internalVersion"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["revert"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["revert"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/job_templates#updateAttribute":{"post":{"tags":["/api/job_templates"],"summary":"updateAttribute","description":"Update a single attribute on a job template\nreturn value will always be a list with a single attribute determined by which attribute was updated\n\nparam templateId: job template to update\nparam attributeId: the AttributeId of the team level attribute to be updated\nparam values: the new AttributeValues to associated with Attribute attributeId on template templateId\nparam behave: determine the behaviour of the endpoint, merge or clobber. Default: clobber","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateAttribute"]},"arguments":{"type":"object","properties":{"templateId":{"type":"string"},"attributeId":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttributeValue"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["templateId","attributeId","values","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/messages#send":{"post":{"tags":["/api/messages"],"summary":"send","description":"Send a message in a given job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["send"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"message":{"$ref":"#/components/schemas/messaging.Message"}},"required":["jobId","message"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["send"]},"result":{"$ref":"#/components/schemas/messaging.MessageResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["send"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/messages#get":{"post":{"tags":["/api/messages"],"summary":"get","description":"Get messages in a given job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["get"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"seqId":{"type":"integer","format":"int64"},"options":{"$ref":"#/components/schemas/messaging.GetMessageOptions"}},"required":["jobId","seqId","options"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"$ref":"#/components/schemas/messaging.GetMessagesResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/messages#createThread":{"post":{"tags":["/api/messages"],"summary":"createThread","description":"Create a new Message Thread under an element of a Template or Job","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["createThread"]},"arguments":{"type":"object","properties":{"threadPtr":{"$ref":"#/components/schemas/messaging.ThreadPtr"}},"required":["threadPtr"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createThread"]},"result":{"$ref":"#/components/schemas/messaging.Thread"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createThread"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/messages#sendToThread":{"post":{"tags":["/api/messages"],"summary":"sendToThread","description":"Send a message in a given message thread","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["sendToThread"]},"arguments":{"type":"object","properties":{"threadId":{"type":"string"},"message":{"$ref":"#/components/schemas/messaging.Message"}},"required":["threadId","message"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["sendToThread"]},"result":{"$ref":"#/components/schemas/messaging.ThreadMessageResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["sendToThread"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/messages#queryThreads":{"post":{"tags":["/api/messages"],"summary":"queryThreads","description":"Query threads, ordered by last activity by default","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["queryThreads"]},"arguments":{"type":"object","properties":{"whereOpts":{"$ref":"#/components/schemas/messaging.ThreadWhereOpts"}}}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["queryThreads"]},"result":{"$ref":"#/components/schemas/messaging.ThreadQueryResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["queryThreads"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/messages#updateThread":{"post":{"tags":["/api/messages"],"summary":"updateThread","description":"Update thread details. Can only update thread state, for now","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateThread"]},"arguments":{"type":"object","properties":{"threadId":{"type":"string"},"params":{"$ref":"#/components/schemas/messaging.ThreadParams"}},"required":["threadId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateThread"]},"result":{"$ref":"#/components/schemas/core_event.NodeVersion"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateThread"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#add":{"post":{"tags":["/api/metadata"],"summary":"add","description":"Add a metadata definition to the specified team; will assign an ID and a default position\nRaises BAD_REQUEST if key is not unique among unarchived metadata for the same team+owner;\n  note that it is OK to create a new item to replace an archived one with the same key","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["add"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"metadata":{"$ref":"#/components/schemas/metadata.Metadata"}},"required":["teamId","metadata"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["add"]},"result":{"$ref":"#/components/schemas/metadata.Metadata"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["add"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#index":{"post":{"tags":["/api/metadata"],"summary":"index","description":"Return all metadata definitions for requested teamId and owner, optionally with archived fields","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["index"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"owner":{"$ref":"#/components/schemas/metadata.Owner"},"includeArchived":{"type":"boolean"},"includeExternallyManaged":{"type":"boolean"}},"required":["teamId","owner","includeArchived","includeExternallyManaged"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["index"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/metadata.Metadata"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["index"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#get":{"post":{"tags":["/api/metadata"],"summary":"get","description":"Return a specific metadata definition","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["get"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"id":{"type":"string"}},"required":["teamId","id"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"$ref":"#/components/schemas/metadata.Metadata"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#update":{"post":{"tags":["/api/metadata"],"summary":"update","description":"Update a metadata definition.\n<br> Allowable update operations include:\n    a) change key name, b) position change (re-order), c) change required-ness,\n    d) modify range, e) change or clear default value, f) change externally-managed flag\n<br> Disallowed update operations include:\n    f) change list values (DEPRECATED, use <code>updateList&#42;</code> below for granular ops),\n    g) change to metadata owner, h) change to metadata type (except list -> multi-select list)","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["update"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"metadata":{"$ref":"#/components/schemas/metadata.Metadata"}},"required":["teamId","metadata"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#updateListAdd":{"post":{"tags":["/api/metadata"],"summary":"updateListAdd","description":"Add values to a list (or multi-select list) metadata\n<br> Append values to end of list by default. Insert into list position if <code>params</code> contains <code>position</code>, append to end of list when <code>position=-1</code>\n<br> Sort all values alphabetically if <code>params</code> contains <code>alphabetical=true</code>, ignoring <code>position</code> when set\n<br> Return added list value ids in original input order, error if metadata is not one of the list types or values already added or bad insert position","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateListAdd"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"metadataId":{"type":"string"},"values":{"type":"array","items":{"type":"string"}},"params":{"$ref":"#/components/schemas/metadata.ListOptionParams"}},"required":["teamId","metadataId","values"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateListAdd"]},"result":{"type":"array","items":{"type":"string"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateListAdd"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#updateListRemove":{"post":{"tags":["/api/metadata"],"summary":"updateListRemove","description":"Remove values from a list (or multi-select list) metadata\n<br> Remove values from list if they exist; active metadata list objects will remove these values automatically\n<br> Error if metadata is not one of the list types or values not found","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateListRemove"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"metadataId":{"type":"string"},"valueIds":{"type":"array","items":{"type":"string"}}},"required":["teamId","metadataId","valueIds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateListRemove"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateListRemove"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#updateListUpdate":{"post":{"tags":["/api/metadata"],"summary":"updateListUpdate","description":"Update values in a list (or multi-select list) metadata\n<br> Update value names if <code>params</code> contains <code>name</code>; active metadata list objects will update value names automatically\n<br> Move values to list position if <code>params</code> contains <code>position</code>, move to end of list when <code>position=-1</code>\n<br> Sort all values alphabetically if any <code>params</code> contains <code>alphabetical=true</code>, ignoring all <code>position</code> when set\n<br> Error if metadata is not one of the list types or values not found or bad move position\n<br> Note that multi-move position is not supported unless all params have the same position (bulk move).","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateListUpdate"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"metadataId":{"type":"string"},"valueIds":{"type":"array","items":{"type":"string"}},"params":{"type":"array","items":{"$ref":"#/components/schemas/metadata.ListOptionParams"}}},"required":["teamId","metadataId","valueIds","params"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateListUpdate"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateListUpdate"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#updateListMerge":{"post":{"tags":["/api/metadata"],"summary":"updateListMerge","description":"Merge values in a list (or multi-select list) metadata\n<br> Merge values into a single existing value; active metadata list objects will update all merged values to final value automatically\n<br> Error if metadata is not one of the list types or values/merged value not found","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateListMerge"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"metadataId":{"type":"string"},"valueIds":{"type":"array","items":{"type":"string"}},"mergedValueId":{"type":"string"}},"required":["teamId","metadataId","valueIds","mergedValueId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateListMerge"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateListMerge"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#archive":{"post":{"tags":["/api/metadata"],"summary":"archive","description":"Archive a metadata definition; this allows access to the metadata on existing\nowners, but prevents new users of the metadata","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["archive"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"id":{"type":"string"}},"required":["teamId","id"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#updateMetadataAttributes":{"post":{"tags":["/api/metadata"],"summary":"updateMetadataAttributes","description":"update Metadata Attributes\n\nprovide teamId to prevent extra lookups","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateMetadataAttributes"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"metadataId":{"type":"string"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["teamId","metadataId","attributes","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadataAttributes"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadataAttributes"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#updateMetadataAttribute":{"post":{"tags":["/api/metadata"],"summary":"updateMetadataAttribute","description":"update a Metadata abac actor with a single Attribute\n\nprovide teamId to prevent extra lookups","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateMetadataAttribute"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"metadataId":{"type":"string"},"attributeId":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttributeValue"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["teamId","metadataId","attributeId","values","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadataAttribute"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadataAttribute"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#updateMetadataValueAttributes":{"post":{"tags":["/api/metadata"],"summary":"updateMetadataValueAttributes","description":"update a Metadata Value abac actor with Attributes\n\nprovide teamId to prevent extra lookups","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateMetadataValueAttributes"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"metadataId":{"type":"string"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["teamId","metadataId","attributes","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadataValueAttributes"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadataValueAttributes"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/metadata#updateMetadataValueAttribute":{"post":{"tags":["/api/metadata"],"summary":"updateMetadataValueAttribute","description":"update Metadata Value with a single Attribute\n\nprovide teamId to prevent extra lookups","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateMetadataValueAttribute"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"metadataId":{"type":"string"},"attributeId":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttributeValue"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["teamId","metadataId","attributeId","values","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadataValueAttribute"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateMetadataValueAttribute"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#index":{"post":{"tags":["/api/notifications"],"summary":"index","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["index"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"}},"required":["teamId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["index"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/notification_template.NotificationTemplate"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["index"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#markRead":{"post":{"tags":["/api/notifications"],"summary":"markRead","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["markRead"]},"arguments":{"type":"object","properties":{"notificationId":{"type":"string"}},"required":["notificationId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["markRead"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["markRead"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#markUnread":{"post":{"tags":["/api/notifications"],"summary":"markUnread","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["markUnread"]},"arguments":{"type":"object","properties":{"notificationId":{"type":"string"}},"required":["notificationId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["markUnread"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["markUnread"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#markAllRead":{"post":{"tags":["/api/notifications"],"summary":"markAllRead","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["markAllRead"]},"arguments":{"type":"object","properties":{}}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["markAllRead"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["markAllRead"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#toggle":{"post":{"tags":["/api/notifications"],"summary":"toggle","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["toggle"]},"arguments":{"type":"object","properties":{"category":{"$ref":"#/components/schemas/notification.Category"},"types":{"$ref":"#/components/schemas/notification.NotificationTypes"}},"required":["category"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["toggle"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["toggle"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#getSettings":{"post":{"tags":["/api/notifications"],"summary":"getSettings","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getSettings"]},"arguments":{"type":"object","properties":{}}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getSettings"]},"result":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/notification.NotificationSetting"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getSettings"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#create":{"post":{"tags":["/api/notifications"],"summary":"create","description":"Create a new Notification Template","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["create"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"label":{"type":"string"},"type":{"$ref":"#/components/schemas/notification_template.NotificationTemplateType"},"payload":{"$ref":"#/components/schemas/notification_template.ReferenceableNotificationOp"},"notificationParams":{"$ref":"#/components/schemas/notification_template.NotificationParams"}},"required":["teamId","label","type","payload"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["create"]},"result":{"type":"string"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["create"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#createReference":{"post":{"tags":["/api/notifications"],"summary":"createReference","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["createReference"]},"arguments":{"type":"object","properties":{"notificationTemplateId":{"type":"string"},"fieldId":{"type":"string"},"references":{"type":"array","items":{"$ref":"#/components/schemas/reference.Reference"}},"targets":{"type":"array","items":{"$ref":"#/components/schemas/reference.Target"}}},"required":["notificationTemplateId","fieldId","references","targets"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createReference"]},"result":{"type":"string"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["createReference"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#notify":{"post":{"tags":["/api/notifications"],"summary":"notify","description":"Sends a notificationEvent to Notifications backend","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["notify"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"source":{"$ref":"#/components/schemas/notification_template.Source"}},"required":["teamId","source"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["notify"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/notification_event.NotificationEvent"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["notify"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#get":{"post":{"tags":["/api/notifications"],"summary":"get","description":"Get a Notification Template by id","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["get"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"notificationTemplateId":{"type":"string"}},"required":["teamId","notificationTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"$ref":"#/components/schemas/notification_template.NotificationTemplate"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#deleteReference":{"post":{"tags":["/api/notifications"],"summary":"deleteReference","description":"Delete a single one given link between a NotificationTemplate and a Field","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["deleteReference"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"notificationTemplateFieldId":{"type":"string"}},"required":["teamId","notificationTemplateFieldId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["deleteReference"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["deleteReference"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#deleteReferences":{"post":{"tags":["/api/notifications"],"summary":"deleteReferences","description":"Delete all Notification Templates that are linked to a Field","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["deleteReferences"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"fieldId":{"type":"string"}},"required":["teamId","fieldId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["deleteReferences"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["deleteReferences"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#update":{"post":{"tags":["/api/notifications"],"summary":"update","description":"Update a Notification Template","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["update"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"notificationTemplateId":{"type":"string"},"label":{"type":"string"},"payload":{"$ref":"#/components/schemas/notification_template.ReferenceableNotificationOp"},"notificationParams":{"$ref":"#/components/schemas/notification_template.NotificationParams"}},"required":["teamId","notificationTemplateId","label","payload"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#archive":{"post":{"tags":["/api/notifications"],"summary":"archive","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["archive"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"notificationTemplateId":{"type":"string"}},"required":["teamId","notificationTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#unarchive":{"post":{"tags":["/api/notifications"],"summary":"unarchive","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["unarchive"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"notificationTemplateId":{"type":"string"}},"required":["teamId","notificationTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchive"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#duplicate":{"post":{"tags":["/api/notifications"],"summary":"duplicate","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["duplicate"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"notificationTemplateId":{"type":"string"}},"required":["teamId","notificationTemplateId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["duplicate"]},"result":{"type":"string"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["duplicate"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/notifications#updateAttribute":{"post":{"tags":["/api/notifications"],"summary":"updateAttribute","description":"Update a single attribute on a job template\nreturn value will always be a list with a single attribute determined by which attribute was updated\n\nparam templateId: integration template to update\nparam attributeId: the AttributeId of the team level attribute to be updated\nparam values: the new AttributeValues to associated with Attribute attributeId on Integration Template templateId\nparam behave: determine the behaviour of the endpoint, merge or clobber. Default: clobber","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateAttribute"]},"arguments":{"type":"object","properties":{"templateId":{"type":"string"},"attributeId":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttributeValue"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["templateId","attributeId","values","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/reports#generateJobReport":{"post":{"tags":["/api/reports"],"summary":"generateJobReport","description":"Sends an email with the job report attached as pdf\nParams: these are liable to change, and are defined in gutenberg. Check here https://github.com/parsable/gutenberg/blob/master/src/components/JobDetailReport/ReportParams.md\nNote : Only send up true, do not send up false. The value checks for existence\nof paramater not the parameter value it self.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["generateJobReport"]},"arguments":{"type":"object","properties":{"jobId":{"type":"string"},"params":{"type":"object","additionalProperties":{"type":"string"}}},"required":["jobId","params"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["generateJobReport"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["generateJobReport"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/teams#listAllRegions":{"post":{"tags":["/api/teams"],"summary":"listAllRegions","description":"Unauthenticated endpoint returning the list of available region ids","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["listAllRegions"]},"arguments":{"type":"object","properties":{}}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["listAllRegions"]},"result":{"type":"array","items":{"type":"string"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["listAllRegions"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/teams#get":{"post":{"tags":["/api/teams"],"summary":"get","description":"Get information about a team by ID; user must belong to the team","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["get"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"}},"required":["teamId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"$ref":"#/components/schemas/team.Team"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["get"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/teams#index":{"post":{"tags":["/api/teams"],"summary":"index","description":"Returns the list of teams the current user belongs to","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["index"]},"arguments":{"type":"object","properties":{}}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["index"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/team.Team"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["index"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/teams#setTemplateApprovalWebhook":{"post":{"tags":["/api/teams"],"summary":"setTemplateApprovalWebhook","description":"Sets the webhook to be used for template approval flow.\n<br><br>\nThis webhook is invoked when a job template has been set to \"Ready for approval\" status.  The <code>webhookURL</code>\nis called using POST, with JSON content like:<pre>\n{\n    \"templateId\": \"TEMPLATE_GUID\",\n    \"publicVersion\": 3,\n    \"submitterId\": \"USER_GUID\"\n}</pre>\n<br><br>\nCall with an empty string to clear any previously configured webhook.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["setTemplateApprovalWebhook"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"webhookUrl":{"type":"string"}},"required":["teamId","webhookUrl"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["setTemplateApprovalWebhook"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["setTemplateApprovalWebhook"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/teams#setTemplateSetApprovalWebhook":{"post":{"tags":["/api/teams"],"summary":"setTemplateSetApprovalWebhook","description":"Sets the webhook to be used for the template set approval flow.\n<br><br>\nThis webhook is invoked when a template set has been set to \"Ready for approval\" status.  The <code>webhookURL</code>\nis called using POST, with JSON content like:<pre>\n{\n    \"templateSetId\": \"TEMPLATE_GUID\",\n    \"publicVersion\": 3,\n    \"submitterId\": \"USER_GUID\"\n}</pre>\n<br><br>\nCall with an empty string to clear any previously configured webhook.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["setTemplateSetApprovalWebhook"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"webhookUrl":{"type":"string"}},"required":["teamId","webhookUrl"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["setTemplateSetApprovalWebhook"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["setTemplateSetApprovalWebhook"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#query":{"post":{"tags":["/api/template_sets"],"summary":"query","description":"Query a list of template sets","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["query"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/template_set.TemplateSetSelectOpts"},"whereOpts":{"$ref":"#/components/schemas/job_template.TemplateWhereOpts"},"order":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateOrder"}}},"required":["selectOpts","whereOpts","order"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["query"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSetQueryResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["query"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#fetch":{"post":{"tags":["/api/template_sets"],"summary":"fetch","description":"Get a template set","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["fetch"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/template_set.TemplateSetSelectOpts"},"templateSetIds":{"type":"array","items":{"type":"string"}}},"required":["selectOpts","templateSetIds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetch"]},"result":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/template_set.TemplateSetFetchResult"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetch"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#create":{"post":{"tags":["/api/template_sets"],"summary":"create","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["create"]},"arguments":{"type":"object","properties":{"teamId":{"type":"string"},"params":{"$ref":"#/components/schemas/template_set.TemplateSetParams"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"required":["teamId","attributes"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["create"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["create"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#update":{"post":{"tags":["/api/template_sets"],"summary":"update","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["update"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"internalVersion":{"type":"integer","format":"int32"},"params":{"$ref":"#/components/schemas/template_set.TemplateSetParams"}},"required":["templateSetId","internalVersion"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["update"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#archive":{"post":{"tags":["/api/template_sets"],"summary":"archive","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["archive"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"}},"required":["templateSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["archive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#unarchive":{"post":{"tags":["/api/template_sets"],"summary":"unarchive","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["unarchive"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"}},"required":["templateSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchive"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["unarchive"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#publish":{"post":{"tags":["/api/template_sets"],"summary":"publish","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["publish"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"}},"required":["templateSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["publish"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["publish"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#getPublicVersion":{"post":{"tags":["/api/template_sets"],"summary":"getPublicVersion","description":"Get a published TemplateSet. <br><br>If publicVersion is 0, get the currently published version","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getPublicVersion"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"publicVersion":{"type":"integer","format":"int32"}},"required":["templateSetId","publicVersion"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getPublicVersion"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getPublicVersion"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#beginReview":{"post":{"tags":["/api/template_sets"],"summary":"beginReview","description":"Enter review state, which means that editing will be locked until the review process ends; also generates\na new public version number which is returned. When configured, this will also call a registered webhook.\n<br><br>\nDuring review state, all operations which add or update content will fail with an error.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["beginReview"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"}},"required":["templateSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["beginReview"]},"result":{"type":"integer","format":"int32"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["beginReview"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#endReview":{"post":{"tags":["/api/template_sets"],"summary":"endReview","description":"Exit review state, release editing lock; returns current public version number.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["endReview"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"}},"required":["templateSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["endReview"]},"result":{"type":"integer","format":"int32"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["endReview"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#publishVersion":{"post":{"tags":["/api/template_sets"],"summary":"publishVersion","description":"Publish a specified version of the template set; must be called AFTER endReview","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["publishVersion"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"publicVersion":{"type":"integer","format":"int32"}},"required":["templateSetId","publicVersion"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["publishVersion"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["publishVersion"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#addTemplate":{"post":{"tags":["/api/template_sets"],"summary":"addTemplate","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addTemplate"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"internalVersion":{"type":"integer","format":"int32"},"templateId":{"type":"string"},"position":{"type":"integer","format":"int32"},"replace":{"type":"boolean"}},"required":["templateSetId","internalVersion","templateId","position","replace"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addTemplate"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addTemplate"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#addTemplateSet":{"post":{"tags":["/api/template_sets"],"summary":"addTemplateSet","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["addTemplateSet"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"internalVersion":{"type":"integer","format":"int32"},"addedSetId":{"type":"string"},"position":{"type":"integer","format":"int32"}},"required":["templateSetId","internalVersion","addedSetId","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addTemplateSet"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["addTemplateSet"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#moveTemplate":{"post":{"tags":["/api/template_sets"],"summary":"moveTemplate","description":"Move a template to a different position in the template set","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["moveTemplate"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"internalVersion":{"type":"integer","format":"int32"},"templateId":{"type":"string"},"oldPosition":{"type":"integer","format":"int32"},"newPosition":{"type":"integer","format":"int32"}},"required":["templateSetId","internalVersion","templateId","oldPosition","newPosition"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["moveTemplate"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["moveTemplate"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#removeTemplate":{"post":{"tags":["/api/template_sets"],"summary":"removeTemplate","description":"Remove a template from the template set","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["removeTemplate"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"internalVersion":{"type":"integer","format":"int32"},"templateId":{"type":"string"},"position":{"type":"integer","format":"int32"}},"required":["templateSetId","internalVersion","templateId","position"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeTemplate"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["removeTemplate"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#setTemplateList":{"post":{"tags":["/api/template_sets"],"summary":"setTemplateList","description":"Set full list of templates on a template set. This replaces the need for consecutive api calls when moving, removing, and adding  templates","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["setTemplateList"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"internalVersion":{"type":"integer","format":"int32"},"movements":{"type":"array","items":{"$ref":"#/components/schemas/common.ListActions"}}},"required":["templateSetId","internalVersion","movements"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["setTemplateList"]},"result":{"$ref":"#/components/schemas/template_set.TemplateSet"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["setTemplateList"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#getTags":{"post":{"tags":["/api/template_sets"],"summary":"getTags","description":"Get all of the tags and comments for a template set","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getTags"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"}},"required":["templateSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getTags"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateTag"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getTags"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#updateTags":{"post":{"tags":["/api/template_sets"],"summary":"updateTags","description":"Update the tags on a template set. additions are the tags and comments to be added to the template. Removals are the ids of the tags to be removed from the template.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateTags"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"added":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateTag"}},"removedTagIds":{"type":"array","items":{"type":"string"}}},"required":["templateSetId","added","removedTagIds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateTags"]},"result":{"type":"object"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateTags"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#acquireLock":{"post":{"tags":["/api/template_sets"],"summary":"acquireLock","description":"Start editing the template set\nNote that this lock is associated with the specific authToken used, not just\nthe user owning that token. The life of the lock is until releaseLock (which\nshould be called when editing is complete), forcible takeover, or implicitly\non logout.\n\nReturns the new lock on success.\n\nIf the lock is already owned by another token, raises JobTemplateLockFailed with\nprevious lock information.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["acquireLock"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"}},"required":["templateSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["acquireLock"]},"result":{"$ref":"#/components/schemas/job_template.JobTemplateLock"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["acquireLock"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#forceAcquireLock":{"post":{"tags":["/api/template_sets"],"summary":"forceAcquireLock","description":"Start editing the template, forcibly taking over any existing lock.\nNote that this lock is associated with the specific authToken used, not just\nthe user owning that token. The life of the lock is until releaseLock (which\nshould be called when editing is complete), forcible takeover, or implicitly\non logout.\n\nReturns the new lock in the response structure. If the lock was owned by another\ntoken, also returns details of previous lock. This method is intended to be called\nafter acquireLock fails and an explicit user response to forcibly take the lock.\n\nWARNING: this could result in data loss if another user is editing.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["forceAcquireLock"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"}},"required":["templateSetId"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["forceAcquireLock"]},"result":{"$ref":"#/components/schemas/job_template.ForceAcquireResponse"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["forceAcquireLock"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#queryCombined":{"post":{"tags":["/api/template_sets"],"summary":"queryCombined","description":"Query across both templates and template sets.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["queryCombined"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/template_set.TemplateUnionSelectOpts"},"whereOpts":{"$ref":"#/components/schemas/template_set.TemplateUnionWhereOpts"},"order":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateOrder"}}},"required":["selectOpts","whereOpts","order"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["queryCombined"]},"result":{"$ref":"#/components/schemas/template_set.TemplateUnionQueryResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["queryCombined"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#fetchUpdated":{"post":{"tags":["/api/template_sets"],"summary":"fetchUpdated","description":"Only returns back templates and sets where either the version or the archivedAt timestamps don't match\nTo figure out if you have the latest versions of the templates inside the template sets, pass those\nalong in the templateArgs","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["fetchUpdated"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/template_set.TemplateUnionSelectOpts"},"templateArgs":{"type":"array","items":{"$ref":"#/components/schemas/template_set.VersionRef"}},"templateSetArgs":{"type":"array","items":{"$ref":"#/components/schemas/template_set.VersionRef"}}},"required":["selectOpts","templateArgs","templateSetArgs"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetchUpdated"]},"result":{"$ref":"#/components/schemas/template_set.TemplateUnionFetchResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetchUpdated"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/template_sets#updateAttribute":{"post":{"tags":["/api/template_sets"],"summary":"updateAttribute","description":"Update a single attribute on a template set\nreturn value will always be a list with a single attribute determined by which attribute was updated\n\nparam templateSetId: template set to update\nparam attributeId: the AttributeId of the team level attribute to be updated\nparam values: the new AttributeValues to associated with Attribute attributeId on template set templateSetId\nparam behave: determine the behaviour of the endpoint, merge or clobber. Default: clobber","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateAttribute"]},"arguments":{"type":"object","properties":{"templateSetId":{"type":"string"},"attributeId":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttributeValue"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["templateSetId","attributeId","values","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/thread_event#getThreadEvents":{"post":{"tags":["/api/thread_event"],"summary":"getThreadEvents","description":"Get thread events since the last node versions. If nodeVersions is nil or empty, return all events","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["getThreadEvents"]},"arguments":{"type":"object","properties":{"threadId":{"type":"string"},"nodeVersions":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}}},"required":["threadId","nodeVersions"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getThreadEvents"]},"result":{"$ref":"#/components/schemas/thread_event.ThreadEventsResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["getThreadEvents"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/users#query":{"post":{"tags":["/api/users"],"summary":"query","description":"Query a list of Team Users","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["query"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/user.UserSelectOpts"},"whereOpts":{"$ref":"#/components/schemas/user.UserWhereOpts"},"order":{"type":"array","items":{"$ref":"#/components/schemas/user.UserOrder"}}},"required":["selectOpts","order"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["query"]},"result":{"$ref":"#/components/schemas/user.UserQueryResult"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["query"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/users#fetch":{"post":{"tags":["/api/users"],"summary":"fetch","description":"Fetch a specific list of Team Users with no team-specific information; allowed for any users on a shared team (EXECUTION use case)","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["fetch"]},"arguments":{"type":"object","properties":{"userIds":{"type":"array","items":{"type":"string"}}},"required":["userIds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetch"]},"result":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/user.UserFetchResult"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetch"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/users#fetchByTeam":{"post":{"tags":["/api/users"],"summary":"fetchByTeam","description":"Fetch a specific list of Team Users for a team; allows getting additional team-specific data via SelectOpts (ADMIN use case, requires ADMIN or JOBCREATOR role)","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["fetchByTeam"]},"arguments":{"type":"object","properties":{"selectOpts":{"$ref":"#/components/schemas/user.UserSelectOpts"},"teamId":{"type":"string"},"userIds":{"type":"array","items":{"type":"string"}}},"required":["selectOpts","teamId","userIds"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetchByTeam"]},"result":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/user.UserFetchResult"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["fetchByTeam"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/users#updateWithPassword":{"post":{"tags":["/api/users"],"summary":"updateWithPassword","description":"Update a user","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateWithPassword"]},"arguments":{"type":"object","properties":{"details":{"$ref":"#/components/schemas/user.User"},"password":{"type":"string"}},"required":["details","password"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateWithPassword"]},"result":{"$ref":"#/components/schemas/user.User"}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateWithPassword"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}},"/api/users#updateAttribute":{"post":{"tags":["/api/users"],"summary":"updateAttribute","description":"Update a single attribute on a user on a team\nreturn value will always be a list with a single attribute determined by which attribute was updated\n\nparam userId: user to update\nparam teamId: team on which to update the users attributes\nparam attributeId: the AttributeId of the team level attribute to be updated\nparam values: the new AttributeValues to associated with Attribute attributeId on user userId\nparam behave: determine the behaviour of the endpoint, merge or clobber. Default: clobber","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","arguments"],"properties":{"method":{"type":"string","enum":["updateAttribute"]},"arguments":{"type":"object","properties":{"userId":{"type":"string"},"teamId":{"type":"string"},"attributeId":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttributeValue"}},"behave":{"$ref":"#/components/schemas/abac.AbacUploadBehaviour"}},"required":["userId","teamId","attributeId","values","behave"]}}}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}}}}},"default":{"description":"","content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","enum":["updateAttribute"]},"result":{"type":"object","properties":{"err":{"$ref":"#/components/schemas/common.SystemException"}}}}}}}}},"security":[{"ApiKeyAuth":[]}]}}},"components":{"schemas":{"abac.AbacActorType":{"description":"0 - USER\n1 - TEAM\n2 - JOB\n3 - JOB_TEMPLATE\n4 - TEMPLATE_SET\n5 - ISSUE\n6 - DATASHEET\n7 - POLICY\n8 - POLICY_SET\n9 - WORKFLOW\n10 - ANALYTICS\n11 - TEAM_SETTINGS\n12 - INTEGRATION_TEMPLATE\n13 - METADATA\n14 - METADATA_VALUE\n","type":"number","enum":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]},"abac.AbacAction":{"description":"All actions available through the parsable api\n0 - VIEW\n1 - CREATE\n2 - EDIT\n3 - EXECUTE\n4 - PUBLISH\n5 - COLLABORATE\n6 - ARCHIVE\n","type":"number","enum":[0,1,2,3,4,5,6]},"abac.AbacUploadBehaviour":{"description":"Attribute Value Update Behaviour\n0 - CLOBBER\n1 - MERGE - clobber all existing values with new values\n","type":"number","enum":[0,1]},"abac.TeamScopedAbacAttributes":{"description":"\nouter map keys lists of AbacAttributes to team ids\n\n","type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"abac.AbacActor":{"properties":{"id":{"type":"string"},"version":{"type":"integer","format":"int32"},"type":{"$ref":"#/components/schemas/abac.AbacActorType"}},"type":"object","required":["id","type"]},"abac.AbacAttributeValue":{"description":"The value of a parsable ABAC attribute\n","properties":{"id":{"type":"string"},"label":{"type":"string"}},"type":"object","required":["id","label"]},"abac.AbacAttribute":{"description":"Transport for ABAC attribute definitions\n","properties":{"id":{"type":"string"},"label":{"type":"string"},"values":{"description":"ui label for this attribute\n","type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttributeValue"}}},"type":"object","required":["id","label","values"]},"abac.AbacResolutionRequest":{"description":"<object> <subject> <action> represents an authorization resolution request.\nCan <object> perform <action> on <subject>\n","properties":{"object":{"$ref":"#/components/schemas/abac.AbacActor"},"subject":{"$ref":"#/components/schemas/abac.AbacActor"},"action":{"$ref":"#/components/schemas/abac.AbacAction"},"teamId":{"description":"the action being authorized: edit, view, archive, etc\n","type":"string"}},"type":"object","required":["object","subject","action","teamId"]},"abac.AbacResolution":{"description":"Result of an individual ABAC resolution request\nWe send back the object, subject and action to the client to support batch processing\n","properties":{"object":{"$ref":"#/components/schemas/abac.AbacActor"},"subject":{"$ref":"#/components/schemas/abac.AbacActor"},"action":{"$ref":"#/components/schemas/abac.AbacAction"},"teamId":{"description":"the action being authorized: edit, view, archive, etc\n","type":"string"},"authorized":{"description":"the team context that this request is being made within\n","type":"boolean"}},"type":"object","required":["object","subject","action","teamId","authorized"]},"abac.AbacPolicy":{"description":"An ABAC Policy\n","properties":{"id":{"type":"string"},"label":{"description":"backend assigned unique id, if omitted, o\n","type":"string"},"description":{"description":"human readable label for policy\n","type":"string"},"policy":{"description":"human readable description of policy effect\n","type":"string"},"teamId":{"description":"currently expects json string\n","type":"string"}},"type":"object","required":["id","label","description","policy","teamId"]},"abac.AbacUpdateAttributeResult":{"properties":{"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}},"actor":{"$ref":"#/components/schemas/abac.AbacActor"},"err":{"$ref":"#/components/schemas/common.SystemException"}},"type":"object","required":["attributes"]},"account.Account":{"properties":{"id":{"type":"string"},"name":{"type":"string"},"owner":{"$ref":"#/components/schemas/user.User"},"subTeams":{"type":"array","items":{"$ref":"#/components/schemas/team.TeamModular"}}},"type":"object","required":["id","name","owner","subTeams"]},"account.AccountParams":{"properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"}},"type":"object"},"analytics.FilterOp":{"description":"1 - CONTAINS\n2 - CONTAINS_NONE\n3 - CONTAINS_ALL\n4 - MATCHES\n5 - NOT_MATCHES\n","type":"number","enum":[1,2,3,4,5]},"analytics.UserFilterType":{"description":"1 - ROLE\n","type":"number","enum":[1]},"analytics.JobFilterType":{"description":"1 - STATE\n2 - TEMPLATE\n3 - ROLE\n","type":"number","enum":[1,2,3]},"analytics.TemplateFilterType":{"description":"1 - STATE\n2 - TYPE\n","type":"number","enum":[1,2]},"analytics.IssueFilterType":{"description":"1 - STATE\n2 - PRIORITY\n3 - TEMPLATE\n4 - ROLE\n5 - OPENED_BY_USER\n6 - RESOLVED_BY_USER\n","type":"number","enum":[1,2,3,4,5,6]},"analytics.DeviationFilterType":{"description":"1 - TYPE\n3 - TEMPLATE\n4 - ROLE\n","type":"number","enum":[1,3,4]},"analytics.StepAveragesFilterType":{"description":"1 - TEMPLATE\n","type":"number","enum":[1]},"analytics.SummaryColumn":{"description":"1 - EXCLUDE\n2 - INCLUDE\n3 - ONLY\n","type":"number","enum":[1,2,3]},"analytics.JobState":{"description":"1 - ACTIVE\n2 - COMPLETED\n3 - PLANNING\n","type":"number","enum":[1,2,3]},"analytics.TemplateState":{"description":"1 - DRAFT\n2 - PUBLISHED\n3 - ARCHIVED\n","type":"number","enum":[1,2,3]},"analytics.IssueState":{"description":"1 - OPEN\n2 - RESOLVED\n3 - UNRESOLVED\n","type":"number","enum":[1,2,3]},"analytics.TimeUnit":{"description":"1 - SECOND\n2 - MINUTE\n3 - HOUR\n4 - DAY\n5 - WEEK\n6 - MONTH\n7 - YEAR\n","type":"number","enum":[1,2,3,4,5,6,7]},"analytics.NumberArg":{"properties":{"vals":{"type":"array","items":{"type":"number","format":"double"}},"tolerance":{"type":"number","format":"double"}},"type":"object","required":["vals"]},"analytics.FilterArg":{"properties":{"textMatch":{"description":"string value; uses full text matching\n","type":"string"},"numbers":{"$ref":"#/components/schemas/analytics.NumberArg"},"listValueIds":{"$ref":"#/components/schemas/common.SelectedListValueIds"},"objIds":{"$ref":"#/components/schemas/common.UUIDSet"},"enumValues":{"description":"list of enum type values (specific enum depends on Key)\n","type":"array","items":{"type":"integer","format":"int32"}}},"type":"object","required":["textMatch","numbers","listValueIds","objIds","enumValues"]},"analytics.DashFilterKey":{"properties":{"user":{"$ref":"#/components/schemas/analytics.UserFilterType"},"job":{"$ref":"#/components/schemas/analytics.JobFilterType"},"template":{"$ref":"#/components/schemas/analytics.TemplateFilterType"},"issue":{"$ref":"#/components/schemas/analytics.IssueFilterType"},"deviation":{"$ref":"#/components/schemas/analytics.DeviationFilterType"},"stepAverages":{"$ref":"#/components/schemas/analytics.StepAveragesFilterType"},"jobMetadataId":{"type":"string"},"templateMetadataId":{"type":"string"}},"type":"object","required":["user","job","template","issue","deviation","stepAverages","jobMetadataId","templateMetadataId"]},"analytics.DashFilter":{"properties":{"what":{"$ref":"#/components/schemas/analytics.DashFilterKey"},"op":{"$ref":"#/components/schemas/analytics.FilterOp"},"arg":{"$ref":"#/components/schemas/analytics.FilterArg"}},"type":"object","required":["what","op","arg"]},"analytics.UsersDashboard":{"properties":{"includeRoles":{"type":"array","items":{"$ref":"#/components/schemas/user.TeamRole"}},"includeAnyRole":{"type":"boolean"},"total":{"$ref":"#/components/schemas/analytics.SummaryColumn"}},"type":"object","required":["includeAnyRole"]},"analytics.JobsDashboard":{"properties":{"includeStates":{"type":"array","items":{"$ref":"#/components/schemas/analytics.JobState"}},"requireTemplates":{"type":"array","items":{"type":"string"}},"requireRoles":{"type":"array","items":{"type":"string"}},"jobMetadata":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"templateMetadata":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"showDuration":{"type":"boolean"}},"type":"object","required":["showDuration"]},"analytics.TemplateDashboard":{"properties":{"includeStates":{"type":"array","items":{"$ref":"#/components/schemas/analytics.TemplateState"}},"includeTypes":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateType"}},"templateMetadata":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}}},"type":"object"},"analytics.IssuesDashboard":{"properties":{"includeStates":{"type":"array","items":{"$ref":"#/components/schemas/analytics.IssueState"}},"includePriorities":{"type":"array","items":{"$ref":"#/components/schemas/job.PriorityLevel"}},"requireOpenUsers":{"type":"array","items":{"type":"string"}},"requireResolveUsers":{"type":"array","items":{"type":"string"}},"requireTemplates":{"type":"array","items":{"type":"string"}},"requireRoles":{"type":"array","items":{"type":"string"}},"showDuration":{"type":"boolean"},"showList":{"type":"boolean"},"pageReq":{"$ref":"#/components/schemas/common.PageReq"}},"type":"object","required":["showDuration","showList"]},"analytics.DeviationsDashboard":{"properties":{"includeTypes":{"type":"array","items":{"$ref":"#/components/schemas/job.JobDeviationType"}},"requireTemplates":{"type":"array","items":{"type":"string"}},"requireRoles":{"type":"array","items":{"type":"string"}},"jobMetadata":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"templateMetadata":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"total":{"$ref":"#/components/schemas/analytics.SummaryColumn"}},"type":"object"},"analytics.StepsDashboard":{"properties":{"jobId":{"type":"string"}},"type":"object","required":["jobId"]},"analytics.StepAveragesDashboard":{"properties":{"requireTemplates":{"type":"array","items":{"type":"string"}},"jobMetadata":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"templateMetadata":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}}},"type":"object"},"analytics.DashboardSelection":{"properties":{"users":{"$ref":"#/components/schemas/analytics.UsersDashboard"},"jobs":{"$ref":"#/components/schemas/analytics.JobsDashboard"},"templates":{"$ref":"#/components/schemas/analytics.TemplateDashboard"},"issues":{"$ref":"#/components/schemas/analytics.IssuesDashboard"},"deviations":{"$ref":"#/components/schemas/analytics.DeviationsDashboard"},"steps":{"$ref":"#/components/schemas/analytics.StepsDashboard"},"stepAverages":{"$ref":"#/components/schemas/analytics.StepAveragesDashboard"}},"type":"object","required":["users","jobs","templates","issues","deviations","steps","stepAverages"]},"analytics.TimeIncrement":{"properties":{"unit":{"$ref":"#/components/schemas/analytics.TimeUnit"},"count":{"type":"integer","format":"int32"}},"type":"object","required":["unit","count"]},"analytics.DashboardConfig":{"properties":{"teamId":{"type":"string"},"startTime":{"type":"integer","format":"int64"},"endTime":{"type":"integer","format":"int64"},"stepTime":{"type":"integer","format":"int64"},"tz":{"type":"string"},"timeGranularity":{"$ref":"#/components/schemas/analytics.TimeIncrement"},"select":{"$ref":"#/components/schemas/analytics.DashboardSelection"},"filters":{"type":"array","items":{"$ref":"#/components/schemas/analytics.DashFilter"}}},"type":"object","required":["teamId","startTime","endTime","select","filters"]},"analytics.Dashboard":{"properties":{"url":{"type":"string"}},"type":"object","required":["url"]},"analytics_event.JobEnterOp":{"properties":{"isEntered":{"type":"boolean"}},"type":"object","required":["isEntered"]},"analytics_event.StepGroupEnterOp":{"properties":{"jobStepGroupId":{"type":"string"},"stepGroupId":{"type":"string"},"isEntered":{"type":"boolean"}},"type":"object","required":["jobStepGroupId","isEntered"]},"analytics_event.StepEnterOp":{"properties":{"jobStepId":{"type":"string"},"stepId":{"type":"string"},"isEntered":{"type":"boolean"}},"type":"object","required":["jobStepId","isEntered"]},"analytics_event.FieldEnterOp":{"properties":{"jobStepId":{"type":"string"},"stepId":{"type":"string"},"fieldId":{"type":"string"},"isEntered":{"type":"boolean"}},"type":"object","required":["jobStepId","fieldId","isEntered"]},"analytics_event.JobAnalyticsOp":{"properties":{"jobEnter":{"$ref":"#/components/schemas/analytics_event.JobEnterOp"},"stepEnter":{"$ref":"#/components/schemas/analytics_event.StepEnterOp"},"stepGroupEnter":{"$ref":"#/components/schemas/analytics_event.StepGroupEnterOp"},"fieldEnter":{"$ref":"#/components/schemas/analytics_event.FieldEnterOp"}},"type":"object","required":["jobEnter","stepEnter","stepGroupEnter","fieldEnter"]},"analytics_event.JobAnalyticsEvent":{"properties":{"jobId":{"type":"string"},"pedigree":{"$ref":"#/components/schemas/core_event.Pedigree"},"op":{"$ref":"#/components/schemas/analytics_event.JobAnalyticsOp"},"receivedAt":{"type":"integer","format":"int64"}},"type":"object","required":["jobId","pedigree","op"]},"authentication.PushVendor":{"description":"NOHTML Identifies the mobile device push notification vendor\n1 - AAPL\n2 - GOOG\n3 - AAPL_ENTERPRISE\n","type":"number","enum":[1,2,3]},"authentication.ExtraAuthType":{"description":"NOHTML\n0 - ZENDESK_TOKEN_WEB - Returns the zendesk jwt token for web SSO.\n1 - ZENDESK_TOKEN_MOBILE - Returns the zendesk sdk unique user token, encoded in jwt.\nUsed by the /api/zendesk/jwt endpoint for mobile SDK.\n","type":"number","enum":[0,1]},"authentication.PushReceiver":{"description":"NOHTML *\n","properties":{"token":{"type":"string"},"vendor":{"$ref":"#/components/schemas/authentication.PushVendor"}},"type":"object","required":["token","vendor"]},"authentication.UserSession":{"description":"NOHTML\n","properties":{"userId":{"type":"string"},"authToken":{"type":"string"},"receiver":{"$ref":"#/components/schemas/authentication.PushReceiver"}},"type":"object","required":["userId","authToken"]},"authentication.AuthPeriods":{"description":"NOHTML\n","properties":{"warning":{"type":"integer","format":"int64"},"lockout":{"type":"integer","format":"int64"},"dump":{"type":"integer","format":"int64"},"expiry":{"type":"integer","format":"int64"}},"type":"object","required":["warning","lockout","dump","expiry"]},"authentication.TeamInfo":{"properties":{"boolSettings":{"description":"This includes User + Device Overriden Settings\n","type":"object","additionalProperties":{"type":"boolean"}},"textSettings":{"type":"object","additionalProperties":{"type":"string"}},"optionSettings":{"type":"object","additionalProperties":{"type":"string"}},"priorities":{"type":"array","items":{"$ref":"#/components/schemas/job.PriorityLevel"}}},"type":"object","required":["boolSettings","textSettings","optionSettings"]},"authentication.LoginResult":{"properties":{"authToken":{"type":"string"},"currentUser":{"$ref":"#/components/schemas/user.User"},"teamIdToTeamRole":{"description":"Map of all the roles currentUser has across all the teams she is a part of\n","type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/user.TeamRole"}}},"teamIdToRegionId":{"description":"The following two maps indicate the API host to contact for\ncustomers with non-US deployments.  Every team is located on one\nregion, and the maps specify which region each of the teams you can\naccess are located, and for each of them what the relevant\nhostnames are.\n","type":"object","additionalProperties":{"type":"string"}},"regionIdToRegion":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/team.Region"}},"preferredRegionId":{"type":"string"},"periods":{"$ref":"#/components/schemas/authentication.AuthPeriods"},"teamIdToJobPermissions":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/job_role.JobPermissions"}},"teamIdToInfo":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/authentication.TeamInfo"}},"mothershipCertificate":{"description":"This is a server signed certificate you can use to authenticate\nother people's certificate in mesh mode\n","type":"string"},"userCertificate":{"description":"If you requested the server to sign a certificate this response will\nhave the PEM encoded cert\n","type":"string"},"sessionId":{"description":"Session ID for the current login (also encoded in the authToken)\n","type":"string"},"proxyUserEmail":{"description":"Logged in through the crendentials of this (super admin) user\n","type":"string"},"currentUserModular":{"$ref":"#/components/schemas/user.UserModular"}},"type":"object","required":["authToken","currentUser","teamIdToTeamRole","teamIdToRegionId","regionIdToRegion","preferredRegionId","periods","teamIdToJobPermissions","teamIdToInfo","sessionId","currentUserModular"]},"authentication.WebSSOAuth":{"properties":{"url":{"description":"relative URL on MotherShip to send browser to to begin (includes a query token)\n","type":"string"}},"type":"object","required":["url"]},"authentication.PasswordAuth":{"description":"currently a sentinel type, but could also be used to pass any extra useful\ndetails about the password authentication (eg, minimum length)\n","properties":{},"type":"object"},"authentication.ValidAuthTypes":{"properties":{"passwordAuth":{"$ref":"#/components/schemas/authentication.PasswordAuth"},"webSSO":{"$ref":"#/components/schemas/authentication.WebSSOAuth"}},"type":"object"},"authentication.LoginOptions":{"properties":{"certificateSigningRequest":{"description":"Send up a PEM encoded certificate signing request for mothership to sign\nYou can then use this certificate later on prove your authenticity\nto other people.\nMothership will override any parameters it sees fit (will use same public key)\nSo always use the LoginResult#userCertificate you get back down\n","type":"string"},"proxiedUserEmail":{"description":"Login as this user, but with a proxy super admin account\nIf the account is not a super admin, the login would be rejected\nThe returned token and user will be the proxied user's, with the `proxyUserEmail`\nset to the admin's email\n","type":"string"},"userPrivateKey":{"description":"NOHTML\n","type":"string"}},"type":"object"},"authentication.VoxeetResponse":{"description":"NOHTML\n","properties":{"token_type":{"type":"string"},"access_token":{"type":"string"},"refresh_token":{"type":"string"},"expires_in":{"type":"integer","format":"int32"}},"type":"object","required":["token_type","access_token","refresh_token","expires_in"]},"common.ErrorCode":{"description":"The ErrorCode enum is returned in the <tt>SystemException</tt>\nobject thrown or returned by handlers.  This is included here to\nexplain what response codes we return and what they mean.\n400 - BAD_REQUEST - This error is returned if the *request* is invalid eg, formatted\nbadly, or type errors.\n401 - UNAUTHORIZED - This means that no authentication token was passed to a service\nendpoint which requires authentication. This is also used for invalid\nusername/password submissions\n403 - FORBIDDEN - When a user is authenticated and authorized but the resource is unavailable, such as a disabled team.\n404 - NOT_FOUND - This error is intended to mean that the entity you are requesting\nor attempting to manipulate does not exist or is not visible due to\nauthorization control.  However, it is currently sometimes returned\nwhen the system makes an internal query which unexpectedly returns\nno results.  We are tidying this up.\n412 - PRECONDITION_FAILED - This error code usually means that the object you are trying to\nmanipulate is not in the correct state for the intended action.\nWe are going to try and phase this out of our application so its\nonly caused by db errors so its easier to react to.\n413 - WRONG_STATE - Very similar to the above error, but this one only is caused by\nour application. There was ambiguity surrounding PRECONDITION_FAILED\nbecasue it was sometimes caused by a db error and sometimes by our\napplication and clients had a hard time knowning how to deal with it.\n414 - NOOP - This error means that client is trying to do something that's already the case.\neg. completing a completed job, etc. Clients are recommended to not surface this\nerror code as an error.\n420 - INVALID_VERSION - The version of an item specified does not exist\n421 - UNSUPPORTED_VERSION - The action cannot be performed on the version specified,\ntypically due to it being before a sunrise date for recording data\nnecessary for the action to be performed.\n422 - JOB_NOT_ACTIVE - Job is not active\n423 - USER_NOT_ASSIGNED_TO_JOB - user is not  assigned to particular job\n424 - INSUFFICIENT_ROLE_PERMISSIONS - user doesn't have sufficient permission\n429 - RATE_LIMIT_EXCEEDED - Request Limit exceeded - Too Many Requests\n430 - INVALID_REGION - This means you sent the request to the wrong API server.  See\nthe documentation on authentication.LoginResult for how to\ndetermine the correct API server for requests.\n435 - INVALID_STEP_STATE_TRANSITION - The step state transition is not valid for the current user.\n440 - REVERT_DISALLOWED - A revert action has been refused, typically due to concurrent\nactivity on the item.\n472 - MISSING_METADATA - An action was attempted on an object that required metadata to\nbe set which was not set.\n473 - USER_ALREADY_PART_OF_TEAM - An 'addUserToTeam' call was made for a user already on it.\n474 - ACCOUNT_UNVALIDATED - For security, newly created accounts must click the link in the issued\nemail before they can log in.\n475 - TEAM_ALREADY_EXISTS - a 'createTeam' call was made, but the domain specified is already in use or reserved\n476 - INSUFFICIENT_PERMISSIONS - The user does not have the necessary permissions to carry out the requested action.\nThis can be because they are not a member of the team or job, or because they are\nlacking the correct role. It can also be becasue they are not admins.\n480 - ATTRIBUTE_UPDATE_REJECTED - The action would result with an object in an ORPHAN or BLIND state\n497 - INVALID_TOKEN - an authentication token was passed, but it did not validate successfully\n498 - TOKEN_EXPIRED - a valid authentication token was passed, but it was too old\n499 - UNKNOWN_ERROR - catch-all for errors missing their own code\n500 - INTERNAL_SERVER_ERROR - the system could not complete the operation due to a bug\n503 - SERVICE_UNAVAILABLE - The server is currently unable to handle the request\n550 - NOT_ALLOWED - requested operation was rejected for reasons out of callers control\n600 - TEMPLATE_NOT_LOCKED - can't make changes or release without first acquiring a lock\n601 - RESOURCE_ARCHIVED - cannot perform action due to archived resource *\n","type":"number","enum":[400,401,403,404,412,413,414,420,421,422,423,424,429,430,435,440,472,473,474,475,476,480,497,498,499,500,503,550,600,601]},"common.UUID":{"description":"Most ID values in the API are UUIDs.  These can be treated as\nopaque strings, or interpreted according to RFC4122.\n","type":"string"},"common.TimeInSecs":{"description":"Timestamps are represented in the API as 64-bit unix timestamps\n(i.e., seconds since midnight, January 1st, 1970 in UTC).\n","type":"integer","format":"int64"},"common.UUIDSet":{"description":"Collection of UUIDs\n","properties":{"ids":{"type":"array","items":{"type":"string"}}},"type":"object","required":["ids"]},"common.VersionRef":{"description":"This structure is used to refer to a particular version of a template or template set.\n","properties":{"id":{"description":"the template ID\n","type":"string"},"publicVersion":{"description":"The published version of the template being specified\n","type":"integer","format":"int32"},"internalVersion":{"description":"The (internal) version being specified\n","type":"integer","format":"int32"}},"type":"object","required":["id"]},"common.SystemException":{"description":"The SystemException type is returned as the 'throws' type for most\nservice endpoints, as well as certain endpoints which can explicitly\nreturn it.\n","properties":{"errorCode":{"$ref":"#/components/schemas/common.ErrorCode"},"message":{"description":"an English string describing the error condition\n","type":"string"},"localizedMessage":{"description":"if the request set the Accept-Language header to include a\nsupported language, then this field will (in the future) have a\nlocalized error string in that language.\n","type":"string"},"slug":{"description":"a unique key corresponding to the error condition for client-side localization\n","type":"string"},"rqId":{"description":"the server request ID, where available. Useful for enquiring about confusing responses with support\n","type":"string"},"errorKey":{"description":"optional string that differentiates different client dialog popups for the same type of error\n","type":"string"}},"type":"object","required":["errorCode","message","localizedMessage","slug","rqId"]},"common.PageReq":{"description":"This data structure is used to request pagination or streaming of\ndata from endpoints that support it.  This allows result sets larger\nthan can be returned within the request timeout to be retrieved\npiecemeal.<br/><br/>\n\nThe first time you call a streaming endpoint and pass this structure,\nyou'll get back a <tt>PageInfo</tt> object which includes a\n<tt>pageTokens</tt> for one subsequent page.<br/><br/>\n\nTo retrieve the next page, pass the token for that page as the\n<tt>pageToken</tt> field in this struct.  Use of these tokens to\nresume allows the system to efficiently stream through the data set.\nWith an appropriate sort order, repeating this until no more token is\nreturned allows you to retrieve all data with \"at least once\"\nretrieval semantics for each item in the set.<br/><br/>\n\nIf the results are being navigated by a user interface, and the user\nselects to move forward a number of pages, set the <tt>skip</tt>\nparameter.  The endpoint will return the requested page of data, a\n<tt>pageToken</tt> for the page after that, and usually also\n<tt>pageToken</tt> values for the skipped pages.<br/><br />\n\nIf the interface shows a handful of page numbers allowing the user to\nskip forward to a handful of nearby pages, it's possible to request\nthe page tokens for these pages in advance using the <tt>preview</tt>\nparameter.  This gives you a \"preview\" of the page tokens for those\npages, to facilitate paging forward this small number of pages without\nusing <tt>skip</tt>.<br/><br/>\n\nIf the interface shows a final page number to indicate the number of\nresults which matched the user query, it has two options to do this.\nThe first is to issue a combined query which both counts results and\nreturns a page of data.  This is the default, backwards-compatible\nbehavior, when <tt>count</tt> is not specified.  The count is accurate\nas of the time it was issued; however, it is possible that by the time\nthe end of the set is reached that there are more (or even fewer)\npages of data.  The last page of results will always have\n<tt>left</tt> equal to zero and no <tt>pageToken</tt> for any pages\nbeyond the page number (the <tt>num</tt> field).<br/><br/>\n\nThe second, and faster approach, is to first issue a query with\n<tt>count</tt> set to <tt>false</tt>, and (optionally) a small number\nsuch as 1 or 2 passed as <tt>preview</tt>.  This query mode avoids\ncounting items just to know how many pages there are, which means the\n<tt>left</tt> field will not be an accurate predictor of the number of\npages left in the results.  When rendering the results, if the value\nof <tt>left</tt> returned is the same as or lower than the sent value\nof <tt>preview</tt>, then the total number of pages in the results can\nbe assumed to be the highest page number in the page tokens that are\nreturned, and the page numbers can be shown to the user as the\ncomplete list of pages.  The count is avoided.  If left is higher than\nthat, then there is at least one more page of results.  If the user is\ninterested in the total number of pages (such as by exposing the\nscreen area where the count is shown, or by clicking on a control to\nrequest it), then a second call can be issued with the <tt>count</tt>\nparameter set to <tt>true</tt>.  This second request will return\n<i>just</i> the count of pages (i.e. the <tt>left</tt> field will be\naccurate).  This, in combination with the <tt>skip</tt> option, can\nlet the user access the last page of results.  However, when designing\nsuch an interface, a preference should be made towards encouraging the\nuser to reverse the sort order or refining their search terms, rather\nthan performing large seeks through the set or attempting to access\nthe last page.<br /><br />\n\nUsers wishing to retrieve every item, such as batch ETL jobs, can set\n<tt>count</tt> to <tt>false</tt> or leave it not set; the only side\neffect of not setting it is that the first page of results will take\nslightly longer to retrieve while the system counts the items.\n\n","properties":{"pageToken":{"description":"an opaque token from a <tt>PageInfo</tt> structure which allows resuming of a\nstreamed set.\n","type":"string"},"size":{"description":"Number of items per page. Requests for pages larger than the\ndefault are not guaranteed to be honored.\n","type":"integer","format":"int32"},"skip":{"description":"Number of pages to skip at the beginning of the stream.\n","type":"integer","format":"int32"},"count":{"description":"opt in for streaming behavior (see explanation)\n","type":"boolean"},"preview":{"description":"Return this number of extra page tokens for pages beyond the end\nof the set\n","type":"integer","format":"int32"}},"type":"object","required":["size"]},"common.PageInfo":{"description":"This data structure is included in the result for endpoints which\n support pagination or streaming of results.<br /><br/>\n\nTo facilitate efficient paging around the results with the fewest\npossible API calls, it is appropriate to cache the <tt>pageToken</tt>\nvalues by merging into a client-side map, but the items in the map\nshould be invalidated in the following situations:\n\n<ul>\n <li>when paging backwards, if any token mismatches the previously\n held token for that page number, all following cached tokens should be\n discarded.</li>\n<li>When changing the query terms or sort order, all tokens should be\n discarded.</li>\n</ul>\n\nThis behavior can be approximated by always discarding any old tokens\nwith a higher page number than the highest page number in the\n<tt>pageTokens</tt> map, and then merging in.\n","properties":{"num":{"description":"The current page's number.  The first page is page 1.\n","type":"integer","format":"int32"},"left":{"description":"The number of pages left.  If the <tt>count</tt> parameter was set\nto <tt>false</tt> to the query, then this can be less than the\nnumber of pages remaining, but it will always be non-zero if there\nare more pages of data.\n","type":"integer","format":"int32"},"pageTokens":{"description":"Page tokens for nearby pages.  The keys of this map are the page\nnumbers, and the value is an opaque printable character string\nwhich can be passed as the <tt>pageToken</tt> field in\n<tt>PageReq</tt> to request that page.\n","type":"object","additionalProperties":{"type":"string"}}},"type":"object","required":["num","left","pageTokens"]},"common.AddAction":{"properties":{"id":{"type":"string"},"position":{"type":"integer","format":"int32"},"extraInfo":{"description":"extraInfo is an api-specific map that is used to attach extra info about added item <br>\nOne use case is in <a href=\"job.html#Fn_JobService_multiActionTemplates\">MultiActionTemplates</a> <br>\nFor <code>AddAction</code> to attach the selected data sheet set id -> data sheet id for templates with data sheet definition references, which is a requirement for reference resolution\n","type":"object","additionalProperties":{"type":"string"}}},"type":"object","required":["id","position"]},"common.RemoveAction":{"properties":{"id":{"type":"string"},"position":{"type":"integer","format":"int32"}},"type":"object","required":["id","position"]},"common.MoveAction":{"properties":{"id":{"type":"string"},"oldPosition":{"type":"integer","format":"int32"},"newPosition":{"type":"integer","format":"int32"}},"type":"object","required":["id","oldPosition","newPosition"]},"common.EditAction":{"properties":{"id":{"type":"string"},"position":{"type":"integer","format":"int32"},"extraInfo":{"description":"extraInfo is an api-specific map that is used to attach extra info about added item <br>\nOne use case is in <a href=\"job.html#Fn_JobService_multiActionTemplates\">MultiActionTemplates</a> <br>\nFor <code>EditAction</code> to attach the selected data sheet set id -> data sheet id for templates with data sheet definition references, which is a requirement for reference resolution\n","type":"object","additionalProperties":{"type":"string"}}},"type":"object","required":["id","position"]},"common.ListActions":{"properties":{"add":{"$ref":"#/components/schemas/common.AddAction"},"remove":{"$ref":"#/components/schemas/common.RemoveAction"},"move":{"$ref":"#/components/schemas/common.MoveAction"},"edit":{"$ref":"#/components/schemas/common.EditAction"}},"type":"object","required":["add","remove","move","edit"]},"common.ExternalOpts":{"description":"Options for externally managed content, used by import-related services.\n","properties":{"externallyManaged":{"description":"true if content is continually being externally managed, false if one-time import\n","type":"boolean"},"externalSystemName":{"description":"external system name\n","type":"string"},"externalId":{"description":"external id, should be unique\n","type":"string"},"externalVersion":{"description":"external version for the external id + system\n","type":"string"}},"type":"object"},"common.SelectedListValues":{"properties":{"values":{"description":"Multi-select list uses an unordered set of selected string values\n","type":"array","items":{"type":"string"}}},"type":"object","required":["values"]},"common.SelectedListValueIds":{"properties":{"valueIds":{"description":"Multi-select list uses an unordered set of selected string value ids\n","type":"array","items":{"type":"string"}}},"type":"object","required":["valueIds"]},"common.PreciseNumber":{"description":"Number input with precision\n","properties":{"number":{"type":"number","format":"double"},"precision":{"description":"Definition of precision on a number: <br>\nAll non-zero digits are significant. <br>\nZeros between non-zero digits are significant. <br>\nLeading zeros are never significant. <br>\nIn a number with a decimal point, trailing zeros (those to the right of the last non-zero digit) are significant. This is counted when user inputs the number as a string.\n","type":"string","format":"byte"}},"type":"object","required":["number","precision"]},"common_event.ProcessedState":{"description":"0 - PROCESSED\n1 - IGNORED\n2 - REJECTED\n","type":"number","enum":[0,1,2]},"common_event.AddDocumentOp":{"description":"corresponding to addDocument(jobTemplateId, jobTemplateVersion, documentId)\n","properties":{"document":{"$ref":"#/components/schemas/document.Document"}},"type":"object","required":["document"]},"common_event.UpdateDocumentOp":{"description":"corresponding to updateDocument(jobTemplateId, jobTemplateVersion, documentId)\n","properties":{"document":{"$ref":"#/components/schemas/document.Document"}},"type":"object","required":["document"]},"common_event.RemoveDocumentOp":{"description":"and removeDocument(jobTemplateId, documentId)\n","properties":{"documentId":{"type":"string"}},"type":"object","required":["documentId"]},"common_event.AddStepOp":{"description":"corresponding to addStep(jobTemplateId, parentId, step, position, replace)\n","properties":{"stepGroupId":{"description":"which step group to add it to (parentId)\n","type":"string"},"step":{"$ref":"#/components/schemas/step.BaseStep"},"position":{"description":"position to add it in (-1 = end)\n","type":"integer","format":"int32"},"replace":{"description":"overwrite step at the position\n","type":"boolean"},"addedAfter":{"description":"The sibling's job base step id it was added after\n","type":"string"}},"type":"object","required":["stepGroupId","step","position","replace"]},"common_event.AddStepGroupOp":{"description":"corresponding to addStepGroup(jobTemplateId, parentId, stepGroup, position, replace)\nand updateStepGroup(jobTemplateId, stepGroup)\n","properties":{"parentStepGroupId":{"description":"which step group to add it within (empty = root)\n","type":"string"},"stepGroup":{"$ref":"#/components/schemas/step.BaseStep"},"position":{"description":"position to add it in (-1 = end)\n","type":"integer","format":"int32"},"replace":{"description":"overwrite step at the position\n","type":"boolean"},"addedAfter":{"description":"The sibling's job base step id it was added after\n","type":"string"}},"type":"object","required":["stepGroup","position","replace"]},"common_event.CloneStepOp":{"description":"corresponding to cloneStep(jobTemplateId, parentId, stepId, position)\n","properties":{"parentId":{"description":"which step group to add it to (parentId)\n","type":"string"},"stepId":{"description":"the step to clone\n","type":"string"},"position":{"description":"position to add it in (-1 = end)\n","type":"integer","format":"int32"}},"type":"object","required":["parentId","stepId","position"]},"common_event.CloneStepGroupOp":{"description":"corresponding to cloneStepGroup(jobTemplateId, parentId, stepGroupId, position)\n","properties":{"parentId":{"description":"which step group to add it to\n","type":"string"},"stepGroupId":{"description":"the step group to clone\n","type":"string"},"position":{"description":"position to add it in (-1 = end)\n","type":"integer","format":"int32"}},"type":"object","required":["parentId","stepGroupId","position"]},"common_event.ArchiveOp":{"properties":{"isArchived":{"type":"boolean"}},"type":"object","required":["isArchived"]},"common_event.MetadataUpdateOp":{"description":"metadata changes - update/add a key\ncorresponding to updateMetadata(templateId, updated, removedIds)\n","properties":{"metadataId":{"type":"string"},"key":{"type":"string"},"value":{"$ref":"#/components/schemas/metadata.MetadataValue"},"valueWithIds":{"$ref":"#/components/schemas/metadata.MetadataValueWithIds"}},"type":"object","required":["metadataId","value"]},"common_event.MetadataDeleteOp":{"properties":{"metadataId":{"type":"string"},"key":{"type":"string"}},"type":"object","required":["metadataId"]},"common_event.TitleProperty":{"properties":{"title":{"type":"string"}},"type":"object","required":["title"]},"common_event.FetchAndSubscribeOp":{"description":"Generated by Dendrite on a client subscription.\n\nIndicates a client is interested in receiving notifications\nfor this resource. Any new events will be relayed to to client\nas well as any existing events after the provided version.\nThis event will not be saved to the events table.\n","properties":{"subscriber":{"$ref":"#/components/schemas/core_event.Subscriber"},"version":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}}},"type":"object","required":["subscriber","version"]},"common_event.UnsubscribeOp":{"properties":{"subscriber":{"$ref":"#/components/schemas/core_event.Subscriber"}},"type":"object","required":["subscriber"]},"common_event.RejectEventOp":{"description":"This event will be created by mothership when an event that it is processing errors out or is rejected\nfor any reason. It keeps a list of rejectedEvents because events and their side effects are processed\nalong with their side effects, and they should be rejected together\n","properties":{"rejectedEvents":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}},"error":{"$ref":"#/components/schemas/common.SystemException"}},"type":"object","required":["rejectedEvents"]},"common_event.NoOp":{"description":"Does nothing, used as a placeholder for unknown events on clients.\n","properties":{},"type":"object"},"companion.CompanionAuthResult":{"properties":{"authToken":{"type":"string"},"jobId":{"type":"string"},"jobTitle":{"type":"string"},"user":{"$ref":"#/components/schemas/user.User"}},"type":"object","required":["authToken","jobId","jobTitle","user"]},"core_event.NodeVersion":{"properties":{"sessionId":{"type":"string"},"clientSessionId":{"type":"string"},"seqId":{"type":"integer","format":"int64"}},"type":"object","required":["sessionId","seqId"]},"core_event.Pedigree":{"properties":{"teamId":{"type":"string"},"actorId":{"type":"string"},"adminActorId":{"type":"string"},"sessionId":{"type":"string"},"clientSessionId":{"type":"string"},"createdAt":{"type":"integer","format":"int64"},"seqId":{"type":"integer","format":"int64"},"parentVersions":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}},"signature":{"type":"string"},"idsUsedInSignature":{"type":"array","items":{"type":"integer","format":"int32"}},"isSideEffect":{"type":"boolean"},"causedEvents":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}}},"type":"object","required":["teamId","actorId","sessionId","createdAt","seqId","signature","idsUsedInSignature","isSideEffect"]},"core_event.Subscriber":{"properties":{"connectionId":{"type":"string"}},"type":"object","required":["connectionId"]},"data_sheet.DefinitionType":{"description":"1 - TEXT\n2 - NUMBER\n","type":"number","enum":[1,2]},"data_sheet.DataSheetSetOrderBy":{"description":"1 - TITLE\n2 - LAST_UPDATED_AT\n3 - CREATED_AT\n","type":"number","enum":[1,2,3]},"data_sheet.DataSheetOrderBy":{"description":"1 - TITLE\n2 - LAST_UPDATED_AT\n","type":"number","enum":[1,2]},"data_sheet.DataSheetValue":{"properties":{"nullValue":{"description":"Representing the default empty holder, can be customized\n","type":"string"},"text":{"type":"string"},"number":{"$ref":"#/components/schemas/common.PreciseNumber"}},"type":"object","required":["nullValue","text","number"]},"data_sheet.DataSheetDefinition":{"properties":{"id":{"type":"string"},"createdAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"},"archivedAt":{"type":"integer","format":"int64"},"name":{"type":"string"},"position":{"type":"integer","format":"int32"},"type":{"$ref":"#/components/schemas/data_sheet.DefinitionType"},"sheetValues":{"description":"Map of data sheet id -> data sheet value <br>\nUsed to populate existing data sheet values for a new definition\n","type":"object","additionalProperties":{"$ref":"#/components/schemas/data_sheet.DataSheetValue"}},"archiveErr":{"$ref":"#/components/schemas/common.SystemException"}},"type":"object","required":["id","createdAt","updatedAt","archivedAt","name","position","type"]},"data_sheet.DataSheetDefinitionAction":{"properties":{"add":{"$ref":"#/components/schemas/data_sheet.DataSheetDefinition"},"update":{"$ref":"#/components/schemas/data_sheet.DataSheetDefinition"},"getId":{"type":"string"},"archiveId":{"type":"string"},"unarchiveId":{"type":"string"},"checkArchiveId":{"description":"Checks to see if a definition can be archived (not used on a planned template) <br>\nSets the optional <code>canArchive</code> on the returned <code>DataSheetDefinition</code>\n","type":"string"}},"type":"object","required":["add","update","getId","archiveId","unarchiveId","checkArchiveId"]},"data_sheet.DataSheet":{"properties":{"id":{"type":"string"},"createdAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"},"archivedAt":{"type":"integer","format":"int64"},"name":{"type":"string"},"description":{"type":"string"},"lastAuthor":{"$ref":"#/components/schemas/user.UserModular"},"idValues":{"description":"Map of definition id -> data sheet value <br>\nAny missing definition ids are treated as having a \"null\" value <br>\nValues are automatically removed if corresponding definitions are archived\n","type":"object","additionalProperties":{"$ref":"#/components/schemas/data_sheet.DataSheetValue"}}},"type":"object","required":["id","createdAt","updatedAt","archivedAt","name","description"]},"data_sheet.DataSheetAction":{"properties":{"add":{"$ref":"#/components/schemas/data_sheet.DataSheet"},"update":{"$ref":"#/components/schemas/data_sheet.DataSheet"},"getId":{"type":"string"},"archiveId":{"type":"string"},"unarchiveId":{"type":"string"}},"type":"object","required":["add","update","getId","archiveId","unarchiveId"]},"data_sheet.DataSheetSet":{"properties":{"id":{"type":"string"},"createdAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"},"archivedAt":{"type":"integer","format":"int64"},"name":{"type":"string"},"description":{"type":"string"},"lastAuthor":{"$ref":"#/components/schemas/user.UserModular"},"definitions":{"description":"Can be re-ordered\n","type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheetDefinition"}},"sheets":{"type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheet"}},"activeSheetCount":{"type":"integer","format":"int32"},"archivedSheetCount":{"type":"integer","format":"int32"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"type":"object","required":["id","createdAt","updatedAt","archivedAt","name","description"]},"data_sheet.DataSheetSetOrder":{"properties":{"field":{"$ref":"#/components/schemas/data_sheet.DataSheetSetOrderBy"},"asc":{"type":"boolean"}},"type":"object","required":["field","asc"]},"data_sheet.DataSheetSetOptions":{"properties":{"showArchived":{"description":"Default to active sets only\n","type":"boolean"},"onlyArchived":{"description":"Show only the archived sets\n","type":"boolean"},"lastUpdatedAt":{"description":"Only get sets modified after this timestamp\n","type":"integer","format":"int64"},"title":{"description":"Search for sets that contain this title\n","type":"string"},"pageReq":{"$ref":"#/components/schemas/common.PageReq"},"order":{"description":"Default is by most recent edit\n","type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheetSetOrder"}}},"type":"object"},"data_sheet.DataSheetSetSelectOptions":{"properties":{"includeDefinitions":{"description":"Includes active definition list\n","type":"boolean"},"includeSheets":{"description":"Includes active data sheet list\n","type":"boolean"},"sheetPageSize":{"description":"Includes only the first X sheets, 0 = all\n","type":"integer","format":"int32"},"includeActiveSheetCount":{"description":"Includes active sheet count\n","type":"boolean"},"includeArchivedSheetCount":{"description":"Includes archived sheet count\n","type":"boolean"},"definitionTitle":{"description":"Includes only definitions that contain this title\n","type":"string"},"definitionTypes":{"description":"Includes only these definition types, if not set, includes all\n","type":"array","items":{"$ref":"#/components/schemas/data_sheet.DefinitionType"}},"includeAttributes":{"type":"boolean"}},"type":"object","required":["includeDefinitions","includeSheets","sheetPageSize","includeActiveSheetCount","includeArchivedSheetCount","includeAttributes"]},"data_sheet.DataSheetSetQueryResult":{"properties":{"sets":{"type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheetSet"}},"pageInfo":{"$ref":"#/components/schemas/common.PageInfo"}},"type":"object","required":["sets"]},"data_sheet.DataSheetOrder":{"properties":{"field":{"$ref":"#/components/schemas/data_sheet.DataSheetOrderBy"},"asc":{"type":"boolean"}},"type":"object","required":["field","asc"]},"data_sheet.DataSheetOptions":{"properties":{"showArchived":{"description":"Default to active sheets only\n","type":"boolean"},"onlyArchived":{"description":"Show only the archived sheets\n","type":"boolean"},"title":{"description":"Search for sheets that contain this title\n","type":"string"},"pageReq":{"$ref":"#/components/schemas/common.PageReq"},"order":{"description":"Default is by most recent edit\n","type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheetOrder"}}},"type":"object"},"data_sheet.DataSheetQueryResult":{"properties":{"sheets":{"type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheet"}},"pageInfo":{"$ref":"#/components/schemas/common.PageInfo"}},"type":"object","required":["sheets"]},"debug_report.DebugReportType":{"description":"0 - NORMAL\n1 - NO_EMAIL\n","type":"number","enum":[0,1]},"debug_report.DebugReportOrderBy":{"description":"1 - CREATED_AT\n","type":"number","enum":[1]},"debug_report.DebugReport":{"properties":{"id":{"type":"string"},"userId":{"type":"string"},"jobId":{"type":"string"},"deviceOS":{"type":"string"},"deviceMake":{"type":"string"},"deviceModel":{"type":"string"},"deviceId":{"type":"string"},"apiVersion":{"type":"string"},"jsonData":{"type":"string"},"userMessage":{"type":"string"},"createdAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"},"reportType":{"$ref":"#/components/schemas/debug_report.DebugReportType"},"documents":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"user":{"$ref":"#/components/schemas/user.User"}},"type":"object","required":["id","userId","jobId","deviceOS","deviceMake","deviceModel","deviceId","apiVersion","jsonData","createdAt","updatedAt","reportType"]},"debug_report.DebugReportInfo":{"properties":{"reportId":{"type":"string"},"reservedDocIds":{"type":"array","items":{"type":"string"}}},"type":"object","required":["reportId","reservedDocIds"]},"debug_report.DebugReportParams":{"properties":{"docs":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"jsonData":{"type":"string"},"jobId":{"type":"string"},"userMessage":{"type":"string"},"reportType":{"$ref":"#/components/schemas/debug_report.DebugReportType"}},"type":"object","required":["docs","jsonData","jobId"]},"debug_report.DebugReportQueryResult":{"properties":{"reports":{"type":"array","items":{"$ref":"#/components/schemas/debug_report.DebugReport"}},"pageInfo":{"$ref":"#/components/schemas/common.PageInfo"}},"type":"object","required":["reports"]},"debug_report.DebugReportWhereOpts":{"properties":{"userId":{"type":"string"},"reportType":{"$ref":"#/components/schemas/debug_report.DebugReportType"},"pageReq":{"$ref":"#/components/schemas/common.PageReq"}},"type":"object"},"debug_report.DebugReportSelectOpts":{"properties":{"includeDocuments":{"type":"boolean"},"includeUser":{"type":"boolean"}},"type":"object","required":["includeDocuments","includeUser"]},"debug_report.DebugReportOrder":{"properties":{"field":{"$ref":"#/components/schemas/debug_report.DebugReportOrderBy"},"asc":{"type":"boolean"}},"type":"object","required":["field","asc"]},"debug_report.DebugReportFetchResult":{"properties":{"report":{"$ref":"#/components/schemas/debug_report.DebugReport"},"err":{"$ref":"#/components/schemas/common.SystemException"}},"type":"object","required":["report","err"]},"deviation_event.DeviationCause":{"properties":{"execSnippet":{"$ref":"#/components/schemas/job.ExecutionSnippet"}},"type":"object"},"deviation_event.DeviationOp":{"properties":{"devType":{"$ref":"#/components/schemas/job.JobDeviationType"},"ref":{"$ref":"#/components/schemas/job.JobDeviationRef"},"open":{"type":"boolean"},"deviationId":{"type":"string"},"index":{"type":"integer","format":"int32"},"causedBy":{"$ref":"#/components/schemas/deviation_event.DeviationCause"}},"type":"object","required":["devType","ref","open"]},"deviation_event.DeviationEvent":{"properties":{"jobId":{"type":"string"},"pedigree":{"$ref":"#/components/schemas/core_event.Pedigree"},"op":{"$ref":"#/components/schemas/deviation_event.DeviationOp"},"typ":{"$ref":"#/components/schemas/job.JobType"}},"type":"object","required":["jobId","pedigree","op"]},"diff.ChangeType":{"description":"NOHTML Indicates the type of change for struct, fields or list/map members\nstructs: can only be modified, or not\nfields: can be added, removed or modified\ncollection members: can be added, removed or modified\nFor ordered lists, we use ListIndices to indicate movement\n\n1 - ADDED\n2 - REMOVED\n3 - MODIFIED\n4 - MOVED\n","type":"number","enum":[1,2,3,4]},"diff.DiffIndex":{"properties":{"base":{"type":"integer","format":"int32"},"other":{"type":"integer","format":"int32"}},"type":"object","required":["base"]},"diff.ListIndices":{"properties":{"baseIdx":{"type":"integer","format":"int32"},"otherIdx":{"type":"integer","format":"int32"}},"type":"object","required":["baseIdx","otherIdx"]},"diff.Change":{"properties":{"changeType":{"$ref":"#/components/schemas/diff.ChangeType"},"version":{"type":"integer","format":"int32"},"indices":{"$ref":"#/components/schemas/diff.ListIndices"}},"type":"object","required":["changeType","version"]},"diff.StringDiff":{"properties":{"latestChange":{"$ref":"#/components/schemas/diff.Change"},"otherValue":{"type":"string"},"otherValueWrapper":{"$ref":"#/components/schemas/reference.StringWrapper"}},"type":"object","required":["latestChange"]},"diff.NumberDiff":{"properties":{"latestChange":{"$ref":"#/components/schemas/diff.Change"},"otherValue":{"type":"number","format":"double"}},"type":"object","required":["latestChange"]},"document.Document":{"description":"A document represents any type of file that can be associated with jobs or job templates.\n","properties":{"id":{"type":"string"},"mimeType":{"type":"string"},"name":{"type":"string"},"size":{"type":"integer","format":"int64"},"teamId":{"type":"string"},"isPending":{"description":"if isPending = true, then it has not been uploaded yet\n","type":"boolean"},"md5Checksum":{"type":"string"},"caption":{"description":"character limit of common.MAX_DOCUMENT_CAPTION_LENGTH\n","type":"string"},"thumbnailId":{"description":"if empty it could be a legacy or non-exec data file\n","type":"string"},"position":{"type":"number","format":"double"},"latestChange":{"$ref":"#/components/schemas/diff.Change"}},"type":"object","required":["id","mimeType","name","size","isPending","md5Checksum"]},"field_data.FieldType":{"description":"The different types of inputs a Step can have. There is no longer a 1to1 mapping of field types\nto execution data fields. To make it easier to track, there will be comments after each field type\nindicating which execution data types it can map to.\n1 - Text - Text that is entered\n2 - Number - Numerical input that can have a valid range\n3 - List - Selector list of options\n4 - Photo\n5 - Video\n6 - Audio\n7 - Signature - A person's signature\n8 - Date - A date value, encoded as a 64-bit unix timestamp (in seconds)\n9 - YesNo\n10 - Link - A url string. Will be validated for proper formatting\n11 - MultiSelectList\n12 - File\n13 - CompactList - CompactList can only have two options and each option must be under 20 characters\nIt will be displayed in a flattened/compacted form for faster execution\n14 - DateTime\n15 - Integration\n","type":"number","enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]},"field_data.NumberUnitSystem":{"description":"SI unit system type\n1 - Standard\n2 - Imperial\n3 - Alternative\n","type":"number","enum":[1,2,3]},"field_data.MatchType":{"description":"1 - None\n2 - Any\n3 - All\n","type":"number","enum":[1,2,3]},"field_data.NumberUnit":{"description":"SI unit type for number inputs\n","properties":{"id":{"type":"string"},"name":{"type":"string"},"symbol":{"type":"string"}},"type":"object","required":["id","name","symbol"]},"field_data.MeasuredUnitNumber":{"description":"SI unit number for number execution input\n","properties":{"number":{"$ref":"#/components/schemas/common.PreciseNumber"},"unit":{"$ref":"#/components/schemas/field_data.NumberUnit"}},"type":"object","required":["number"]},"field_data.ExecutionData":{"description":"Union representing the various field input types\nDon't confuse with various ExecutionData types in job.thrift [VR]\nThis is a slight misnomer. FieldEntry might've been a better name [VR]\nSince there is no longer a 1to1 mapping of field types to execution data fields, there will be\ncomments indicating which field types maps to each exection data type\n\n","properties":{"text":{"type":"string"},"number":{"type":"number","format":"double"},"option":{"type":"string"},"photo":{"type":"string"},"video":{"type":"string"},"audio":{"type":"string"},"signature":{"type":"string"},"date":{"type":"integer","format":"int64"},"yesNo":{"type":"boolean"},"preciseNumber":{"$ref":"#/components/schemas/common.PreciseNumber"},"link":{"type":"string"},"selectedListValues":{"$ref":"#/components/schemas/common.SelectedListValues"},"file":{"type":"string"},"unitNumber":{"$ref":"#/components/schemas/field_data.MeasuredUnitNumber"}},"type":"object"},"field_data.NumberUnitConstraint":{"description":"Constraint on number unit execution selection between\na quantity type (containing a list of units)\nand an exact unit\n","properties":{"quantityId":{"type":"string"},"unitId":{"type":"string"}},"type":"object","required":["quantityId","unitId"]},"field_data.NumberConstraints":{"description":"Limits on a numerical input\n","properties":{"rangeStart":{"description":"Deprecated. Use preciseStart and preciseEnd instead\n","type":"number","format":"double"},"rangeEnd":{"type":"number","format":"double"},"preciseStart":{"$ref":"#/components/schemas/common.PreciseNumber"},"preciseEnd":{"$ref":"#/components/schemas/common.PreciseNumber"},"rangeLowWrapper":{"$ref":"#/components/schemas/reference.NumberWrapper"},"rangeHighWrapper":{"$ref":"#/components/schemas/reference.NumberWrapper"},"unit":{"description":"deprecated, use unitWrapper or numberUnit\n","type":"string"},"unitWrapper":{"$ref":"#/components/schemas/reference.StringWrapper"},"numberUnitConstraint":{"$ref":"#/components/schemas/field_data.NumberUnitConstraint"}},"type":"object"},"field_data.ListOptions":{"description":"Options in an option list\n","properties":{"options":{"description":"each option has a character limit of common.MAX_LIST_OPTION_LENGTH\n","type":"array","items":{"type":"string"}}},"type":"object","required":["options"]},"field_data.FieldData":{"description":"Union of data about an input field\n","properties":{"numberConstraints":{"$ref":"#/components/schemas/field_data.NumberConstraints"},"listOptions":{"$ref":"#/components/schemas/field_data.ListOptions"}},"type":"object","required":["numberConstraints","listOptions"]},"field_data.NumberUnitQuantity":{"description":"SI unit quantity / category of measurement\n","properties":{"id":{"type":"string"},"localizedNameMap":{"description":"Map of language code (en-US, es-MX etc.) to quantity name\n","type":"object","additionalProperties":{"type":"string"}},"units":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/field_data.NumberUnit"}}}},"type":"object","required":["id","localizedNameMap","units"]},"field_data.ListCondition":{"properties":{"id":{"type":"string"},"expectedOptions":{"type":"array","items":{"$ref":"#/components/schemas/reference.StringWrapper"}},"matchType":{"$ref":"#/components/schemas/field_data.MatchType"}},"type":"object","required":["id","expectedOptions","matchType"]},"field_data.MultiListCondition":{"properties":{"id":{"type":"string"},"expectedOptions":{"type":"array","items":{"$ref":"#/components/schemas/reference.StringWrapper"}},"matchType":{"$ref":"#/components/schemas/field_data.MatchType"}},"type":"object","required":["id","expectedOptions","matchType"]},"field_data.TextCondition":{"properties":{"id":{"type":"string"},"expectedValues":{"type":"array","items":{"$ref":"#/components/schemas/reference.StringWrapper"}},"matchType":{"$ref":"#/components/schemas/field_data.MatchType"}},"type":"object","required":["id","expectedValues","matchType"]},"field_data.LinkCondition":{"properties":{"id":{"type":"string"},"expectedValues":{"type":"array","items":{"$ref":"#/components/schemas/reference.StringWrapper"}},"matchType":{"$ref":"#/components/schemas/field_data.MatchType"}},"type":"object","required":["id","expectedValues","matchType"]},"field_data.NumberRangeCondition":{"properties":{"id":{"type":"string"},"lessThanWrapper":{"$ref":"#/components/schemas/reference.NumberWrapper"},"lessThanIsInclusive":{"type":"boolean"},"greaterThanWrapper":{"$ref":"#/components/schemas/reference.NumberWrapper"},"greaterThanIsInclusive":{"type":"boolean"},"exactMatches":{"type":"array","items":{"$ref":"#/components/schemas/reference.NumberWrapper"}}},"type":"object","required":["id"]},"field_data.DateRangeCondition":{"properties":{"id":{"type":"string"},"beforeDate":{"type":"integer","format":"int64"},"beforeDateIsInclusive":{"type":"boolean"},"afterDate":{"type":"integer","format":"int64"},"afterDateIsInclusive":{"type":"boolean"},"exactMatches":{"type":"array","items":{"type":"integer","format":"int64"}},"timezone":{"type":"string"}},"type":"object","required":["id"]},"field_data.YesNoCondition":{"properties":{"yesNo":{"type":"boolean"}},"type":"object","required":["yesNo"]},"field_data.IsNACondition":{"properties":{"isNA":{"type":"boolean"}},"type":"object","required":["isNA"]},"field_data.IsCompletedCondition":{"properties":{"isCompleted":{"type":"boolean"}},"type":"object","required":["isCompleted"]},"field_data.IsEmptyCondition":{"properties":{"isEmpty":{"type":"boolean"}},"type":"object","required":["isEmpty"]},"field_data.Condition":{"properties":{"listCondition":{"$ref":"#/components/schemas/field_data.ListCondition"},"multiListCondition":{"$ref":"#/components/schemas/field_data.MultiListCondition"},"textCondition":{"$ref":"#/components/schemas/field_data.TextCondition"},"linkCondition":{"$ref":"#/components/schemas/field_data.LinkCondition"},"numberRangeCondition":{"$ref":"#/components/schemas/field_data.NumberRangeCondition"},"dateRangeCondition":{"$ref":"#/components/schemas/field_data.DateRangeCondition"},"yesNoCondition":{"$ref":"#/components/schemas/field_data.YesNoCondition"},"isNaCondition":{"$ref":"#/components/schemas/field_data.IsNACondition"},"isCompletedCondition":{"$ref":"#/components/schemas/field_data.IsCompletedCondition"},"isEmptyCondition":{"$ref":"#/components/schemas/field_data.IsEmptyCondition"}},"type":"object","required":["listCondition","multiListCondition","textCondition","linkCondition","numberRangeCondition","dateRangeCondition","yesNoCondition","isNaCondition","isCompletedCondition","isEmptyCondition"]},"field_data.DeviationAction":{"properties":{"sendDeviation":{"type":"boolean"}},"type":"object","required":["sendDeviation"]},"field_data.NotificationAction":{"properties":{"id":{"type":"string"},"notificationTemplatesField":{"type":"array","items":{"$ref":"#/components/schemas/notification_template.NotificationTemplateField"}}},"type":"object","required":["id","notificationTemplatesField"]},"field_data.MessageAction":{"properties":{"id":{"type":"string"},"icon":{"$ref":"#/components/schemas/group_headers.NoticeIcon"},"descripWrapper":{"$ref":"#/components/schemas/reference.StringWrapper"}},"type":"object","required":["id","descripWrapper"]},"field_data.Action":{"properties":{"deviationAction":{"$ref":"#/components/schemas/field_data.DeviationAction"},"notificationAction":{"$ref":"#/components/schemas/field_data.NotificationAction"},"messageAction":{"$ref":"#/components/schemas/field_data.MessageAction"}},"type":"object","required":["deviationAction","notificationAction","messageAction"]},"field_data.Trigger":{"properties":{"id":{"type":"string"},"condition":{"$ref":"#/components/schemas/field_data.Condition"},"actions":{"type":"array","items":{"$ref":"#/components/schemas/field_data.Action"}}},"type":"object","required":["id","condition","actions"]},"formula.OpNotation":{"description":"Operator Notation defines an operator's lexical classification; often just referred to as a \"type\" of\noperator.\n0 - None - no operator for this function; it must be written as a function call eg SUM(x, y, z)\n1 - Infix - the operator appears between two operands; eg X + Y\n2 - Prefix - the operator appears before a single operand; eg -X\n3 - Postfix - the operator appears after its operand; eg X²\n4 - Grouping - the operator groups an expression; eg the parens in (X + Y) * 2\n5 - Postcircumfix - the operator follows a term (presently symbols/function names only) and encloses another term\n6 - Separator - the operator is used to separate arguments in a list\n","type":"number","enum":[0,1,2,3,4,5,6]},"formula.OpName":{"description":"1 - Add\n2 - Subtract\n3 - Multiply\n4 - Divide\n","type":"number","enum":[1,2,3,4]},"formula.NumberToken":{"description":"A Number token represents a numeric value input by the user.  Depending on what is in this token,\nit will be an integer or floating point value\n","type":"string"},"formula.StringToken":{"description":"A String token represents a string value in a formula; this can contain any unicode character\n","type":"string"},"formula.Symbol":{"description":"A symbol represents a function name and should match something from the getOperations endpoint\n","type":"string"},"formula.OpSignature":{"description":"An \"OpSignature\" is one set of valid argument types for a function.  eg, for a given set of argument\ntypes, it will return the given type.  Many functions will have a single signature only.  Infix\noperators will always have two arguments, prefix and postfix always one.\n","properties":{"returnType":{"$ref":"#/components/schemas/field_data.FieldType"},"argTypes":{"description":"an acceptable list of argument types\n","type":"array","items":{"$ref":"#/components/schemas/field_data.FieldType"}},"varArgs":{"description":"the function can take a variable number of arguments/terms; the final argument can be provided 0 or more times.\n","type":"boolean"}},"type":"object","required":["returnType","argTypes","varArgs"]},"formula.Operation":{"description":"An operation is either a function or an operator.  An operator may be sent in function style,\nor it can be sent using its operator name according to its allowable notation.\n\nMany facts included here are simple to provide, and while not useful to simple interfaces are invaluable for\nones which want to do things like context-aware completion or restriction of arguments to relevant types.\n","properties":{"operationName":{"$ref":"#/components/schemas/formula.OpName"},"description":{"description":"a short description of the operation eg \"add two numbers together\" (localized) - intended for tooltips\netc\n","type":"string"},"notation":{"$ref":"#/components/schemas/formula.OpNotation"},"precedence":{"description":"in the absense of parentheses, this indicates the priority of the operator. Lower numbers\nmean more tightly binding (eg, × has a lower value than +)\n","type":"integer","format":"int32"},"signatures":{"description":"valid types for the arguments and return values of this operation\n","type":"array","items":{"$ref":"#/components/schemas/formula.OpSignature"}}},"type":"object","required":["operationName","description","notation","precedence","signatures"]},"formula.FieldReference":{"properties":{"fieldType":{"$ref":"#/components/schemas/field_data.FieldType"},"fieldClientId":{"description":"in template authoring, this field contains the referenced field using the client Id\n","type":"string"},"fieldId":{"description":"specifying field by step.Field.id instead.  Always set on steps in materialized jobs\n","type":"string"},"fieldTitle":{"description":"set on the template version of a formula; this is the title of the input referred to.  Broken references\nretain this value.\n","type":"string"},"stepClientId":{"type":"string"},"jobBaseStepId":{"type":"string"},"stepTitle":{"description":"set on the template version of a formula with inter-step references; this is the title of the step\nreferred to.   Broken references retain this value.\n","type":"string"}},"type":"object","required":["fieldType"]},"formula.FormulaToken":{"description":"A formula token is something that can be entered or selected by a user and appear in a formula\ninput box.\n","properties":{"op":{"$ref":"#/components/schemas/formula.OpName"},"num":{"type":"string"},"str":{"type":"string"},"ref":{"$ref":"#/components/schemas/formula.FieldReference"},"sym":{"type":"string"}},"type":"object","required":["op","num","str","ref","sym"]},"formula.NodeContent":{"description":"A formula term represents an parameter/argument to a formula function at a particular location.\n","properties":{"value":{"$ref":"#/components/schemas/field_data.ExecutionData"},"fieldRef":{"$ref":"#/components/schemas/formula.FieldReference"},"operationName":{"$ref":"#/components/schemas/formula.OpName"}},"type":"object","required":["value","fieldRef","operationName"]},"formula.FormulaNode":{"description":"A formula Node is an \"Operation Tree\" (usually just called OpTree) representation of a formula expression.\nValid formulae will have one of these once they are compiled from the list of tokens.  Each node represents\na single function call or operator, and the result of the entire expression is obtained by recursively\nevaluating from the deepest node upwards.\n","properties":{"content":{"$ref":"#/components/schemas/formula.NodeContent"},"nodeType":{"$ref":"#/components/schemas/field_data.FieldType"},"funcArgs":{"description":"if a function node, the parameters/arguments to the function\n","type":"array","items":{"$ref":"#/components/schemas/formula.FormulaNode"}}},"type":"object","required":["content","nodeType","funcArgs"]},"formula.FormulaError":{"description":"A formula error contains details of a problem with a formula.  It typically indicates the first problem\ndetected, not all possible problems with the formula.\n","properties":{"errorMessage":{"description":"localized message\n","type":"string"},"errorPos":{"description":"position in the list of tokens where the error is\n","type":"integer","format":"int32"}},"type":"object","required":["errorMessage"]},"formula.Formula":{"description":"A Formula is the container structure for a formula on a field.  You create a formula by sending a list of\ntokens and attaching it.  The response will have expr set if valid, and error set if not valid.\n","properties":{"formulaTokens":{"description":"list of tokens for expression\n","type":"array","items":{"$ref":"#/components/schemas/formula.FormulaToken"}},"expr":{"$ref":"#/components/schemas/formula.FormulaNode"},"error":{"$ref":"#/components/schemas/formula.FormulaError"}},"type":"object","required":["formulaTokens"]},"formula.ValidateResult":{"properties":{"error":{"$ref":"#/components/schemas/formula.FormulaError"}},"type":"object"},"gatekeeper.PrepareUserResult":{"properties":{"user":{"$ref":"#/components/schemas/user.User"},"token":{"$ref":"#/components/schemas/user.ChangeToken"}},"type":"object","required":["user"]},"group_headers.EquipmentIcon":{"description":"An equipment icon for a tool/PPE needed\n","properties":{"id":{"description":"unique identifier for the icon\n","type":"string"},"iconDocument":{"$ref":"#/components/schemas/document.Document"},"descrip":{"type":"string"},"latestChange":{"$ref":"#/components/schemas/diff.Change"}},"type":"object","required":["id","iconDocument","descrip"]},"group_headers.NoticeIcon":{"description":"Icon for notice header\n","properties":{"id":{"description":"unique identifier for the icon\n","type":"string"},"iconDocument":{"$ref":"#/components/schemas/document.Document"},"descrip":{"type":"string"}},"type":"object","required":["id","iconDocument","descrip"]},"group_headers.IconDiff":{"properties":{"latestChange":{"$ref":"#/components/schemas/diff.Change"},"otherIcon":{"$ref":"#/components/schemas/group_headers.NoticeIcon"}},"type":"object","required":["latestChange"]},"group_headers.NoticeHeader":{"description":"A notice represents a message at the top of a step group containing a standard icon\nand a description.\n","properties":{"id":{"description":"unique identifier for this notice including description\n","type":"string"},"icon":{"$ref":"#/components/schemas/group_headers.NoticeIcon"},"descrip":{"description":"deprecated, use descripWrapper\n","type":"string"},"descripWrapper":{"$ref":"#/components/schemas/reference.StringWrapper"},"descriptionDiff":{"$ref":"#/components/schemas/diff.StringDiff"},"iconDiff":{"$ref":"#/components/schemas/group_headers.IconDiff"},"latestChange":{"$ref":"#/components/schemas/diff.Change"}},"type":"object","required":["id","icon","descrip"]},"group_headers.StepGroupCategory":{"description":"A step group category contains a color and name\n","properties":{"id":{"type":"string"},"name":{"type":"string"},"color":{"description":"6-digit hex RGB value w/ '#', e.g. #ff5599\n","type":"string"},"archivedAt":{"type":"integer","format":"int64"}},"type":"object","required":["id","name","color","archivedAt"]},"group_headers.StepGroupCategoryParams":{"properties":{"name":{"type":"string"},"color":{"description":"6-digit hex RGB value w/ '#', e.g. #ff5599\n","type":"string"}},"type":"object"},"group_headers.CategoryDiff":{"properties":{"latestChange":{"$ref":"#/components/schemas/diff.Change"},"otherCategory":{"$ref":"#/components/schemas/group_headers.StepGroupCategory"}},"type":"object","required":["latestChange"]},"group_headers.StepGroupHeaders":{"description":"Step group header contains the set of headers for a step group\n","properties":{"category":{"$ref":"#/components/schemas/group_headers.StepGroupCategory"},"equipment":{"type":"array","items":{"$ref":"#/components/schemas/group_headers.EquipmentIcon"}},"notices":{"type":"array","items":{"$ref":"#/components/schemas/group_headers.NoticeHeader"}},"condition":{"type":"string"},"categoryDiff":{"$ref":"#/components/schemas/group_headers.CategoryDiff"},"conditionDiff":{"$ref":"#/components/schemas/diff.StringDiff"}},"type":"object"},"job.JobType":{"description":"0 - Normal\n1 - Recurring\n2 - RecurringWithError\n3 - Issue\n4 - AdHoc\n","type":"number","enum":[0,1,2,3,4]},"job.JobState":{"description":"1 - PLANNED\n2 - ACTIVE\n3 - COMPLETED\n","type":"number","enum":[1,2,3]},"job.StepState":{"description":"0 - STARTED\n1 - PAUSED\n2 - RESUMED\n","type":"number","enum":[0,1,2]},"job.IntegrationStatus":{"description":"1 - PENDING\n2 - SUCCESS\n3 - ERROR\n","type":"number","enum":[1,2,3]},"job.JobDeviationType":{"description":"0 - DEVIATION_INPUT_NA - 1. Inputs marked N/A\n1 - DEVIATION_STEP_NA - 2. Steps marked N/A\n2 - DEVIATION_STEP_GROUP_NA - 3. Step groups marked N/A\n3 - DEVIATION_TEMPLATE_NA - 4. Templates marked N/A\n4 - DEVIATION_INPUT_EMPTY - 5. Inputs marked empty if parent step is completed\n5 - DEVIATION_INPUT_RANGE - 6. Inputs out of range but is not N/A\n6 - DEVIATION_STEP_INCOMPLETE - 7. Incomplete steps if job is completed\n7 - DEVIATION_CONDITIONAL_INCOMPLETE - 8. Unused conditionals if job is completed\n8 - DEVIATION_CALCULATED_INPUT_EMPTY - 9. Calculated fields missing underlying input fields (one or more empty) if parent step is completed\n9 - DEVIATION_INPUT_COMPLETE - 9. Inputs marked complete if parent step is completed\n10 - DEVIATION_VALIDATION_TRIGGERED - 10. Inputs for expected values with validation rule triggered\n","type":"number","enum":[0,1,2,3,4,5,6,7,8,9,10]},"job.JobOrderBy":{"description":"1 - TITLE\n2 - CREATED_AT\n3 - PLANNED_START_AT\n4 - LAST_MODIFIED_AT\n5 - JOB_TYPE\n6 - STARTED_AT\n7 - COMPLETED_AT\n8 - LOOKUP_ID\n","type":"number","enum":[1,2,3,4,5,6,7,8]},"job.PriorityLevel":{"properties":{"priority":{"type":"integer","format":"int32"},"title":{"type":"string"},"id":{"description":"unique identifier for a priority level, not a uuid for now\n","type":"string"},"archivedAt":{"description":"priorities cannot currently be archived. this is future proofing for old clients\n","type":"integer","format":"int64"}},"type":"object","required":["priority","title","id","archivedAt"]},"job.JobParams":{"description":"Mutable parts of a Job\n","properties":{"title":{"description":"Title of the job\n","type":"string"},"plannedStartAt":{"description":"expected start date\n","type":"integer","format":"int64"},"skipPlanning":{"description":"start immediately (legacy model)\n","type":"boolean"},"enableMesh":{"type":"boolean"},"startAuto":{"description":"If true then will start job automatically on planned start at\n","type":"boolean"},"typ":{"$ref":"#/components/schemas/job.JobType"},"src":{"$ref":"#/components/schemas/messaging.JobPtr"},"priority":{"$ref":"#/components/schemas/job.PriorityLevel"},"location":{"type":"string"},"plannedStartJobRoleIds":{"description":"If JobType is AdHoc, this must be a non-empty, valid job role id list for\nthe user starting an ad hoc job to be assigned the following roles.\nThis is in addition to the roles already assigned to this user during planning.\n","type":"array","items":{"type":"string"}},"attributes":{"description":"desired attributes on job object\nshould match creating users attributes\n","type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}},"enableStepTracking":{"type":"boolean"},"dupJobId":{"description":"Job to duplicate from, currently only template ref values are being copied over, skipping the need for validation and reducing traffic\n","type":"string"}},"type":"object","required":["skipPlanning"]},"job.TemplateOrSetRef":{"properties":{"templateId":{"type":"string"},"templateSetId":{"type":"string"}},"type":"object","required":["templateId","templateSetId"]},"job.AddUserParams":{"properties":{"userId":{"type":"string"},"email":{"type":"string"},"jobRoleId":{"type":"string"}},"type":"object","required":["jobRoleId"]},"job.AddPlannerParams":{"properties":{"userId":{"type":"string"},"email":{"type":"string"}},"type":"object"},"job.JobModularParams":{"description":"Parts of a Job for creation\n","properties":{"teamId":{"type":"string"},"title":{"description":"Title of the job\n","type":"string"},"plannedStartAt":{"description":"expected start date\n","type":"integer","format":"int64"},"skipPlanning":{"description":"start immediately (legacy model)\n","type":"boolean"},"templateRefs":{"type":"array","items":{"$ref":"#/components/schemas/job.TemplateOrSetRef"}},"users":{"type":"array","items":{"$ref":"#/components/schemas/job.AddUserParams"}},"planners":{"type":"array","items":{"$ref":"#/components/schemas/job.AddPlannerParams"}},"documentIds":{"type":"array","items":{"type":"string"}},"metadataEntries":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"typ":{"$ref":"#/components/schemas/job.JobType"},"src":{"$ref":"#/components/schemas/messaging.JobPtr"},"priority":{"$ref":"#/components/schemas/job.PriorityLevel"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}},"plannedStartJobRoleIds":{"description":"If JobType is AdHoc, this must be a non-empty, valid job role id list for\nthe user starting an ad hoc job to be assigned the following roles.\nThis is in addition to the roles already assigned to this user during planning.\n","type":"array","items":{"type":"string"}},"plannedDataSheetIdsList":{"description":"Each entry in plannedDataSheetIds should correspond to an element in templateRefs, in and ordered, 1-to-1 fashion.\n<br/>\nNote that an element of templateRefs can be either a Template or a Template Set -- that is, multiple Templates.\n<br/>\nSo while it's clear how to apply a plannedDataSheetIds element to a single Template, applying it to a Set goes as follows:\n<br/>\nThe plannedDataSheetIds element will apply to all Templates in the Template Set.\n<br/>\nThat means, if Template T1 references Data Sheet Set DS1, and Template T2 references Data Sheet Sets DS1 and DS2, then a Set of\n{T1, T2} references DS1 and DS2.\n<br/>\nSo for that Template Set, the plannedDataSheeIds element must have key-value pairs for both DS1 and DS2.\n<br/>\nAdditionally, the selected Data Sheet Value for DS1 will apply to both T1 and T2.\n\n","type":"array","items":{"type":"object","additionalProperties":{"type":"string"}}},"enableStepTracking":{"type":"boolean"},"enableMesh":{"type":"boolean"},"dupJobId":{"description":"Job to duplicate from, currently only template ref values are being copied over, skipping the need for validation and reducing traffic\n","type":"string"}},"type":"object","required":["teamId","title","skipPlanning","templateRefs","users","planners","documentIds","metadataEntries","typ","attributes"]},"job.IntegrationResponse":{"properties":{"status":{"$ref":"#/components/schemas/job.IntegrationStatus"},"message":{"type":"string"},"timestamp":{"type":"integer","format":"int64"}},"type":"object","required":["status","timestamp"]},"job.FieldExecutionData":{"description":"Execution data for a particular input field\n","properties":{"fieldId":{"type":"string"},"seqId":{"type":"integer","format":"int64"},"execData":{"$ref":"#/components/schemas/field_data.ExecutionData"},"lastUpdatedById":{"type":"string"},"lastUpdatedAt":{"type":"integer","format":"int64"},"document":{"$ref":"#/components/schemas/document.Document"},"isNotApplicable":{"type":"boolean"},"isNotApplicableLastUpdatedById":{"type":"string"},"isNotApplicableLastUpdatedAt":{"type":"integer","format":"int64"},"integrationResponse":{"$ref":"#/components/schemas/job.IntegrationResponse"},"deviceId":{"description":"For Mesh\n","type":"string"},"deviceSeqId":{"type":"integer","format":"int64"}},"type":"object","required":["fieldId","seqId"]},"job.StepExecutionData":{"description":"Execution data for a step\n","properties":{"stepId":{"type":"string"},"jobBaseStepId":{"type":"string"},"stepComplete":{"type":"boolean"},"fieldExecutionData":{"type":"array","items":{"$ref":"#/components/schemas/job.FieldExecutionData"}},"isComplete":{"type":"boolean"},"isCompleteLastUpdatedById":{"type":"string"},"isCompleteLastUpdatedAt":{"type":"integer","format":"int64"},"isNotApplicable":{"type":"boolean"},"isNotApplicableLastUpdatedById":{"type":"string"},"isNotApplicableLastUpdatedAt":{"type":"integer","format":"int64"},"seqId":{"type":"integer","format":"int64"},"state":{"$ref":"#/components/schemas/job.StepState"},"lastUpdatedAt":{"type":"integer","format":"int64"},"lastUpdatedById":{"type":"string"},"elapsedDurationUser":{"type":"integer","format":"int64"},"deviceId":{"description":"For Mesh\n","type":"string"},"deviceSeqId":{"type":"integer","format":"int64"}},"type":"object","required":["stepId","jobBaseStepId","stepComplete","fieldExecutionData","seqId"]},"job.StepGroupExecutionData":{"description":"Execution data for a step group\n","properties":{"stepGroupId":{"type":"string"},"jobBaseStepId":{"type":"string"},"conditionalIsYes":{"type":"boolean"},"conditionalLastUpdatedById":{"type":"string"},"conditionalLastUpdatedAt":{"type":"integer","format":"int64"},"seqId":{"type":"integer","format":"int64"},"isNotApplicable":{"type":"boolean"},"isNotApplicableLastUpdatedById":{"type":"string"},"isNotApplicableLastUpdatedAt":{"type":"integer","format":"int64"},"deviceId":{"description":"For Mesh\n","type":"string"},"deviceSeqId":{"type":"integer","format":"int64"}},"type":"object","required":["stepGroupId","jobBaseStepId","seqId"]},"job.ExecutionSnippet":{"description":"Umbrella type for various data sent during execution\n","properties":{"stepGroupExecData":{"$ref":"#/components/schemas/job.StepGroupExecutionData"},"stepExecData":{"$ref":"#/components/schemas/job.StepExecutionData"}},"type":"object","required":["stepGroupExecData","stepExecData"]},"job.GetDataOptions":{"properties":{"canHandlePendingDocuments":{"type":"boolean"}},"type":"object","required":["canHandlePendingDocuments"]},"job.GetDataResult":{"properties":{"seqId":{"description":"The maximum sequenceId from the accompanying stepExecutionData list\n","type":"integer","format":"int64"},"stepExecutionData":{"type":"array","items":{"$ref":"#/components/schemas/job.StepExecutionData"}},"jobCompletedAt":{"type":"integer","format":"int64"},"snippets":{"type":"array","items":{"$ref":"#/components/schemas/job.ExecutionSnippet"}},"jobId":{"type":"string"}},"type":"object","required":["seqId","stepExecutionData","jobCompletedAt","snippets","jobId"]},"job.SendDataResult":{"properties":{"jobId":{"type":"string"},"seqId":{"description":"The maximum sequenceId from the accompanying snippets list\n","type":"integer","format":"int64"},"snippets":{"type":"array","items":{"$ref":"#/components/schemas/job.ExecutionSnippet"}}},"type":"object","required":["jobId","seqId","snippets"]},"job.JobUser":{"properties":{"id":{"type":"string"},"jobId":{"type":"string"},"user":{"$ref":"#/components/schemas/user.User"},"jobRole":{"$ref":"#/components/schemas/job_role.JobRole"},"archivedAt":{"type":"integer","format":"int64"}},"type":"object","required":["id","jobId","user","jobRole","archivedAt"]},"job.Job":{"description":"Base Job object\n","properties":{"id":{"type":"string"},"title":{"type":"string"},"stepGroup":{"$ref":"#/components/schemas/step.BaseStep"},"team":{"$ref":"#/components/schemas/team.Team"},"jobTemplateId":{"description":"Template from which this Job was created\n","type":"string"},"jobTemplateVersion":{"description":"The version of the Job Template that was used to create this Job\n","type":"integer","format":"int32"},"completedAt":{"type":"integer","format":"int64"},"documentEmailAddress":{"description":"Unique email address that can be used for submitting documents for this Job\n","type":"string"},"createdAt":{"type":"integer","format":"int64"},"documents":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"jobUsers":{"type":"array","items":{"$ref":"#/components/schemas/job.JobUser"}},"completedSteps":{"type":"integer","format":"int32"},"totalSteps":{"type":"integer","format":"int32"},"reasonCompleted":{"type":"string"},"isPreview":{"description":"Preview jobs are for authoring use before publishing\n","type":"boolean"},"plannedStartAt":{"description":"expected start date\n","type":"integer","format":"int64"},"startedAt":{"description":"0 if job in planning, else actual start date\n","type":"integer","format":"int64"},"creatorId":{"type":"string"},"metadataById":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"meshEnabled":{"type":"boolean"},"startAuto":{"description":"If true then will start job automatically on planned start at\n","type":"boolean"},"jobType":{"$ref":"#/components/schemas/job.JobType"},"usingEvents":{"type":"boolean"},"src":{"$ref":"#/components/schemas/messaging.JobPtr"},"archivedAt":{"type":"integer","format":"int64"},"location":{"type":"string"},"plannedStartJobRoleIds":{"description":"If JobType is AdHoc, this must be a non-empty, valid job role id list for\nthe user starting an ad hoc job to be assigned the following roles.\nThis is in addition to the roles already assigned to this user during planning.\n","type":"array","items":{"type":"string"}},"enableStepTracking":{"type":"boolean"}},"type":"object","required":["id","title","stepGroup","team","jobTemplateId","jobTemplateVersion","completedAt","documentEmailAddress","createdAt","documents","jobUsers","completedSteps","totalSteps","reasonCompleted","isPreview","plannedStartAt","startedAt","creatorId","metadataById","meshEnabled","jobType","usingEvents","archivedAt"]},"job.JobStats":{"properties":{"completedSteps":{"type":"integer","format":"int32"},"totalSteps":{"type":"integer","format":"int32"}},"type":"object","required":["completedSteps","totalSteps"]},"job.JobActivity":{"properties":{"lastMessageAt":{"type":"integer","format":"int64"},"lastMessageSeqId":{"type":"integer","format":"int64"},"lastMessageText":{"type":"string"},"lastExecutionDataAt":{"type":"integer","format":"int64"},"lastExecutionDataSeqId":{"type":"integer","format":"int64"},"lastModifiedAt":{"type":"integer","format":"int64"}},"type":"object","required":["lastMessageAt","lastMessageSeqId","lastMessageText","lastExecutionDataAt","lastExecutionDataSeqId","lastModifiedAt"]},"job.JobDocument":{"properties":{"fromTemplate":{"type":"boolean"},"document":{"$ref":"#/components/schemas/document.Document"}},"type":"object","required":["fromTemplate","document"]},"job.JobRecurringRule":{"properties":{"rule":{"$ref":"#/components/schemas/schedule.RecurringRule"},"startImm":{"description":"True if you want to start immediately\n","type":"boolean"}},"type":"object","required":["rule"]},"job.RecurredJobInfo":{"properties":{"recurringJobId":{"type":"string"},"recurringRule":{"$ref":"#/components/schemas/job.JobRecurringRule"}},"type":"object","required":["recurringJobId","recurringRule"]},"job.IssueJobLink":{"description":"Represent an issue whose src points to an element in this job. <br>\nNote: when adding fields, remember to add corresponding\nfield in <a href=\"job_event.html#Struct_IssueLinkOp\">IssueLinkOp</a>\n","properties":{"issueId":{"type":"string"},"srcPtr":{"$ref":"#/components/schemas/messaging.JobPtr"},"memberIds":{"description":"Lists the users who belong to this issue. NOTE: this is not used by mobile and events\n","type":"array","items":{"type":"string"}},"issueTitle":{"description":"Name of the issue\n","type":"string"},"issueCreatorId":{"description":"UserId of the creator\n","type":"string"},"issueCreatedAt":{"description":"CreatedAt timestamp of the issue\n","type":"integer","format":"int64"},"lookupId":{"description":"human readable identifier\n","type":"string"},"priority":{"$ref":"#/components/schemas/job.PriorityLevel"}},"type":"object","required":["issueId","srcPtr","memberIds","issueTitle","issueCreatorId","issueCreatedAt"]},"job.JobDeviationRef":{"description":"A combination of ids are used based on deviation type\n","properties":{"deviationStepGroupId":{"type":"string"},"deviationStepId":{"type":"string"},"deviationStepFieldId":{"type":"string"},"deviationFieldTriggerId":{"type":"string"},"sourceStepGroupId":{"type":"string"},"sourceStepId":{"type":"string"},"sourceTemplateId":{"type":"string"},"sourceTemplateVersion":{"type":"integer","format":"int32"},"templateIndex":{"type":"integer","format":"int32"},"hierarchyPosition":{"type":"string"}},"type":"object"},"job.JobModular":{"properties":{"id":{"description":"Job UUID\n","type":"string"},"title":{"type":"string"},"jobTemplateId":{"type":"string"},"jobTemplateInternalVersion":{"type":"integer","format":"int32"},"teamId":{"type":"string"},"completedAt":{"type":"integer","format":"int64"},"reasonCompleted":{"type":"string"},"createdAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"},"isPreview":{"description":"Preview jobs are for authoring use before publishing\n","type":"boolean"},"documentEmailAddress":{"description":"Unique email address that can be used for submitting documents for this Job\n","type":"string"},"plannedStartAt":{"description":"expected start date\n","type":"integer","format":"int64"},"startedAt":{"description":"0 if job in planning, else actual start date\n","type":"integer","format":"int64"},"creatorId":{"type":"string"},"metadataById":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"meshEnabled":{"type":"boolean"},"recurringRule":{"$ref":"#/components/schemas/job.JobRecurringRule"},"recurredInfo":{"$ref":"#/components/schemas/job.RecurredJobInfo"},"schedule":{"$ref":"#/components/schemas/schedule.Schedule"},"startAuto":{"description":"If true then will start job automatically on planned start at\n","type":"boolean"},"jobType":{"$ref":"#/components/schemas/job.JobType"},"usingEvents":{"type":"boolean"},"src":{"$ref":"#/components/schemas/messaging.JobPtr"},"lookupId":{"description":"This field will be populated with a human readable globally unique\nidentifier. This idenfitier will have the format\n<Job|Issue>-<number> (current)\n<team_domain>-<j|i>-<number> (legacy)\n","type":"string"},"priority":{"$ref":"#/components/schemas/job.PriorityLevel"},"archivedAt":{"type":"integer","format":"int64"},"location":{"type":"string"},"plannedStartJobRoleIds":{"description":"If JobType is AdHoc, this must be a non-empty, valid job role id list for\nthe user starting an ad hoc job to be assigned the following roles.\nThis is in addition to the roles already assigned to this user during planning.\n","type":"array","items":{"type":"string"}},"team":{"$ref":"#/components/schemas/team.TeamModular"},"jobTemplate":{"$ref":"#/components/schemas/job_template.JobTemplateModular"},"rootHeaders":{"$ref":"#/components/schemas/group_headers.StepGroupHeaders"},"stepGroup":{"$ref":"#/components/schemas/step.BaseStep"},"documents":{"description":"deprecated in favor of jobDocuments\n","type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"jobUsers":{"type":"array","items":{"$ref":"#/components/schemas/job.JobUser"}},"stats":{"$ref":"#/components/schemas/job.JobStats"},"activity":{"$ref":"#/components/schemas/job.JobActivity"},"templates":{"description":"supercedes jobTemplate\n","type":"array","items":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}},"creator":{"$ref":"#/components/schemas/user.User"},"roles":{"type":"array","items":{"$ref":"#/components/schemas/job_role.JobRole"}},"jobDocuments":{"type":"array","items":{"$ref":"#/components/schemas/job.JobDocument"}},"permissions":{"$ref":"#/components/schemas/job_role.JobPermissions"},"messages":{"type":"array","items":{"$ref":"#/components/schemas/messaging.Message"}},"snippets":{"type":"array","items":{"$ref":"#/components/schemas/job.ExecutionSnippet"}},"issues":{"type":"array","items":{"$ref":"#/components/schemas/job.IssueJobLink"}},"deviationCounts":{"description":"no entry for type with 0 deviations\n","type":"object","additionalProperties":{"type":"integer","format":"int32"}},"deviations":{"description":"no entry for type with 0 deviations\n","type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/job.JobDeviationRef"}}},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}},"references":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"enableStepTracking":{"type":"boolean"}},"type":"object","required":["id","title","jobTemplateId","jobTemplateInternalVersion","teamId","completedAt","reasonCompleted","createdAt","updatedAt","isPreview","documentEmailAddress","plannedStartAt","startedAt","creatorId","metadataById","meshEnabled","jobType","usingEvents","archivedAt"]},"job.JobSelectOpts":{"properties":{"includeTeam":{"type":"boolean"},"includeTemplate":{"type":"boolean"},"includeRootHeaders":{"description":"includeRootHeaders is no longer functional since support of multi-template jobs has been implemented\n","type":"boolean"},"includeSteps":{"type":"boolean"},"includeDocuments":{"type":"boolean"},"includeUsers":{"type":"boolean"},"includeStats":{"type":"boolean"},"includeActivity":{"type":"boolean"},"includeTemplates":{"type":"boolean"},"includeCreator":{"type":"boolean"},"includeRoles":{"type":"boolean"},"includePermissions":{"type":"boolean"},"includeExecSnippets":{"type":"boolean"},"includeMessages":{"type":"boolean"},"includeIssues":{"type":"boolean"},"includeDeviationCounts":{"type":"boolean"},"includeDeviations":{"type":"boolean"},"includeRefMap":{"type":"boolean"},"includePlannedDataSheetIds":{"description":"Only valid when job is still in planning\n","type":"boolean"},"includeSnapshottedDataSheetValues":{"description":"Only valid when job has started\n","type":"boolean"},"includeAttributes":{"type":"boolean"}},"type":"object","required":["includeTeam","includeTemplate","includeRootHeaders","includeSteps","includeDocuments","includeUsers","includeStats","includeActivity","includeTemplates","includeCreator","includeRoles","includePermissions","includeExecSnippets","includeMessages","includeIssues","includeDeviationCounts","includeDeviations","includeRefMap","includePlannedDataSheetIds","includeSnapshottedDataSheetValues","includeAttributes"]},"job.JobFetchResult":{"description":"Return type for Fetch. Either a valid JobModular result or an error\n","properties":{"job":{"$ref":"#/components/schemas/job.JobModular"},"err":{"$ref":"#/components/schemas/common.SystemException"}},"type":"object","required":["job","err"]},"job.JobTextSearch":{"properties":{"query":{"type":"string"}},"type":"object","required":["query"]},"job.JobWhereOpts":{"description":"Returns currentUser's jobs by default (teamId/userId unset).\nIf teamId set, returns all jobs for that team.\nIf teamId and userId set, returns all jobs for that team containing that user.\nIf templateMetadata or jobMetadata is set, teamId must be set.\n\n","properties":{"teamId":{"type":"string"},"userId":{"description":"If not self, teamId required.\n","type":"string"},"isComplete":{"type":"boolean"},"isPreview":{"type":"boolean"},"isStarted":{"description":"By default, only fetch in-progress jobs\n","type":"boolean"},"txt":{"$ref":"#/components/schemas/job.JobTextSearch"},"templateMetadata":{"description":"See <a href=\"metadata.html#Struct_MetadataValue\">MetadataValue</a> for specific metadata filter criteria\n","type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"creatorId":{"description":"If not self, teamId required. Will yield a positive match only for the creator of the job\n","type":"string"},"plannerId":{"description":"If not self, teamId required. Will match jobs where the plannerId == the userId of ANY of\njob planners belonging to that job\n","type":"string"},"jobMetadata":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"modifiedSinceTime":{"type":"integer","format":"int64"},"modifiedBeforeTime":{"type":"integer","format":"int64"},"includeRecurringJobs":{"type":"boolean"},"jobTypes":{"description":"If set, will only include the selected JobTypes, and will override includeRecurringJobs\nIf unset, will not include issues, and abide by includeRecurringJobs\n","type":"array","items":{"$ref":"#/components/schemas/job.JobType"}},"archivedOnly":{"description":"If set to true, will only include archived jobs\nIf set to false, will include all jobs\nIf unset (default), will only include active jobs\n","type":"boolean"},"minCreatedAt":{"description":"Allow users to filter jobs by their createdAt timestamp\n","type":"integer","format":"int64"},"maxCreatedAt":{"type":"integer","format":"int64"},"startedSinceTime":{"type":"integer","format":"int64"},"startedBeforeTime":{"type":"integer","format":"int64"},"sourceTemplateIds":{"type":"array","items":{"type":"string"}},"allSourceTemplateIds":{"description":"When set to true, jobs matched must contain all `sourceTemplateIds` defined.\nBy default, they are multi-select, i.e. jobs with any of `sourceTemplateIds` are matched.\n","type":"boolean"},"priorities":{"description":"For issues only, must only use issue job type in jobTypes\n","type":"array","items":{"type":"integer","format":"int32"}},"srcJobIds":{"description":"For issues only, must only use issue job type in jobTypes\n","type":"array","items":{"type":"string"}},"completedSinceTime":{"type":"integer","format":"int64"},"completedBeforeTime":{"type":"integer","format":"int64"},"teamIds":{"description":"Overrides teamId when set:\nqueries across teams user has admin permission on\n","type":"array","items":{"type":"string"}},"allUserTeams":{"description":"Overrides teamIds and teamId when set: <br>\nQueries across ALL teams user has permissions on <br>\nThis includes admin permissions for all jobs and <br>\nexecutor permissions for on demand jobs\n","type":"boolean"},"pageReq":{"$ref":"#/components/schemas/common.PageReq"}},"type":"object","required":["isStarted"]},"job.JobOrder":{"properties":{"field":{"$ref":"#/components/schemas/job.JobOrderBy"},"asc":{"type":"boolean"}},"type":"object","required":["field","asc"]},"job.JobQueryResult":{"properties":{"jobs":{"type":"array","items":{"$ref":"#/components/schemas/job.JobModular"}},"pageInfo":{"$ref":"#/components/schemas/common.PageInfo"}},"type":"object","required":["jobs"]},"job.JobQueryUpdatedResult":{"properties":{"timestamp":{"type":"integer","format":"int64"},"jobs":{"type":"array","items":{"$ref":"#/components/schemas/job.JobModular"}},"removedJobIds":{"type":"array","items":{"type":"string"}}},"type":"object","required":["timestamp","jobs","removedJobIds"]},"job_event.PlannedProperty":{"properties":{"startAt":{"type":"integer","format":"int64"}},"type":"object"},"job_event.LookupIdProperty":{"properties":{"lookupId":{"type":"string"}},"type":"object","required":["lookupId"]},"job_event.TypeProperty":{"properties":{"typ":{"$ref":"#/components/schemas/job.JobType"}},"type":"object","required":["typ"]},"job_event.IssueLinkOp":{"properties":{"completed":{"type":"boolean"},"issueId":{"type":"string"},"srcPtr":{"$ref":"#/components/schemas/messaging.JobPtr"},"issueTitle":{"type":"string"},"issueCreatorId":{"type":"string"},"issueCreatedAt":{"type":"integer","format":"int64"},"lookupId":{"type":"string"},"priority":{"$ref":"#/components/schemas/job.PriorityLevel"}},"type":"object","required":["issueId"]},"job_event.CreateOp":{"properties":{"isPreview":{"type":"boolean"},"isFromOffline":{"type":"boolean"},"clonedFromJob":{"type":"string"},"source":{"$ref":"#/components/schemas/messaging.JobPtr"},"meshEnabled":{"type":"boolean"},"priority":{"$ref":"#/components/schemas/job.PriorityLevel"},"location":{"type":"string"},"plannedStartJobRoleIds":{"type":"array","items":{"type":"string"}}},"type":"object","required":["isPreview","isFromOffline"]},"job_event.UpdateOp":{"properties":{"location":{"type":"string"},"plannedStartJobRoleIds":{"type":"array","items":{"type":"string"}}},"type":"object"},"job_event.MaterializeOp":{"properties":{"stepGroup":{"$ref":"#/components/schemas/step.BaseStep"},"templateVersions":{"type":"array","items":{"$ref":"#/components/schemas/common.VersionRef"}},"templateDocs":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}}},"type":"object","required":["stepGroup","templateVersions","templateDocs"]},"job_event.StartOp":{"properties":{"isStarted":{"type":"boolean"}},"type":"object","required":["isStarted"]},"job_event.CompleteOp":{"properties":{"isComplete":{"type":"boolean"},"reason":{"type":"string"}},"type":"object","required":["isComplete"]},"job_event.AddRoleOp":{"properties":{"userId":{"type":"string"},"jobRole":{"$ref":"#/components/schemas/job_role.JobRole"},"user":{"$ref":"#/components/schemas/user.User"}},"type":"object","required":["userId","jobRole"]},"job_event.RemoveRoleOp":{"properties":{"userId":{"type":"string"},"jobRoleId":{"type":"string"}},"type":"object","required":["userId"]},"job_event.AddTemplatesOp":{"properties":{"templates":{"type":"array","items":{"$ref":"#/components/schemas/common.VersionRef"}},"position":{"type":"integer","format":"int32"},"materializedSteps":{"type":"array","items":{"$ref":"#/components/schemas/step.BaseStep"}},"materializedDocs":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"addedAfter":{"type":"string"},"plannedDataSheetIdsList":{"type":"array","items":{"type":"object","additionalProperties":{"type":"string"}}}},"type":"object","required":["templates","position"]},"job_event.AddTemplateSetOp":{"properties":{"templateSet":{"$ref":"#/components/schemas/common.VersionRef"},"templates":{"type":"array","items":{"$ref":"#/components/schemas/common.VersionRef"}},"position":{"type":"integer","format":"int32"},"materializedSteps":{"type":"array","items":{"$ref":"#/components/schemas/step.BaseStep"}},"materializedDocs":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"addedAfter":{"type":"string"}},"type":"object","required":["templateSet","templates","position"]},"job_event.RemoveTemplateOp":{"properties":{"templateId":{"type":"string"},"position":{"type":"integer","format":"int32"}},"type":"object","required":["templateId","position"]},"job_event.MoveTemplateOp":{"properties":{"templateId":{"type":"string"},"oldPosition":{"type":"integer","format":"int32"},"newPosition":{"type":"integer","format":"int32"}},"type":"object","required":["templateId","oldPosition","newPosition"]},"job_event.EditTemplateOp":{"properties":{"templateId":{"type":"string"},"position":{"type":"integer","format":"int32"},"plannedDataSheetIds":{"type":"object","additionalProperties":{"type":"string"}}},"type":"object","required":["templateId","position"]},"job_event.MessageOp":{"properties":{"body":{"type":"string"},"structuredBody":{"$ref":"#/components/schemas/messaging.StructuredBody"},"category":{"$ref":"#/components/schemas/messaging.MessageCategory"},"documents":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"updatedSeqId":{"type":"integer","format":"int64"},"messageId":{"type":"string"}},"type":"object","required":["body","category","documents"]},"job_event.StepCompleteOp":{"properties":{"jobStepId":{"type":"string"},"stepId":{"type":"string"},"isComplete":{"type":"boolean"}},"type":"object","required":["jobStepId","isComplete"]},"job_event.StepFieldDataOp":{"properties":{"jobStepId":{"type":"string"},"stepId":{"type":"string"},"fieldId":{"type":"string"},"value":{"$ref":"#/components/schemas/field_data.ExecutionData"},"clearValue":{"type":"boolean"},"document":{"$ref":"#/components/schemas/document.Document"}},"type":"object","required":["jobStepId","fieldId"]},"job_event.StepFieldNotApplicableOp":{"properties":{"jobStepId":{"type":"string"},"stepId":{"type":"string"},"fieldId":{"type":"string"},"isNotApplicable":{"type":"boolean"}},"type":"object","required":["jobStepId","fieldId","isNotApplicable"]},"job_event.StepNotApplicableOp":{"properties":{"jobStepId":{"type":"string"},"stepId":{"type":"string"},"isNotApplicable":{"type":"boolean"}},"type":"object","required":["jobStepId","isNotApplicable"]},"job_event.StepStateOp":{"properties":{"jobStepId":{"type":"string"},"stepId":{"type":"string"},"stepState":{"$ref":"#/components/schemas/job.StepState"}},"type":"object","required":["jobStepId","stepState"]},"job_event.StepGroupConditionalOp":{"properties":{"jobStepGroupId":{"type":"string"},"stepGroupId":{"type":"string"},"isYes":{"type":"boolean"}},"type":"object","required":["jobStepGroupId","isYes"]},"job_event.StepGroupNotApplicableOp":{"properties":{"jobStepGroupId":{"type":"string"},"stepGroupId":{"type":"string"},"isNotApplicable":{"type":"boolean"}},"type":"object","required":["jobStepGroupId","isNotApplicable"]},"job_event.JobOp":{"properties":{"title":{"$ref":"#/components/schemas/common_event.TitleProperty"},"planned":{"$ref":"#/components/schemas/job_event.PlannedProperty"},"lookupId":{"$ref":"#/components/schemas/job_event.LookupIdProperty"},"typ":{"$ref":"#/components/schemas/job_event.TypeProperty"},"update":{"$ref":"#/components/schemas/job_event.UpdateOp"},"addTemplates":{"$ref":"#/components/schemas/job_event.AddTemplatesOp"},"addTemplateSet":{"$ref":"#/components/schemas/job_event.AddTemplateSetOp"},"removeTemplate":{"$ref":"#/components/schemas/job_event.RemoveTemplateOp"},"moveTemplate":{"$ref":"#/components/schemas/job_event.MoveTemplateOp"},"editTemplate":{"$ref":"#/components/schemas/job_event.EditTemplateOp"},"addStep":{"$ref":"#/components/schemas/common_event.AddStepOp"},"addStepGroup":{"$ref":"#/components/schemas/common_event.AddStepGroupOp"},"cloneStep":{"$ref":"#/components/schemas/common_event.CloneStepOp"},"cloneStepGroup":{"$ref":"#/components/schemas/common_event.CloneStepGroupOp"},"addDocument":{"$ref":"#/components/schemas/common_event.AddDocumentOp"},"removeDocument":{"$ref":"#/components/schemas/common_event.RemoveDocumentOp"},"metadataUpdate":{"$ref":"#/components/schemas/common_event.MetadataUpdateOp"},"metadataDelete":{"$ref":"#/components/schemas/common_event.MetadataDeleteOp"},"updateDocument":{"$ref":"#/components/schemas/common_event.UpdateDocumentOp"},"creation":{"$ref":"#/components/schemas/job_event.CreateOp"},"materialize":{"$ref":"#/components/schemas/job_event.MaterializeOp"},"start":{"$ref":"#/components/schemas/job_event.StartOp"},"archive":{"$ref":"#/components/schemas/common_event.ArchiveOp"},"complete":{"$ref":"#/components/schemas/job_event.CompleteOp"},"addRole":{"$ref":"#/components/schemas/job_event.AddRoleOp"},"removeRole":{"$ref":"#/components/schemas/job_event.RemoveRoleOp"},"message":{"$ref":"#/components/schemas/job_event.MessageOp"},"stepComplete":{"$ref":"#/components/schemas/job_event.StepCompleteOp"},"stepFieldData":{"$ref":"#/components/schemas/job_event.StepFieldDataOp"},"stepNA":{"$ref":"#/components/schemas/job_event.StepNotApplicableOp"},"stepGroupConditional":{"$ref":"#/components/schemas/job_event.StepGroupConditionalOp"},"stepGroupNA":{"$ref":"#/components/schemas/job_event.StepGroupNotApplicableOp"},"stepFieldNA":{"$ref":"#/components/schemas/job_event.StepFieldNotApplicableOp"},"issueLink":{"$ref":"#/components/schemas/job_event.IssueLinkOp"},"stepState":{"$ref":"#/components/schemas/job_event.StepStateOp"},"reject":{"$ref":"#/components/schemas/common_event.RejectEventOp"},"noOp":{"$ref":"#/components/schemas/common_event.NoOp"}},"type":"object","required":["title","planned","lookupId","typ","update","addTemplates","addTemplateSet","removeTemplate","moveTemplate","editTemplate","addStep","addStepGroup","cloneStep","cloneStepGroup","addDocument","removeDocument","metadataUpdate","metadataDelete","updateDocument","creation","materialize","start","archive","complete","addRole","removeRole","message","stepComplete","stepFieldData","stepNA","stepGroupConditional","stepGroupNA","stepFieldNA","issueLink","stepState","reject","noOp"]},"job_event.JobEvent":{"properties":{"jobId":{"type":"string"},"pedigree":{"$ref":"#/components/schemas/core_event.Pedigree"},"op":{"$ref":"#/components/schemas/job_event.JobOp"},"inPlanning":{"type":"boolean"},"legacySeqId":{"type":"integer","format":"int64"},"typ":{"$ref":"#/components/schemas/job.JobType"},"processedState":{"$ref":"#/components/schemas/common_event.ProcessedState"},"receivedAt":{"type":"integer","format":"int64"},"serverGenerated":{"type":"boolean"}},"type":"object","required":["jobId","pedigree","op","serverGenerated"]},"job_event.JobState":{"properties":{"job":{"$ref":"#/components/schemas/job.JobModular"},"messages":{"type":"array","items":{"$ref":"#/components/schemas/messaging.Message"}},"executionSnippets":{"type":"array","items":{"$ref":"#/components/schemas/job.ExecutionSnippet"}},"nodes":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}},"eventsCount":{"type":"integer","format":"int64"}},"type":"object","required":["job","messages","executionSnippets","nodes","eventsCount"]},"job_event.CreateClientDocumentsResult":{"properties":{"createdPendingDocuments":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"existingDocuments":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"failedDocuments":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}}},"type":"object","required":["createdPendingDocuments","existingDocuments","failedDocuments"]},"job_event.JobSlice":{"properties":{"top":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}},"jobEvents":{"type":"array","items":{"$ref":"#/components/schemas/job_event.JobEvent"}},"bottom":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}}},"type":"object","required":["top","jobEvents","bottom"]},"job_event.JobSliceAndVersion":{"properties":{"latest":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}},"jobSlice":{"$ref":"#/components/schemas/job_event.JobSlice"}},"type":"object","required":["latest","jobSlice"]},"job_event.GetOptions":{"properties":{"compactParentVersion":{"type":"boolean"}},"type":"object","required":["compactParentVersion"]},"job_filter.TimeType":{"description":"1 - TODAY - Current day the filter is applied\n2 - THIS_WEEK - Current week the filter is applied (Sun - Sat)\n3 - FROM_TO - Specific date range\n","type":"number","enum":[1,2,3]},"job_filter.TimeRange":{"properties":{"fromTime":{"description":"Inclusive >=\n","type":"integer","format":"int64"},"toTime":{"description":"Exclusive <\n","type":"integer","format":"int64"}},"type":"object"},"job_filter.JobTimeRange":{"properties":{"timeType":{"$ref":"#/components/schemas/job_filter.TimeType"},"timeRange":{"$ref":"#/components/schemas/job_filter.TimeRange"}},"type":"object","required":["timeType"]},"job_filter.CommonFilterOpts":{"properties":{"teamId":{"description":"If unset, queries across all teams the user belongs to\n","type":"string"},"title":{"description":"Substring text search on title\n","type":"string"},"states":{"description":"State match: issues do not have PLANNED state\n","type":"array","items":{"$ref":"#/components/schemas/job.JobState"}},"startedTime":{"$ref":"#/components/schemas/job_filter.JobTimeRange"},"completedTime":{"$ref":"#/components/schemas/job_filter.JobTimeRange"},"sourceTemplateIds":{"description":"Templates created from\n","type":"array","items":{"type":"string"}},"allSourceTemplateIds":{"description":"Must have all sourceTemplateIds\n","type":"boolean"}},"type":"object"},"job_filter.JobFilterJobOpts":{"properties":{"opts":{"$ref":"#/components/schemas/job_filter.CommonFilterOpts"},"plannerId":{"description":"Job planner user id\n","type":"string"},"jobMetadata":{"description":"Job metadata\n","type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"templateMetadata":{"description":"Template metadata on the job\n","type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}}},"type":"object","required":["opts"]},"job_filter.JobFilterIssueOpts":{"properties":{"opts":{"$ref":"#/components/schemas/job_filter.CommonFilterOpts"},"creatorId":{"description":"Issue creator id\n","type":"string"},"priorities":{"description":"Issue priorities\n","type":"array","items":{"type":"integer","format":"int32"}},"srcJobIds":{"description":"Source job ids issues are tied to\n","type":"array","items":{"type":"string"}}},"type":"object","required":["opts"]},"job_filter.JobFilterOpts":{"properties":{"jobOpts":{"$ref":"#/components/schemas/job_filter.JobFilterJobOpts"},"issueOpts":{"$ref":"#/components/schemas/job_filter.JobFilterIssueOpts"}},"type":"object","required":["jobOpts","issueOpts"]},"job_filter.JobFilter":{"properties":{"id":{"description":"Unique filter id\n","type":"string"},"name":{"description":"Name for this filter\n","type":"string"},"opts":{"$ref":"#/components/schemas/job_filter.JobFilterOpts"},"order":{"description":"Filter result order\n","type":"array","items":{"$ref":"#/components/schemas/job.JobOrder"}},"position":{"description":"Position within the saved filter list for the user\n","type":"integer","format":"int32"},"updatedAt":{"description":"Last updated timestamp, only populated for fetch and ignored on update\n","type":"integer","format":"int64"}},"type":"object","required":["id","name","opts","order","position"]},"job_filter.JobFilterQueryOpts":{"properties":{"selectOpts":{"$ref":"#/components/schemas/job.JobSelectOpts"},"tzLocation":{"description":"Client IANA time zone location, e.g. \"America/Los_Angeles\", defaults to \"UTC\"\n","type":"string"},"tzOffset":{"description":"Client time zone offset, in seconds east of UTC; only used when tzLocation is unset\n","type":"integer","format":"int64"},"title":{"description":"Further filter search results by job title/unique id\n","type":"string"},"pageReq":{"$ref":"#/components/schemas/common.PageReq"}},"type":"object","required":["selectOpts"]},"job_role.SystemRoleType":{"description":"1 - JOB_CREATOR\n2 - ISSUE_CREATOR\n200 - OBSERVER - Deprecated *\n","type":"number","enum":[1,2,200]},"job_role.StepPermissions":{"properties":{"addAndDuplicateSteps":{"type":"boolean"},"addAndDuplicateStepGroups":{"type":"boolean"},"markStepsNA":{"type":"boolean"},"sendFieldInput":{"type":"boolean"},"completeSteps":{"type":"boolean"}},"type":"object","required":["addAndDuplicateSteps","addAndDuplicateStepGroups","markStepsNA","sendFieldInput","completeSteps"]},"job_role.UserPermissions":{"properties":{"inviteUsers":{"type":"boolean"},"removeUsers":{"type":"boolean"}},"type":"object","required":["inviteUsers","removeUsers"]},"job_role.TemplatePermissions":{"properties":{"addTemplates":{"type":"boolean"},"addSets":{"type":"boolean"}},"type":"object","required":["addTemplates","addSets"]},"job_role.DocumentPermissions":{"properties":{"add":{"type":"boolean"},"remove":{"type":"boolean"}},"type":"object","required":["add","remove"]},"job_role.IssuePermissions":{"properties":{"create":{"type":"boolean"},"resolve":{"type":"boolean"},"inviteUsers":{"type":"boolean"},"removeUsers":{"type":"boolean"}},"type":"object","required":["create","resolve","inviteUsers","removeUsers"]},"job_role.JobPermissions":{"properties":{"editTitle":{"type":"boolean"},"editMetadata":{"type":"boolean"},"complete":{"type":"boolean"},"uncomplete":{"type":"boolean"},"step":{"$ref":"#/components/schemas/job_role.StepPermissions"},"user":{"$ref":"#/components/schemas/job_role.UserPermissions"},"template":{"$ref":"#/components/schemas/job_role.TemplatePermissions"},"doc":{"$ref":"#/components/schemas/job_role.DocumentPermissions"},"issue":{"$ref":"#/components/schemas/job_role.IssuePermissions"}},"type":"object","required":["editTitle","editMetadata","complete","uncomplete","step","user","template","doc"]},"job_role.IndexOpts":{"properties":{"showArchived":{"description":"Set showArchived to false to filter out archived jobRoles. Defaults to true\n","type":"boolean"}},"type":"object","required":["showArchived"]},"job_role.JobRoleSelectOpts":{"properties":{"includeRestrictedUserModulars":{"description":"Returns restricted user ids instead of user modulars when false\n","type":"boolean"},"allUsers":{"description":"Returns roles for all users instead of just current user's\nOnly valid for <code>getAllAssignedRoles</code>,\nand is ignored if user is not a team admin\n","type":"boolean"}},"type":"object","required":["includeRestrictedUserModulars","allUsers"]},"job_role.JobRoleRestriction":{"properties":{"restricted":{"description":"When creating/updating a job role, if true, restrict to the user ids/emails specified by permitUserIds\n<br> When retrieving a job role, it is restricted to the users specified by permittedUsers or permitUserIds based on <code>JobRoleSelectOpts</code>, by default permitUserIds\n","type":"boolean"},"permitUserIds":{"type":"array","items":{"type":"string"}},"permittedUsers":{"type":"array","items":{"$ref":"#/components/schemas/user.UserModular"}}},"type":"object"},"job_role.JobRoleParams":{"description":"Mutable parts of the job role\n","properties":{"name":{"description":"Name of the job role\n","type":"string"},"descrip":{"description":"Description of the job role\n","type":"string"},"permissions":{"$ref":"#/components/schemas/setting.SettingsForm"},"restriction":{"$ref":"#/components/schemas/job_role.JobRoleRestriction"}},"type":"object"},"job_role.JobRole":{"properties":{"id":{"description":"UUID of the job role\n","type":"string"},"teamId":{"description":"UUID of the associated team\n","type":"string"},"name":{"description":"Name of the job role\n","type":"string"},"descrip":{"description":"Description of the job role\n","type":"string"},"archivedAt":{"description":"Unix timestamp of when the role was archived. 0 means the role is not archived.\n","type":"integer","format":"int64"},"systemRole":{"description":"System job role, cannot be modified\n","type":"boolean"},"systemRoleType":{"$ref":"#/components/schemas/job_role.SystemRoleType"},"permissions":{"$ref":"#/components/schemas/job_role.JobPermissions"},"restriction":{"$ref":"#/components/schemas/job_role.JobRoleRestriction"}},"type":"object","required":["id","teamId","name","descrip","archivedAt","systemRole"]},"job_role.PermissionChangeWarning":{"description":"Shows the templates and jobs that would be placed in an un-executable state on the\ngiven permissions update. I.e. a job role is not longer able to execute a step\nbut there exist steps assigned to that job role.\n","properties":{"unexecutableTemplateIds":{"type":"array","items":{"type":"string"}}},"type":"object","required":["unexecutableTemplateIds"]},"job_role.AllRolesResult":{"properties":{"userRoleIds":{"description":"User id to role id list, all this user's assigned roles on the team\n","type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"idRoles":{"description":"All the job roles contained in the above map, indexed by job role id\n","type":"object","additionalProperties":{"$ref":"#/components/schemas/job_role.JobRole"}}},"type":"object","required":["userRoleIds","idRoles"]},"job_role_event.CreateOp":{"properties":{"name":{"type":"string"},"descrip":{"type":"string"},"permissions":{"$ref":"#/components/schemas/setting.SettingsForm"},"restriction":{"$ref":"#/components/schemas/job_role.JobRoleRestriction"},"sys":{"$ref":"#/components/schemas/job_role.SystemRoleType"}},"type":"object","required":["name"]},"job_role_event.UpdateOp":{"properties":{"name":{"type":"string"},"descrip":{"type":"string"},"permissions":{"$ref":"#/components/schemas/setting.SettingsForm"},"restriction":{"$ref":"#/components/schemas/job_role.JobRoleRestriction"}},"type":"object"},"job_role_event.JobRoleOp":{"properties":{"creation":{"$ref":"#/components/schemas/job_role_event.CreateOp"},"update":{"$ref":"#/components/schemas/job_role_event.UpdateOp"},"archive":{"$ref":"#/components/schemas/common_event.ArchiveOp"}},"type":"object","required":["creation","update","archive"]},"job_role_event.JobRoleEvent":{"properties":{"jobRoleId":{"type":"string"},"pedigree":{"$ref":"#/components/schemas/core_event.Pedigree"},"op":{"$ref":"#/components/schemas/job_role_event.JobRoleOp"},"receivedAt":{"type":"integer","format":"int64"}},"type":"object","required":["jobRoleId","pedigree","op"]},"job_role_event.JobRoleEventsResult":{"properties":{"latest":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}},"events":{"type":"array","items":{"$ref":"#/components/schemas/job_role_event.JobRoleEvent"}}},"type":"object","required":["latest","events"]},"job_template.TemplateType":{"description":"0 - Job\n1 - Issue\n","type":"number","enum":[0,1]},"job_template.JobTemplateStatus":{"description":"Status of a job template\n1 - PUBLISHED\n2 - UNPUBLISHED\n3 - IN_REVIEW\n","type":"number","enum":[1,2,3]},"job_template.TemplateOrderBy":{"description":"1 - TITLE\n2 - AUTHORED_AT\n3 - LAST_MODIFIED_AT\n4 - TYPE\n","type":"number","enum":[1,2,3,4]},"job_template.IndexOpts":{"description":"Options for listing job templates\n","properties":{"showUnpublished":{"type":"boolean"},"showArchived":{"type":"boolean"}},"type":"object","required":["showUnpublished","showArchived"]},"job_template.JobTemplateParams":{"description":"Mutable parts of the job template\n","properties":{"title":{"description":"Name of the job template. This is required on creation.\n","type":"string"},"descrip":{"description":"Description of the job template\n","type":"string"},"metadataEntry":{"description":"Metadata for the job template\n","type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"typ":{"$ref":"#/components/schemas/job_template.TemplateType"}},"type":"object"},"job_template.JobTemplateLock":{"description":"NOHTML\n","properties":{"lockHolder":{"$ref":"#/components/schemas/user.User"},"lockedAt":{"description":"Time the lock was acquired\n","type":"integer","format":"int64"},"lastActivityAt":{"description":"Time of last activity\n","type":"integer","format":"int64"},"owned":{"description":"True if owned by current session\n","type":"boolean"}},"type":"object","required":["lockHolder","lockedAt","lastActivityAt","owned"]},"job_template.JobTemplateLockFailed":{"description":"Response type for acquireLock\n","properties":{"previousLock":{"$ref":"#/components/schemas/job_template.JobTemplateLock"},"message":{"type":"string"}},"type":"object","required":["previousLock","message"]},"job_template.ForceAcquireResponse":{"description":"Response type for forceAcquireLock\n","properties":{"previousLock":{"$ref":"#/components/schemas/job_template.JobTemplateLock"},"currentLock":{"$ref":"#/components/schemas/job_template.JobTemplateLock"}},"type":"object","required":["currentLock"]},"job_template.TemplateTag":{"description":"Defines a relationship between a tag and a template. tagId is the only\nrequired field. The server will populate all three fields.\n","properties":{"tagId":{"description":"Id of the associated tag. The tag must belong to the same team as the template.\n","type":"string"},"name":{"description":"Name of the tag. This is a READ-ONLY field, will be ignored on writes\n","type":"string"},"comment":{"description":"Optional comment on the association between the tag and template\n","type":"string"}},"type":"object","required":["tagId"]},"job_template.JobTemplate":{"description":"Fields of a JobTemplate\n","properties":{"id":{"type":"string"},"title":{"description":"The name of a Job Template\n","type":"string"},"version":{"description":"Only increments when <a href=\"#Fn_JobTemplateService_update\">update</a> is called.\n","type":"integer","format":"int32"},"publicVersion":{"description":"Increment logic for <code>publicVersion</code>:<br><br>\nNormal team flow:<br>\n1. A new job template is created with <a href=\"#Fn_JobTemplateService_create\">create</a>, initially <code>publicVersion=0</code> and <code>status=Unpublished</code>.<br>\n2. <code>publicVersion</code> increments by 1 from latest published <code>publicVersion</code> when <a href=\"#Fn_JobTemplateService_publish\">publish</a> is called, and <code>status=Published</code>.<br>\n3. When a new edit is made with <a href=\"#Fn_JobTemplateService_update\">update</a> on either published or unpublished job template, a new entry is created with <code>publicVersion=0</code> and <code>status=Unpublished</code>.<br>\n4. Repeat from step 2) or 3).<br><br>\nReview team flow:<br>\n1. A new job template is created with <a href=\"#Fn_JobTemplateService_create\">create</a>, initially <code>publicVersion=0</code> and <code>status=Unpublished</code>.<br>\n2. <code>publicVersion</code> increments by 1 from max <code>publicVersion</code> when <a href=\"#Fn_JobTemplateService_beginReview\">beginReview</a> is called, and <code>status=InReview</code>. <code>publicVersion</code> does not change if this <code>internalVersion</code> has already been reviewed before, i.e., <code>publicVersion != 0</code>.<br>\n3. <a href=\"#Fn_JobTemplateService_endReview\">endReview</a> must be called next to close review, making <code>status=Unpublished</code>.<br>\n4. A specific <code>publicVersion</code> must be used to call <a href=\"#Fn_JobTemplateService_publishVersion\">publishVersion</a> and make <code>status=Published</code>.<br>\n5. When a new edit is made with <a href=\"#Fn_JobTemplateService_update\">update</a> on either published or unpublished job template, a new entry is created with <code>publicVersion=0</code> and <code>status=Unpublished</code>.<br>\n6. Repeat from step 2) or 5).\n","type":"integer","format":"int32"},"stepGroup":{"$ref":"#/components/schemas/step.BaseStep"},"status":{"description":"Status of the job template\n","type":"string"},"descrip":{"description":"Details about the job\n","type":"string"},"team":{"$ref":"#/components/schemas/team.Team"},"metadataEntry":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"UNSUPPORTEDdocumentEmailAddress":{"description":"UNSUPPORTED Email address for this particular job template\n","type":"string"},"documents":{"description":"List of documents for this job template\n","type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"archivedAt":{"description":"Unix timestamp of when the job template was archived. 0 means the job template is not archived.\nAn archived job template cannot be edited or used to create a job\n","type":"integer","format":"int64"},"lastAuthor":{"description":"The id of the last user to modify this template version\n","type":"string"},"system":{"description":"System template, cannot be modified\n","type":"boolean"},"locked":{"$ref":"#/components/schemas/job_template.JobTemplateLock"},"lastAuthoredAt":{"description":"Unix timestamp of authored time for this edit\n","type":"integer","format":"int64"},"publishedAt":{"description":"Unix timestamp of publish time for this edit. 0 if not published\n","type":"integer","format":"int64"},"lastPublishedAt":{"description":"DEPRECATED Bumps up on Create/Publish/InReview/Reject, 0 if no such event has occurred. Note that this field is wrongly named.\n","type":"integer","format":"int64"},"templateTags":{"description":"List of tags\n","type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateTag"}},"metadataById":{"description":"Replaces metadataEntry\n","type":"object","additionalProperties":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"publishedVersion":{"description":"Only increments when <a href=\"#Fn_JobTemplateService_publish\">publish</a> or <a href=\"#Fn_JobTemplateService_publishVersion\">publishVersion</a> is called.\nIs the same as <code>publicVersion</code> for normal teams, and only increments on publish for review teams.\nIs 0 for all job templates with <code>status!=Published</code>.\n","type":"integer","format":"int32"},"typ":{"$ref":"#/components/schemas/job_template.TemplateType"}},"type":"object","required":["id","title","version","publicVersion","stepGroup","status","descrip","team","UNSUPPORTEDdocumentEmailAddress","documents","archivedAt","lastAuthor","system","lastAuthoredAt","publishedAt","lastPublishedAt","templateTags","metadataById","publishedVersion","typ"]},"job_template.JobTemplateStats":{"properties":{"completedJobs":{"type":"integer","format":"int32"},"activeJobs":{"type":"integer","format":"int32"}},"type":"object","required":["completedJobs","activeJobs"]},"job_template.TemplateDraft":{"properties":{"version":{"type":"integer","format":"int32"},"authoredAt":{"type":"integer","format":"int64"},"authorId":{"type":"string"},"display":{"type":"boolean"},"publicVersion":{"type":"integer","format":"int32"},"status":{"$ref":"#/components/schemas/job_template.JobTemplateStatus"},"publishedVersion":{"type":"integer","format":"int32"}},"type":"object","required":["version","authoredAt","authorId","display","publicVersion","status","publishedVersion"]},"job_template.JobTemplateModular":{"properties":{"id":{"description":"Template UUID\n","type":"string"},"internalVersion":{"description":"See <code>version</code> in <a href=\"#Struct_JobTemplate\">JobTemplate</a>\n","type":"integer","format":"int32"},"publicVersion":{"description":"See <code>publicVersion</code> in <a href=\"#Struct_JobTemplate\">JobTemplate</a>\n","type":"integer","format":"int32"},"title":{"type":"string"},"descrip":{"description":"Description\n","type":"string"},"status":{"$ref":"#/components/schemas/job_template.JobTemplateStatus"},"stepGroupId":{"type":"string"},"teamId":{"type":"string"},"UNSUPPORTEDdocumentEmailAddress":{"description":"UNSUPPORTED Email address for this particular job template\n","type":"string"},"lastAuthoredAt":{"description":"authored time for this edit\n","type":"integer","format":"int64"},"publishedAt":{"description":"published time for this edit, 0 if not published\n","type":"integer","format":"int64"},"archivedAt":{"description":"archive time, 0 means the job template is not archived\n","type":"integer","format":"int64"},"lastAuthorId":{"type":"string"},"system":{"type":"boolean"},"metadataEntry":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"metadataById":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"publishedVersion":{"description":"See <code>publishedVersion</code> in <a href=\"#Struct_JobTemplate\">JobTemplate</a>\n","type":"integer","format":"int32"},"typ":{"$ref":"#/components/schemas/job_template.TemplateType"},"locked":{"$ref":"#/components/schemas/job_template.JobTemplateLock"},"team":{"$ref":"#/components/schemas/team.TeamModular"},"rootHeaders":{"$ref":"#/components/schemas/group_headers.StepGroupHeaders"},"stepGroup":{"$ref":"#/components/schemas/step.BaseStep"},"documents":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"lastPublishedAt":{"description":"DEPRECATED Bumps up on Create/Publish/InReview/Reject, 0 if no such event has occurred. Note that this field is wrongly named.\n","type":"integer","format":"int64"},"lastAuthor":{"$ref":"#/components/schemas/user.User"},"stats":{"$ref":"#/components/schemas/job_template.JobTemplateStats"},"templateTags":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateTag"}},"drafts":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateDraft"}},"lastPublishedVersion":{"description":"last published version for this template. 0 if not published\n","type":"integer","format":"int32"},"lastPublishTime":{"description":"Bumps up on Publish, 0 if never pubished. (fixed version of lastPublishedAt)\n","type":"integer","format":"int64"},"lastModifiedAt":{"description":"Bumps up on edit, status change, archive\n","type":"integer","format":"int64"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}},"references":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"plannedDataSheetIds":{"description":"Map of data sheet set id -> data sheet id picked during job planning\nThis is only valid if the data sheet set ids are contained in <code>references</code> above\n","type":"object","additionalProperties":{"type":"string"}},"snapshottedDataSheetValues":{"description":"Map of data sheet set definition id -> data sheet value snapshotted at/after job start\nThis is only valid if the data sheet set definition ids are contained in <code>references</code> above\n","type":"object","additionalProperties":{"$ref":"#/components/schemas/data_sheet.DataSheetValue"}},"structDiff":{"$ref":"#/components/schemas/diff.ChangeType"},"titleDiff":{"$ref":"#/components/schemas/diff.StringDiff"},"descripDiff":{"$ref":"#/components/schemas/diff.StringDiff"}},"type":"object","required":["id","internalVersion","publicVersion","title","descrip","status","stepGroupId","teamId","UNSUPPORTEDdocumentEmailAddress","lastAuthoredAt","publishedAt","archivedAt","lastAuthorId","system","metadataEntry","metadataById","publishedVersion","typ"]},"job_template.TemplateSelectOpts":{"properties":{"includeTeam":{"type":"boolean"},"includeRootHeaders":{"type":"boolean"},"includeSteps":{"type":"boolean"},"includeDocuments":{"type":"boolean"},"includeLastPublished":{"description":"Loads both lastPublishedAt and lastPublishedVersion\n","type":"boolean"},"includeLastAuthor":{"type":"boolean"},"includeStats":{"type":"boolean"},"includeTags":{"type":"boolean"},"includeDrafts":{"type":"boolean"},"includeLastModified":{"type":"boolean"},"includeAttributes":{"type":"boolean"},"includeRefMap":{"type":"boolean"}},"type":"object","required":["includeTeam","includeRootHeaders","includeSteps","includeDocuments","includeLastPublished","includeLastAuthor","includeStats","includeTags","includeDrafts","includeLastModified","includeAttributes","includeRefMap"]},"job_template.TemplateTextSearch":{"description":"Full text search against title and description\n","properties":{"query":{"type":"string"}},"type":"object","required":["query"]},"job_template.TemplateWhereOpts":{"description":"Options for choosing records\n","properties":{"teamId":{"type":"string"},"isArchived":{"type":"boolean"},"isPublished":{"type":"boolean"},"txt":{"$ref":"#/components/schemas/job_template.TemplateTextSearch"},"metadata":{"description":"See <a href=\"metadata.html#Struct_MetadataValue\">MetadataValue</a> for specific metadata filter criteria\n","type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"authorId":{"type":"string"},"rootCategoryId":{"type":"string"},"modifiedSinceTime":{"type":"integer","format":"int64"},"modifiedBeforeTime":{"type":"integer","format":"int64"},"templateTypes":{"description":"Will default to TemplateType Job\n","type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateType"}},"pageReq":{"$ref":"#/components/schemas/common.PageReq"},"externalOpts":{"$ref":"#/components/schemas/common.ExternalOpts"}},"type":"object","required":["teamId"]},"job_template.TemplateOrder":{"properties":{"field":{"$ref":"#/components/schemas/job_template.TemplateOrderBy"},"asc":{"type":"boolean"}},"type":"object","required":["field","asc"]},"job_template.TemplateQueryResult":{"properties":{"templates":{"type":"array","items":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}},"pageInfo":{"$ref":"#/components/schemas/common.PageInfo"}},"type":"object","required":["templates"]},"job_template.TemplateFetchResult":{"properties":{"template":{"$ref":"#/components/schemas/job_template.JobTemplateModular"},"err":{"$ref":"#/components/schemas/common.SystemException"}},"type":"object","required":["template","err"]},"job_template.TemplateHistoryResult":{"properties":{"template":{"$ref":"#/components/schemas/job_template.JobTemplateModular"},"err":{"$ref":"#/components/schemas/common.SystemException"}},"type":"object","required":["template","err"]},"job_template.TemplatePublicVersion":{"properties":{"jobTemplateId":{"type":"string"},"publicVersion":{"type":"integer","format":"int32"}},"type":"object","required":["jobTemplateId","publicVersion"]},"job_template.TemplateInfo":{"description":"Templates that were added offline\naddedAfterId should be previous step/step group id\nThis is needed as step position could have changed by modifying job online\n\n","properties":{"templateId":{"type":"string"},"templateVersion":{"type":"integer","format":"int32"},"addedAfterId":{"description":"should be the jobBaseStepId of the stepgroup for uniqueness\n","type":"string"},"materializedSteps":{"$ref":"#/components/schemas/step.BaseStep"}},"type":"object","required":["templateId","templateVersion","addedAfterId","materializedSteps"]},"legacy_event.LegacyPedigree":{"properties":{"teamId":{"type":"string"},"actorId":{"type":"string"},"adminActorId":{"type":"string"},"sessionId":{"type":"string"},"clientSessionId":{"type":"string"},"createdAt":{"type":"integer","format":"int64"},"seqId":{"type":"integer","format":"int64"},"parentVersions":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}},"isSideEffect":{"type":"boolean"},"causedEvents":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}},"expandedParentVersions":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}}},"type":"object","required":["teamId","actorId","sessionId","createdAt","isSideEffect"]},"legacy_event.LegacyMessageOp":{"properties":{"body":{"type":"string"},"structuredBody":{"$ref":"#/components/schemas/messaging.StructuredBody"},"category":{"$ref":"#/components/schemas/messaging.MessageCategory"},"documents":{"type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"updatedSeqId":{"type":"integer","format":"int64"},"messageId":{"type":"string"}},"type":"object","required":["body"]},"legacy_event.LegacyJobOp":{"properties":{"title":{"$ref":"#/components/schemas/common_event.TitleProperty"},"planned":{"$ref":"#/components/schemas/job_event.PlannedProperty"},"addTemplates":{"$ref":"#/components/schemas/job_event.AddTemplatesOp"},"addTemplateSet":{"$ref":"#/components/schemas/job_event.AddTemplateSetOp"},"removeTemplate":{"$ref":"#/components/schemas/job_event.RemoveTemplateOp"},"moveTemplate":{"$ref":"#/components/schemas/job_event.MoveTemplateOp"},"addStep":{"$ref":"#/components/schemas/common_event.AddStepOp"},"addStepGroup":{"$ref":"#/components/schemas/common_event.AddStepGroupOp"},"cloneStep":{"$ref":"#/components/schemas/common_event.CloneStepOp"},"cloneStepGroup":{"$ref":"#/components/schemas/common_event.CloneStepGroupOp"},"addDocument":{"$ref":"#/components/schemas/common_event.AddDocumentOp"},"removeDocument":{"$ref":"#/components/schemas/common_event.RemoveDocumentOp"},"metadataUpdate":{"$ref":"#/components/schemas/common_event.MetadataUpdateOp"},"metadataDelete":{"$ref":"#/components/schemas/common_event.MetadataDeleteOp"},"creation":{"$ref":"#/components/schemas/job_event.CreateOp"},"materialize":{"$ref":"#/components/schemas/job_event.MaterializeOp"},"start":{"$ref":"#/components/schemas/job_event.StartOp"},"archive":{"$ref":"#/components/schemas/common_event.ArchiveOp"},"complete":{"$ref":"#/components/schemas/job_event.CompleteOp"},"addRole":{"$ref":"#/components/schemas/job_event.AddRoleOp"},"removeRole":{"$ref":"#/components/schemas/job_event.RemoveRoleOp"},"message":{"$ref":"#/components/schemas/legacy_event.LegacyMessageOp"},"stepComplete":{"$ref":"#/components/schemas/job_event.StepCompleteOp"},"stepFieldData":{"$ref":"#/components/schemas/job_event.StepFieldDataOp"},"stepNA":{"$ref":"#/components/schemas/job_event.StepNotApplicableOp"},"stepGroupConditional":{"$ref":"#/components/schemas/job_event.StepGroupConditionalOp"},"stepGroupNA":{"$ref":"#/components/schemas/job_event.StepGroupNotApplicableOp"}},"type":"object","required":["title","planned","addTemplates","addTemplateSet","removeTemplate","moveTemplate","addStep","addStepGroup","cloneStep","cloneStepGroup","addDocument","removeDocument","metadataUpdate","metadataDelete","creation","materialize","start","archive","complete","addRole","removeRole","message","stepComplete","stepFieldData","stepNA","stepGroupConditional","stepGroupNA"]},"legacy_event.LegacyJobEvent":{"properties":{"jobId":{"type":"string"},"pedigree":{"$ref":"#/components/schemas/legacy_event.LegacyPedigree"},"op":{"$ref":"#/components/schemas/legacy_event.LegacyJobOp"},"inPlanning":{"type":"boolean"},"legacySeqId":{"type":"integer","format":"int64"},"receivedAt":{"type":"integer","format":"int64"},"serverGenerated":{"type":"boolean"}},"type":"object","required":["jobId","pedigree","op","serverGenerated"]},"legacy_event.LegacyTemplateEvent":{"properties":{"templateId":{"type":"string"},"pedigree":{"$ref":"#/components/schemas/legacy_event.LegacyPedigree"},"op":{"$ref":"#/components/schemas/template_event.TemplateOp"},"internalVersion":{"type":"integer","format":"int32"},"publicVersion":{"type":"integer","format":"int32"},"publishedVersion":{"type":"integer","format":"int32"},"newInternalVersion":{"type":"integer","format":"int32"},"newPublicVersion":{"type":"integer","format":"int32"},"newPublishedVersion":{"type":"integer","format":"int32"},"template":{"$ref":"#/components/schemas/job_template.JobTemplateModular"},"receivedAt":{"type":"integer","format":"int64"}},"type":"object","required":["templateId","pedigree","op"]},"mesh.MeshGroup":{"properties":{"id":{"type":"string"},"name":{"type":"string"}},"type":"object","required":["id","name"]},"mesh.MeshHeader":{"properties":{"deviceId":{"type":"string"},"ipAddress":{"type":"string"},"port":{"type":"integer","format":"int32"},"deviceAddress":{"type":"string"},"friendlyName":{"type":"string"},"userId":{"type":"string"},"meshGroup":{"$ref":"#/components/schemas/mesh.MeshGroup"}},"type":"object","required":["deviceId","ipAddress","port","deviceAddress","friendlyName","userId","meshGroup"]},"mesh.GetRequest":{"properties":{"current":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}},"alreadySentDevices":{"type":"array","items":{"type":"string"}},"jobEvents":{"type":"array","items":{"$ref":"#/components/schemas/job_event.JobEvent"}},"unsubscribe":{"type":"boolean"}},"type":"object","required":["current","alreadySentDevices","unsubscribe"]},"mesh.GetResult":{"properties":{"jobEvents":{"type":"array","items":{"$ref":"#/components/schemas/job_event.JobEvent"}}},"type":"object","required":["jobEvents"]},"mesh.onNewEventsResult":{"properties":{"unsubscribe":{"type":"boolean"}},"type":"object","required":["unsubscribe"]},"mesh.GetDocumentResult":{"properties":{"document":{"type":"string","format":"binary"},"waiting":{"type":"array","items":{"$ref":"#/components/schemas/mesh.MeshHeader"}}},"type":"object","required":["document","waiting"]},"messaging.MessageCategory":{"description":"Client should not set MessageCategory, server assumes UserMessage as category\n1 - USER_CHAT\n2 - STATUS_ADD_USER\n3 - STATUS_COMPLETE_STEP\n4 - STATUS_COMPLETE_JOB\n5 - STATUS_ADD_STEP\n6 - STATUS_ADD_DOCUMENT\n7 - STATUS_ADD_DOCUMENT_BY_EMAIL\n8 - STATUS_CREATE_JOB\n9 - USER_PING\n10 - STATUS_START_JOB\n11 - STATUS_APPLICABLE_STEP\n12 - STATUS_NON_APPLICABLE_STEP\n13 - STATUS_REMOVE_USER\n14 - STATUS_REMOVE_DOCUMENT\n15 - STATUS_UNCOMPLETE_JOB\n16 - STATUS_UNCOMPLETE_STEP\n17 - STATUS_CONDITIONAL_YES\n18 - STATUS_CONDITIONAL_NO\n19 - STATUS_APPLICABLE_STEP_GROUP\n20 - STATUS_NON_APPLICABLE_STEP_GROUP\n21 - STATUS_APPLICABLE_FIELD\n22 - STATUS_NON_APPLICABLE_FIELD\n23 - STATUS_JOB_CREATED_ISSUE - New issue created from job\n24 - STATUS_CREATE_ISSUE_ON_JOB\n25 - STATUS_RESOLVE_ISSUE_ON_JOB\n26 - STATUS_COMPLETE_JOB_ON_ISSUE - Job referenced by issue was completed\n27 - STATUS_ADD_ROLE\n28 - STATUS_REMOVE_ROLE\n29 - STATUS_REOPEN_JOB\n30 - STATUS_REOPEN_ISSUE\n31 - STATUS_REOPEN_STANDALONE_ISSUE\n32 - STATUS_RESOLVE_STANDALONE_ISSUE\n33 - STATUS_COMMENT_THREAD\n34 - STATUS_UPDATE_DOCUMENT\n35 - STATUS_ARCHIVE_JOB\n36 - STATUS_TEMPLATE_UPDATE_FOR_JOB\n","type":"number","enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]},"messaging.ThreadMessageCategory":{"description":"1 - USER\n2 - STATUS_RESOLVE\n3 - STATUS_UNRESOLVE\n","type":"number","enum":[1,2,3]},"messaging.ResourceType":{"description":"Indicates the object referenced by the corresponding message argument\n1 - JOB\n2 - USER\n3 - STEP\n4 - DOCUMENT\n5 - JOB_ROLE\n6 - ALL_USERS_IN_JOB - All users in the job. No id required in Template Resource. Used in @All pings\n7 - FIELD\n8 - OTHER\n9 - LOOKUP_ID\n","type":"number","enum":[1,2,3,4,5,6,7,8,9]},"messaging.ReceiverType":{"description":"1 - ALL - receiverId is null\n2 - ROLE - receiverId is jobRoleId\n3 - USER - receiverId is userId\n4 - NONE - receiverId is null\n","type":"number","enum":[1,2,3,4]},"messaging.ThreadState":{"description":"1 - RESOLVED\n2 - UNRESOLVED\n","type":"number","enum":[1,2]},"messaging.MetadataPtr":{"properties":{"id":{"type":"string"}},"type":"object","required":["id"]},"messaging.TitlePtr":{"properties":{},"type":"object"},"messaging.PpePtr":{"properties":{},"type":"object"},"messaging.NoticesPtr":{"properties":{},"type":"object"},"messaging.FieldPtr":{"properties":{"clientId":{"type":"string"}},"type":"object","required":["clientId"]},"messaging.StepPtr":{"properties":{"id":{"description":"Id of the referenced step. Within the context\nof a job, this should be set to the jobBaseStepId\n","type":"string"},"clientId":{"description":"ClientId is needed for elements that change their\nID throughout versions.\n","type":"string"},"metadataPtr":{"$ref":"#/components/schemas/messaging.MetadataPtr"},"fieldPtr":{"$ref":"#/components/schemas/messaging.FieldPtr"},"title":{"type":"string"}},"type":"object","required":["id","clientId"]},"messaging.StepGroupPtr":{"properties":{"id":{"description":"Id of the referenced step. Within the context\nof a job, this should be set to the jobBaseStepId\n","type":"string"},"clientId":{"description":"ClientId is needed for elements that change their\nID throughout versions.\n","type":"string"},"ppePtr":{"$ref":"#/components/schemas/messaging.PpePtr"},"noticesPtr":{"$ref":"#/components/schemas/messaging.NoticesPtr"},"title":{"type":"string"}},"type":"object","required":["id","clientId"]},"messaging.JobPtr":{"properties":{"id":{"description":"id of the job this struct is referencing.\n","type":"string"},"jobType":{"description":"type of this job <br>\nreason we don't use job type enum is to avoid circular dependecy (job already refers here) <br>\nalso since default jobType is 0 which happens to be the Normal type that is the only possible <br>\none (issue referring to source normal job), before the advent of on-demand instances starting <br>\nfrom on-demand jobs (normal referring to source ad hoc job).\n","type":"integer","format":"int32"},"stepPtr":{"$ref":"#/components/schemas/messaging.StepPtr"},"stepGroupPtr":{"$ref":"#/components/schemas/messaging.StepGroupPtr"},"title":{"type":"string"}},"type":"object","required":["id","jobType"]},"messaging.TemplateThreadPtr":{"properties":{"id":{"description":"id of the template this struct is referencing.\n","type":"string"},"stepPtr":{"$ref":"#/components/schemas/messaging.StepPtr"},"stepGroupPtr":{"$ref":"#/components/schemas/messaging.StepGroupPtr"},"titlePtr":{"$ref":"#/components/schemas/messaging.TitlePtr"},"ppePtr":{"$ref":"#/components/schemas/messaging.PpePtr"},"noticesPtr":{"$ref":"#/components/schemas/messaging.NoticesPtr"}},"type":"object","required":["id"]},"messaging.ThreadPtr":{"properties":{"templatePtr":{"$ref":"#/components/schemas/messaging.TemplateThreadPtr"}},"type":"object","required":["templatePtr"]},"messaging.ResourcePtr":{"properties":{"jobPtr":{"$ref":"#/components/schemas/messaging.JobPtr"}},"type":"object","required":["jobPtr"]},"messaging.TemplateResource":{"properties":{"typ":{"$ref":"#/components/schemas/messaging.ResourceType"},"id":{"description":"Value depends on ResourceType value\nUSER, JOB, DOCUMENT, JOB_ROLE:\n   id of resource\nSTEP (includes step groups):\n   jobBasedStepId of resource\nFIELD:\n   comma separated jobBasedStepId of\n   parent step and fieldId\nALL_USERS_IN_JOB:\n   empty\nOTHER:\n   empty\n","type":"string"},"label":{"type":"string"},"ptr":{"$ref":"#/components/schemas/messaging.ResourcePtr"}},"type":"object","required":["typ","id","label"]},"messaging.StructuredBody":{"properties":{"resourceLocator":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/messaging.TemplateResource"}},"tmpl":{"type":"string"}},"type":"object","required":["resourceLocator","tmpl"]},"messaging.GetMessageOptions":{"properties":{"canHandlePendingDocuments":{"description":"This must be set to true to know you can handle messages containing\ndocuments which are not yet uploaded but are “pending” and hopefully\nwill be sent soon.\n","type":"boolean"},"beforeSeqId":{"description":"If this is true, then client is requesting messages from _before_ the\nsequence id, not from _after_ it.\n","type":"boolean"},"limit":{"description":"This is the number of messages to be retrieved at a time.\nAny value less than one is considered to be the maximum allowed.\nThe maximum allowed is defined on the server. At present, it is 10K.\n","type":"integer","format":"int32"}},"type":"object","required":["canHandlePendingDocuments","beforeSeqId","limit"]},"messaging.Message":{"description":"Structured body contains a rich message body of the following format:\n<br><br>\nTemplate example:\n<br><br>\n<pre>\n messageTemplate: \"{{user}} added document {{doc}}\",\n tmpl:\n   \"user\": { \"typ\": User, \"id\": someUUID, \"label\": UserName },\n   \"doc\": { \"typ\": Document, \"id\": someUUID, \"label\": DocName },\n</pre>\nTo display messages as a client, the client should take the following steps:\n<ol type=\"1\">\n<li> Detect all sequences in the template matching \\{\\{([^}]+\\}\\}, anything inside double braces {{}}</li>\n<li> Within those sequences, the text should correspond to an entry in the resourceLocator</li>\n<li> Use the ResourceType of the entry to determine object type</li>\n<li> If the Label field is populated, use the label as the display name. If not,\nuse the Id and Type fields to fetch the appropriate object and label</li>\n</ol>\n\n<br><br>\nSending a strutured message\n<br><br>\nIn order to send structured data, follow the format above when constructing a message struct to\nsend to the server. The server will prioritize the StructuredBody field over the body field when\npresent. In order to escape \"{{\" and \"}}\" replace with \"\\{{\" and \"\\}}\" respectively. The clients\nwill be responsible for unescaping. Escape format is defined for consistency across clients.\n","properties":{"id":{"type":"string"},"jobId":{"type":"string"},"seqId":{"type":"integer","format":"int64"},"clientCreatedAt":{"description":"timestamp when message was created on client - in seconds\n","type":"integer","format":"int64"},"category":{"$ref":"#/components/schemas/messaging.MessageCategory"},"senderId":{"type":"string"},"receiverType":{"$ref":"#/components/schemas/messaging.ReceiverType"},"receiverId":{"type":"string"},"body":{"type":"string"},"serverCreatedAt":{"description":"timestamp when message was received by server - in seconds\n","type":"integer","format":"int64"},"structuredBody":{"$ref":"#/components/schemas/messaging.StructuredBody"},"targetStep":{"$ref":"#/components/schemas/step.BaseStep"},"documents":{"description":"Send documents with isPending = true & empty ids to reserve documentIds;\nthese will be returned in the order they were passed in, but with the ID\nfilled in. If the mimeType and size are provided, the receiving end can be\nclever about its UI to display progress.\n\nOn Get, messages containing any pending documents will only be returned\nif the option canHandlePendingDocuments is set to true.\n","type":"array","items":{"$ref":"#/components/schemas/document.Document"}},"updatedSeqId":{"description":"If this is an update to a previous message that had a pending document,\nthis is a reference to the earlier message that is now updated. If several\nmodifications happen to same user-facing message this will still point to\nthe original seqId (the anchoring location) and not subsequent ones.\n","type":"integer","format":"int64"},"deviceId":{"description":"For Mesh\n","type":"string"},"deviceSeqId":{"type":"integer","format":"int64"}},"type":"object","required":["id","jobId","seqId","clientCreatedAt","category","senderId","receiverType","receiverId","body","serverCreatedAt","documents"]},"messaging.Thread":{"properties":{"id":{"type":"string"},"creatorId":{"type":"string"},"topic":{"type":"string"},"state":{"$ref":"#/components/schemas/messaging.ThreadState"},"ptr":{"$ref":"#/components/schemas/messaging.ThreadPtr"},"createdAt":{"type":"integer","format":"int64"},"lastActivityAt":{"description":"Timestamp of the last activity on this thread. Populated in QueryThreads\n","type":"integer","format":"int64"}},"type":"object","required":["id","creatorId","topic","state","ptr","createdAt"]},"messaging.MessageResult":{"properties":{"id":{"type":"string"},"seqId":{"type":"integer","format":"int64"},"messages":{"description":"Messages, which will contain assigned IDs for pending documents\n","type":"array","items":{"$ref":"#/components/schemas/messaging.Message"}}},"type":"object","required":["id","seqId","messages"]},"messaging.GetMessagesResult":{"properties":{"seqId":{"description":"The maximum seqId from the accompanying messages list\n","type":"integer","format":"int64"},"messages":{"type":"array","items":{"$ref":"#/components/schemas/messaging.Message"}}},"type":"object","required":["seqId","messages"]},"messaging.ThreadParams":{"properties":{"state":{"$ref":"#/components/schemas/messaging.ThreadState"}},"type":"object"},"messaging.ThreadMessageResult":{"properties":{"nodeVersion":{"$ref":"#/components/schemas/core_event.NodeVersion"}},"type":"object","required":["nodeVersion"]},"messaging.ThreadWhereOpts":{"properties":{"templateId":{"type":"string"}},"type":"object"},"messaging.ThreadQueryResult":{"properties":{"threads":{"type":"array","items":{"$ref":"#/components/schemas/messaging.Thread"}}},"type":"object","required":["threads"]},"metadata.MetadataType":{"description":"Type of metadata element\n1 - TEXT - Freeform text field\n2 - NUMBER - Numeric\n3 - LIST - Restricted list of options\n4 - MULTI_SELECT_LIST - Multi-select list of options\n5 - DATE - Date field\n","type":"number","enum":[1,2,3,4,5]},"metadata.Owner":{"description":"Owning scope for metadata\n0 - ALL - Used to request all metadata on a team; not valid on input\n1 - JOB_TEMPLATE - Metadata item for templates and template sets\n2 - STEP_GROUP - NOHTML Metadata item for step groups (not implemented)\n3 - STEP - Metadata item for steps\n4 - JOB - Metadata item for jobs (i.e. Job Parameters)\n","type":"number","enum":[0,1,2,3,4]},"metadata.MetadataValue":{"properties":{"text":{"description":"string value; when passed in <code>*WhereOpts</code>, uses full text searching\n","type":"string"},"number":{"description":"double value; when passed in <code>*WhereOpts</code>, uses exact number searching\n","type":"number","format":"double"},"listValue":{"description":"string value from metadata list of options; when passed in <code>*WhereOpts</code>, uses exact string searching\n","type":"string"},"listValueId":{"description":"value id referring to <code>listValue</code>\n","type":"string"},"selectedListValues":{"$ref":"#/components/schemas/common.SelectedListValues"},"selectedListValueIds":{"$ref":"#/components/schemas/common.SelectedListValueIds"},"date":{"description":"timestamp for metadata date\n","type":"integer","format":"int64"}},"type":"object","required":["text","number","listValue","listValueId","selectedListValues","selectedListValueIds","date"]},"metadata.MetadataTextVal":{"description":"NOHTML\n","properties":{"text":{"type":"string"}},"type":"object","required":["text"]},"metadata.MetadataNumberVal":{"description":"NOHTML\n","properties":{"number":{"type":"number","format":"double"}},"type":"object","required":["number"]},"metadata.MetadataListVal":{"description":"NOHTML\nMetadataListVal contains an id and value, both describing the same selected list option. The value param\nis optional when sending data to the server, but the server should always populate both fields.\n","properties":{"id":{"description":"unique identifier of the list item\n","type":"string"},"value":{"description":"human readable version. Should always be sent when sent from the server\n","type":"string"}},"type":"object","required":["id"]},"metadata.MetadataMultiselectListVal":{"description":"NOHTML\nMetadataMultiselectListVal contains a list of MetadataListVal, each of which represents a chosen list option\nNote: list was chosen over set because there are issues writing sets of objects into json. If we ever want\nto be able to send events using a json protocol, we should avoid sets of objects\n","properties":{"selectedValues":{"type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataListVal"}}},"type":"object","required":["selectedValues"]},"metadata.MetadataValueWithIds":{"description":"NOHTML\nMetadataValueWithIds replaces MetadataValue. There is no new functionality here, but it will always\ninclude both unique uuids alongside the human readable version of those values. Additionally, this\ntype will use objects even for the simpler fields, as that provides more ability for backwards\ncompatibility as things change going forward.\nNOTE: This alternate version is currently only used in events. More work would need to be done to implement\nthis across the rest of the app, and there isn't a lot of immediate benefit until a new feature crops\nup that requires editing the MetadataValue struct. At which point in time, I'd recommend switching\nover to this version.\n","properties":{"textVal":{"$ref":"#/components/schemas/metadata.MetadataTextVal"},"numberVal":{"$ref":"#/components/schemas/metadata.MetadataNumberVal"},"listVal":{"$ref":"#/components/schemas/metadata.MetadataListVal"},"multiselectListVal":{"$ref":"#/components/schemas/metadata.MetadataMultiselectListVal"}},"type":"object","required":["textVal","numberVal","listVal","multiselectListVal"]},"metadata.MetadataValueDiff":{"description":"Used to indicate diff in MetadataEntries\n","properties":{"latestChange":{"$ref":"#/components/schemas/diff.Change"},"otherValue":{"$ref":"#/components/schemas/metadata.MetadataValue"}},"type":"object","required":["latestChange"]},"metadata.Range":{"properties":{"range_start":{"type":"number","format":"double"},"range_end":{"type":"number","format":"double"}},"type":"object"},"metadata.ListOptions":{"properties":{"options":{"description":"list of options to choose from\n","type":"array","items":{"type":"string"}},"valueIds":{"description":"list of value ids to uniquely identify the options\n","type":"array","items":{"type":"string"}}},"type":"object","required":["options"]},"metadata.Constraints":{"properties":{"range":{"$ref":"#/components/schemas/metadata.Range"},"listOptions":{"$ref":"#/components/schemas/metadata.ListOptions"}},"type":"object"},"metadata.Metadata":{"properties":{"id":{"type":"string"},"key":{"description":"Display name of metadata element\n","type":"string"},"type":{"$ref":"#/components/schemas/metadata.MetadataType"},"constraints":{"$ref":"#/components/schemas/metadata.Constraints"},"owner":{"$ref":"#/components/schemas/metadata.Owner"},"createdAt":{"description":"Timestamp of when the Metadata was created\n","type":"integer","format":"int64"},"isRequired":{"description":"Is data required (for template metadata, before starting)\n","type":"boolean"},"archivedAt":{"description":"Timestamp of when the Metadata was archived, or 0 if not archived\n","type":"integer","format":"int64"},"updatedAt":{"description":"Timestamp of when the Metadata was last updated\n","type":"integer","format":"int64"},"position":{"description":"Display position, used as the sort index;\nif not passed in, add 1.0 to highest for team+owner\n","type":"number","format":"double"},"defaultValue":{"$ref":"#/components/schemas/metadata.MetadataValue"},"clearDefault":{"description":"Flag to clear the default value, if previously set\n","type":"boolean"},"externallyManaged":{"description":"Flag to indicate this field is externally managed\n","type":"boolean"}},"type":"object","required":["id","key","type","constraints","owner","createdAt","isRequired","archivedAt","updatedAt"]},"metadata.MetadataEntry":{"properties":{"metadataId":{"type":"string"},"key":{"type":"string"},"value":{"$ref":"#/components/schemas/metadata.MetadataValue"},"idValue":{"$ref":"#/components/schemas/metadata.MetadataValue"},"externallyManaged":{"description":"This value is a metadata field that is externally managed\n","type":"boolean"},"referenced":{"type":"boolean"},"valueDiff":{"$ref":"#/components/schemas/metadata.MetadataValueDiff"}},"type":"object","required":["metadataId","key","value"]},"metadata.ListOptionParams":{"description":"Optional parameters when updating list metadata values\n","properties":{"name":{"description":"rename value\n","type":"string"},"position":{"description":"move value to new position, append if -1\n","type":"integer","format":"int32"},"alphabetical":{"description":"insertion order\n","type":"boolean"}},"type":"object"},"notification.NotificationEvent":{"description":"1 - NamedMentionMessage\n2 - RoleMentionMessage\n3 - AllMentionMessage\n4 - ActionRequired\n5 - AddRole\n6 - RemoveRole\n7 - JobStart\n8 - JobComplete\n9 - JobReopen\n10 - IssueCreate\n11 - IssueResolve\n12 - IssueReopen\n13 - StandaloneIssueCreate\n14 - StandaloneIssueResolve\n15 - StandaloneIssueReopen\n16 - ThreadNamedMentionMessage\n17 - Deviation\n18 - Generic\n","type":"number","enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]},"notification.Category":{"description":"1 - Deviation\n2 - MarkedNA\n3 - Incomplete\n4 - UnexpectedValue\n5 - JobActivity\n6 - IssueActivity\n7 - MessageActivity\n8 - UserActivity\n9 - TemplateActivity\n10 - ActionRequired\n","type":"number","enum":[1,2,3,4,5,6,7,8,9,10]},"notification.Notification":{"properties":{"id":{"type":"string"},"event":{"$ref":"#/components/schemas/notification.NotificationEvent"},"metadata":{"type":"object","additionalProperties":{"type":"string"}},"sequenceId":{"type":"integer","format":"int64"},"readAt":{"type":"integer","format":"int64"},"createdAt":{"type":"integer","format":"int64"},"structuredBody":{"$ref":"#/components/schemas/messaging.StructuredBody"}},"type":"object","required":["id","event","metadata","sequenceId","readAt","createdAt","structuredBody"]},"notification.NotificationResponse":{"properties":{"unreadNotifications":{"type":"integer","format":"int64"},"notifications":{"type":"array","items":{"$ref":"#/components/schemas/notification.Notification"}},"totalNotifications":{"type":"integer","format":"int64"},"remainingNotifications":{"type":"integer","format":"int64"}},"type":"object","required":["unreadNotifications","notifications","totalNotifications","remainingNotifications"]},"notification.NotificationTypes":{"properties":{"regular":{"type":"boolean"},"push":{"type":"boolean"},"email":{"type":"boolean"}},"type":"object"},"notification.NotificationSetting":{"properties":{"types":{"$ref":"#/components/schemas/notification.NotificationTypes"},"subCategories":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/notification.NotificationTypes"}}},"type":"object","required":["types"]},"notification_event.InputType":{"description":"1 - STRING\n2 - INTEGER\n","type":"number","enum":[1,2]},"notification_event.Hub":{"properties":{"userId":{"type":"string"},"header":{"type":"string"},"body":{"type":"string"},"footer":{"type":"string"}},"type":"object","required":["userId","header","body","footer"]},"notification_event.Push":{"properties":{"userId":{"type":"string"},"pushVendor":{"type":"string"},"pushToken":{"type":"string"},"text":{"type":"string"},"payload":{"type":"object","additionalProperties":{"type":"string"}}},"type":"object","required":["userId","text"]},"notification_event.Email":{"properties":{"to":{"type":"string"},"toName":{"type":"string"},"subject":{"type":"string"},"body":{"type":"string"}},"type":"object","required":["to","subject","body"]},"notification_event.PhoneMessage":{"properties":{"SMS":{"type":"string"},"Voice":{"type":"string"}},"type":"object","required":["SMS","Voice"]},"notification_event.Phone":{"properties":{"countryCode":{"type":"string"},"phoneNumber":{"type":"string"},"message":{"$ref":"#/components/schemas/notification_event.PhoneMessage"}},"type":"object","required":["countryCode","phoneNumber","message"]},"notification_event.ResponsePath":{"properties":{"path":{"type":"string"},"name":{"type":"string"},"inputType":{"$ref":"#/components/schemas/notification_event.InputType"}},"type":"object","required":["path","name","inputType"]},"notification_event.Webhook":{"properties":{"url":{"type":"string"},"method":{"type":"string"},"headers":{"type":"object","additionalProperties":{"type":"string"}},"payload":{"type":"string"},"responsePaths":{"type":"array","items":{"$ref":"#/components/schemas/notification_event.ResponsePath"}}},"type":"object","required":["url","method","headers","payload","responsePaths"]},"notification_event.NotificationOp":{"properties":{"hub":{"$ref":"#/components/schemas/notification_event.Hub"},"push":{"$ref":"#/components/schemas/notification_event.Push"},"email":{"$ref":"#/components/schemas/notification_event.Email"},"phone":{"$ref":"#/components/schemas/notification_event.Phone"},"webhook":{"$ref":"#/components/schemas/notification_event.Webhook"}},"type":"object","required":["hub","push","email","phone","webhook"]},"notification_event.NotificationEvent":{"properties":{"pedigree":{"$ref":"#/components/schemas/core_event.Pedigree"},"op":{"$ref":"#/components/schemas/notification_event.NotificationOp"},"jobId":{"type":"string"},"jobBaseStepId":{"type":"string"},"fieldId":{"type":"string"}},"type":"object","required":["pedigree","op","jobId","jobBaseStepId","fieldId"]},"notification_event.IntegrationResponse":{"properties":{"baseEvent":{"$ref":"#/components/schemas/notification_event.NotificationEvent"},"statusCode":{"type":"integer","format":"int32"},"responseBytes":{"type":"string"}},"type":"object","required":["baseEvent","statusCode","responseBytes"]},"notification_template.NotificationTemplateType":{"description":"Notification Templates types\nEvery new Enum added to this list, must be also added to 'notification_templates' table 'type' column\n1 - hub\n2 - push\n3 - email\n4 - phone\n5 - webhook\n","type":"number","enum":[1,2,3,4,5]},"notification_template.NotificationTemplate":{"properties":{"id":{"type":"string"},"teamId":{"type":"string"},"label":{"type":"string"},"type":{"$ref":"#/components/schemas/notification_template.NotificationTemplateType"},"payload":{"type":"string"},"createdAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"},"archivedAt":{"type":"integer","format":"int64"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"type":"object","required":["id","teamId","label","type","payload","createdAt","updatedAt","archivedAt"]},"notification_template.NotificationTemplateField":{"properties":{"id":{"type":"string"},"notificationTemplateId":{"type":"string"},"ownerId":{"type":"string"},"notificationTemplate":{"$ref":"#/components/schemas/notification_template.NotificationTemplate"},"references":{"type":"array","items":{"$ref":"#/components/schemas/reference.Reference"}},"createdAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"},"targets":{"type":"array","items":{"$ref":"#/components/schemas/reference.Target"}}},"type":"object","required":["id","notificationTemplateId","ownerId","references","createdAt","updatedAt","targets"]},"notification_template.ReferenceableNotificationOp":{"properties":{"op":{"$ref":"#/components/schemas/notification_event.NotificationOp"},"placeholders":{"type":"array","items":{"$ref":"#/components/schemas/reference.Placeholder"}}},"type":"object","required":["op","placeholders"]},"notification_template.Source":{"properties":{"jobId":{"type":"string"},"jobBaseStepId":{"type":"string"},"fieldId":{"type":"string"},"clientId":{"type":"string"}},"type":"object","required":["jobId","jobBaseStepId","fieldId","clientId"]},"notification_template.NotificationParams":{"properties":{"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"type":"object"},"oversize_kafka_message.OversizeKafkaMessage":{"properties":{"datastoreId":{"type":"string"},"speciesIdentifier":{"type":"string"}},"type":"object","required":["datastoreId","speciesIdentifier"]},"paging.PageTokenSortOrder":{"description":"NOHTML\n","properties":{"jobOrder":{"type":"array","items":{"$ref":"#/components/schemas/job.JobOrder"}},"templateOrder":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateOrder"}},"userOrder":{"type":"array","items":{"$ref":"#/components/schemas/user.UserOrder"}},"settingChangeOrder":{"type":"array","items":{"$ref":"#/components/schemas/setting.SettingChangeOrder"}},"debugReportOrder":{"type":"array","items":{"$ref":"#/components/schemas/debug_report.DebugReportOrder"}},"dataSheetSetOrder":{"type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheetSetOrder"}},"dataSheetOrder":{"type":"array","items":{"$ref":"#/components/schemas/data_sheet.DataSheetOrder"}}},"type":"object","required":["jobOrder","templateOrder","userOrder","settingChangeOrder","debugReportOrder","dataSheetSetOrder","dataSheetOrder"]},"paging.PageToken":{"description":"NOHTML\n","properties":{"num":{"type":"integer","format":"int32"},"offset":{"type":"integer","format":"int32"},"total":{"type":"integer","format":"int32"},"sortOrder":{"$ref":"#/components/schemas/paging.PageTokenSortOrder"},"resumeKeys":{"type":"array","items":{"type":"string"}}},"type":"object","required":["num","offset"]},"presence.PresenceState":{"description":"1 - OFFLINE\n2 - ONLINE\n3 - UNKNOWN\n","type":"number","enum":[1,2,3]},"reference.RefSource":{"description":"1 - JOB_METADATA\n2 - DATA_SHEET_SET\n3 - DATA_SHEET_DEFINITION\n","type":"number","enum":[1,2,3]},"reference.Placeholder":{"description":"1 - JOB_TITLE\n2 - FIELD_VALUE\n3 - JOB_ID\n4 - JOB_UUID\n5 - ACTOR_NAME\n6 - DATASHEET\n7 - JOB_METADATA\n8 - TEXT_VALUE\n9 - FIELD_TITLE\n10 - JOB_URL\n11 - STEP_ID\n12 - STEP_TITLE\n13 - JOB_TEMPLATE_ID\n14 - JOB_TEMPLATE_TITLE\n15 - USER_EMAIL\n16 - ISSUE_ID\n17 - ISSUE_UUID\n18 - ISSUE_TITLE\n19 - ISSUE_URL\n20 - JOB_BASE_STEP_ID\n","type":"number","enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]},"reference.JobMetadataRef":{"properties":{"metadataId":{"type":"string"},"key":{"type":"string"}},"type":"object","required":["metadataId"]},"reference.DataSheetRef":{"properties":{"definitionId":{"type":"string"},"setId":{"type":"string"},"definitionName":{"type":"string"},"setName":{"type":"string"}},"type":"object","required":["definitionId","setId"]},"reference.JobTitleRef":{"properties":{},"type":"object"},"reference.JobIdRef":{"properties":{},"type":"object"},"reference.JobUuidRef":{"properties":{},"type":"object"},"reference.JobUrlRef":{"properties":{},"type":"object"},"reference.FieldValueRef":{"properties":{"clientId":{"type":"string"}},"type":"object","required":["clientId"]},"reference.FieldTitleRef":{"properties":{"clientId":{"type":"string"}},"type":"object","required":["clientId"]},"reference.ActorNameRef":{"properties":{},"type":"object"},"reference.TextValueRef":{"properties":{"value":{"type":"string"}},"type":"object","required":["value"]},"reference.StepIdRef":{"properties":{"clientId":{"type":"string"}},"type":"object","required":["clientId"]},"reference.StepTitleRef":{"properties":{"clientId":{"type":"string"}},"type":"object","required":["clientId"]},"reference.JobBaseStepIdRef":{"properties":{"clientId":{"type":"string"}},"type":"object","required":["clientId"]},"reference.JobTemplateIdRef":{"properties":{},"type":"object"},"reference.JobTemplateTitleRef":{"properties":{},"type":"object"},"reference.UserEmailRef":{"properties":{},"type":"object"},"reference.IssueIdRef":{"properties":{},"type":"object"},"reference.IssueUuidRef":{"properties":{},"type":"object"},"reference.IssueUrlRef":{"properties":{},"type":"object"},"reference.IssueTitleRef":{"properties":{},"type":"object"},"reference.Reference":{"properties":{"jobMetadataRef":{"$ref":"#/components/schemas/reference.JobMetadataRef"},"dataSheetRef":{"$ref":"#/components/schemas/reference.DataSheetRef"},"fieldValueRef":{"$ref":"#/components/schemas/reference.FieldValueRef"},"jobTitleRef":{"$ref":"#/components/schemas/reference.JobTitleRef"},"jobIdRef":{"$ref":"#/components/schemas/reference.JobIdRef"},"jobUuidRef":{"$ref":"#/components/schemas/reference.JobUuidRef"},"actorNameRef":{"$ref":"#/components/schemas/reference.ActorNameRef"},"textValueRef":{"$ref":"#/components/schemas/reference.TextValueRef"},"fieldTitleRef":{"$ref":"#/components/schemas/reference.FieldTitleRef"},"jobUrlRef":{"$ref":"#/components/schemas/reference.JobUrlRef"},"stepIdRef":{"$ref":"#/components/schemas/reference.StepIdRef"},"stepTitleRef":{"$ref":"#/components/schemas/reference.StepTitleRef"},"jobTemplateIdRef":{"$ref":"#/components/schemas/reference.JobTemplateIdRef"},"jobTemplateTitleRef":{"$ref":"#/components/schemas/reference.JobTemplateTitleRef"},"userEmailRef":{"$ref":"#/components/schemas/reference.UserEmailRef"},"issueIdRef":{"$ref":"#/components/schemas/reference.IssueIdRef"},"issueUuidRef":{"$ref":"#/components/schemas/reference.IssueUuidRef"},"issueUrlRef":{"$ref":"#/components/schemas/reference.IssueUrlRef"},"issueTitleRef":{"$ref":"#/components/schemas/reference.IssueTitleRef"},"jobBaseStepIdRef":{"$ref":"#/components/schemas/reference.JobBaseStepIdRef"}},"type":"object","required":["jobMetadataRef","dataSheetRef","fieldValueRef","jobTitleRef","jobIdRef","jobUuidRef","actorNameRef","textValueRef","fieldTitleRef","jobUrlRef","stepIdRef","stepTitleRef","jobTemplateIdRef","jobTemplateTitleRef","userEmailRef","issueIdRef","issueUuidRef","issueUrlRef","issueTitleRef","jobBaseStepIdRef"]},"reference.AutoPopulatedFieldRef":{"properties":{"clientId":{"type":"string"},"fieldId":{"type":"string"}},"type":"object","required":["clientId","fieldId"]},"reference.NoRef":{"properties":{},"type":"object"},"reference.Target":{"properties":{"autoPopulatedFieldRef":{"$ref":"#/components/schemas/reference.AutoPopulatedFieldRef"},"noRef":{"$ref":"#/components/schemas/reference.NoRef"}},"type":"object","required":["autoPopulatedFieldRef","noRef"]},"reference.StringWrapper":{"properties":{"template":{"type":"string"},"references":{"type":"array","items":{"$ref":"#/components/schemas/reference.Reference"}},"resolved":{"type":"string"}},"type":"object","required":["template"]},"reference.NumberWrapper":{"properties":{"reference":{"$ref":"#/components/schemas/reference.Reference"},"number":{"$ref":"#/components/schemas/common.PreciseNumber"}},"type":"object"},"schedule.RepeatFrequency":{"description":"0 - MINUTELY\n1 - HOURLY\n2 - DAILY\n3 - WEEKLY\n4 - MONTHLY\n5 - YEARLY\n","type":"number","enum":[0,1,2,3,4,5]},"schedule.RecurringRule":{"properties":{"startTime":{"description":"The start and end time formats should be \"YYYY-MM-DDTHH:MM:SS -0800\"\n","type":"string"},"endTime":{"description":"if unset assumes will repeat forever\n","type":"string"},"repeatTimes":{"description":"If unset or negative will repeat forever\n","type":"integer","format":"int32"},"repeat":{"$ref":"#/components/schemas/schedule.RepeatFrequency"},"repeatInterval":{"type":"integer","format":"int32"},"dayOfWeek":{"description":"0 - Sunday to 6 - Saturday\n","type":"array","items":{"type":"integer","format":"int32"}},"dayOfMonth":{"description":"from 1 to 31\n","type":"array","items":{"type":"integer","format":"int32"}},"month":{"description":"from 1 to 12\n","type":"array","items":{"type":"integer","format":"int32"}},"location":{"type":"string"}},"type":"object","required":["startTime","repeat","repeatInterval"]},"schedule.ScheduleLog":{"properties":{"scheduleId":{"type":"string"},"runAt":{"type":"string"},"error":{"type":"string"},"nextRunAt":{"type":"string"},"timeStartedAt":{"type":"integer","format":"int64"},"timeTaken":{"description":"This is in NANO-seconds\n","type":"integer","format":"int64"}},"type":"object","required":["scheduleId","runAt","error","nextRunAt","timeStartedAt","timeTaken"]},"schedule.Schedule":{"properties":{"id":{"type":"string"},"ownerId":{"type":"string"},"scheduleType":{"type":"integer","format":"int32"},"numRuns":{"type":"integer","format":"int32"},"numFailures":{"type":"integer","format":"int32"},"lastSuccess":{"type":"string"},"nextRunAt":{"type":"string"},"rule":{"$ref":"#/components/schemas/schedule.RecurringRule"},"completedAt":{"type":"string"},"pausedAt":{"type":"string"},"error":{"type":"string"}},"type":"object","required":["id","ownerId","scheduleType","numRuns","numFailures","lastSuccess","nextRunAt","completedAt","pausedAt"]},"schedule.GetScheduleResult":{"properties":{"schedule":{"$ref":"#/components/schemas/schedule.Schedule"},"logs":{"type":"array","items":{"$ref":"#/components/schemas/schedule.ScheduleLog"}},"nextScheduledRuns":{"type":"array","items":{"type":"string"}}},"type":"object","required":["schedule"]},"schema.ConnectionSchema":{"description":"NOHTML Schema for the connection topic, consumed by Dendrite in Becaon\n","properties":{"thread":{"$ref":"#/components/schemas/thread_event.ThreadEvent"}},"type":"object","required":["thread"]},"schema.TemplatesSchema":{"description":"NOHTML Schema for the templates topic\n","properties":{"template":{"$ref":"#/components/schemas/template_event.TemplateEvent"},"thread":{"$ref":"#/components/schemas/thread_event.ThreadEvent"}},"type":"object","required":["template","thread"]},"schema.WebsocketSchema":{"description":"NOTHML Schema for events pushed down to clients via websocket\n","properties":{"thread":{"$ref":"#/components/schemas/thread_event.ThreadEvent"}},"type":"object","required":["thread"]},"setting.SettingType":{"description":"There are two type of settings FEATURE and PARAMETER\nFEATURE is real feature flag which means they enable or disable a feature\nPARAMETER is that are set for a specific team (like photo quality for example)\n1 - FEATURE\n2 - PARAMETER\n","type":"number","enum":[1,2]},"setting.Component":{"description":"1 - ANDROID\n2 - IOS\n3 - WEB\n","type":"number","enum":[1,2,3]},"setting.SettingChangeOrderBy":{"description":"1 - CHANGE_NUMBER\n2 - AUTHOR\n","type":"number","enum":[1,2]},"setting.OptionSetting":{"description":"Setting with a String input\n","properties":{"index":{"description":"the order in which to display the settings. Read only\n","type":"integer","format":"int32"},"title":{"type":"string"},"descrip":{"type":"string"},"value":{"description":"input value, set to null for no update\n","type":"string"},"id":{"type":"string"},"options":{"type":"array","items":{"type":"string"}},"deleteValue":{"description":"Set this value to true, if you want to delete the setting. Will not\nbe set by server ever. If set it will ignore the value of \"value\"\n","type":"boolean"},"isGAFeature":{"type":"boolean"},"settingType":{"$ref":"#/components/schemas/setting.SettingType"}},"type":"object","required":["index","title","descrip","id","options"]},"setting.TextSetting":{"description":"Setting with a String input\n","properties":{"index":{"description":"the order in which to display the settings. Read only\n","type":"integer","format":"int32"},"title":{"type":"string"},"descrip":{"type":"string"},"value":{"description":"input value, set to null for no update\n","type":"string"},"id":{"type":"string"},"deleteValue":{"description":"Set this value to true, if you want to delete the setting. Will not\nbe set by server ever. If set it will ignore the value of \"value\"\n","type":"boolean"},"isGAFeature":{"type":"boolean"},"settingType":{"$ref":"#/components/schemas/setting.SettingType"}},"type":"object","required":["index","title","descrip","id"]},"setting.ToggleSetting":{"description":"Setting with a binary input\n","properties":{"index":{"description":"the order in which to display the settings. Read only\n","type":"integer","format":"int32"},"title":{"type":"string"},"descrip":{"type":"string"},"value":{"description":"input value, set to null for no update\n","type":"boolean"},"id":{"type":"string"},"deleteValue":{"description":"Set this value to true, if you want to delete the setting. Will not\nbe set by server ever. If set it will ignore the value of \"value\"\n","type":"boolean"},"isGAFeature":{"type":"boolean"},"settingType":{"$ref":"#/components/schemas/setting.SettingType"}},"type":"object","required":["index","title","descrip","id"]},"setting.SettingImpl":{"description":"struct to allow for future settings types\n","properties":{"toggle":{"$ref":"#/components/schemas/setting.ToggleSetting"},"text":{"$ref":"#/components/schemas/setting.TextSetting"},"option":{"$ref":"#/components/schemas/setting.OptionSetting"}},"type":"object","required":["toggle","text","option"]},"setting.SettingsGroup":{"description":"Represents a group of settings. Read only\n","properties":{"index":{"description":"the order in which to display the groups\n","type":"integer","format":"int32"},"title":{"type":"string"},"children":{"description":"id to setting\n","type":"object","additionalProperties":{"$ref":"#/components/schemas/setting.SettingImpl"}},"id":{"type":"string"}},"type":"object","required":["index","title","children","id"]},"setting.SettingsForm":{"properties":{"categories":{"description":"Map of id to SettingsGroup. Read only\n","type":"object","additionalProperties":{"$ref":"#/components/schemas/setting.SettingsGroup"}}},"type":"object","required":["categories"]},"setting.SettingRule":{"properties":{"teamId":{"type":"string"},"userId":{"type":"string"},"component":{"$ref":"#/components/schemas/setting.Component"},"getDefaults":{"type":"boolean"}},"type":"object"},"setting.SettingChange":{"properties":{"changeNumber":{"type":"integer","format":"int64"},"author":{"$ref":"#/components/schemas/user.User"},"createdAt":{"type":"integer","format":"int64"},"commitMessage":{"type":"string"},"updatedSettings":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/setting.SettingImpl"}}},"type":"object","required":["changeNumber","author","createdAt","commitMessage","updatedSettings"]},"setting.SettingChangesPage":{"properties":{"changes":{"type":"array","items":{"$ref":"#/components/schemas/setting.SettingChange"}},"pageInfo":{"$ref":"#/components/schemas/common.PageInfo"}},"type":"object","required":["changes"]},"setting.SettingChangeOrder":{"properties":{"field":{"$ref":"#/components/schemas/setting.SettingChangeOrderBy"},"asc":{"type":"boolean"}},"type":"object","required":["field","asc"]},"setting.SettingChangeWhereOpts":{"properties":{"rule":{"$ref":"#/components/schemas/setting.SettingRule"},"page":{"$ref":"#/components/schemas/common.PageReq"},"order":{"type":"array","items":{"$ref":"#/components/schemas/setting.SettingChangeOrder"}}},"type":"object"},"setting.SettingRuleDiff":{"properties":{"rule":{"$ref":"#/components/schemas/setting.SettingRule"},"oldSettings":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/setting.SettingImpl"}},"newSettings":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/setting.SettingImpl"}}},"type":"object","required":["rule","newSettings"]},"setting.GetSettingChangeResult":{"properties":{"change":{"$ref":"#/components/schemas/setting.SettingChange"},"diffs":{"type":"array","items":{"$ref":"#/components/schemas/setting.SettingRuleDiff"}}},"type":"object","required":["change","diffs"]},"setting.GetChangesForSettingIdResult":{"properties":{"setting":{"$ref":"#/components/schemas/setting.SettingImpl"},"changes":{"type":"array","items":{"$ref":"#/components/schemas/setting.GetSettingChangeResult"}}},"type":"object","required":["setting","changes"]},"setting.GetOverriddenSettingsHierarchyResult":{"properties":{"settingRulesAndValues":{"description":"Note this uses SettingRuleDiff, however there is no change.\nOnly the newSettings of SettingRuleDiff will be set.\nDone to prevent proliferation of classes.\n","type":"array","items":{"$ref":"#/components/schemas/setting.SettingRuleDiff"}}},"type":"object","required":["settingRulesAndValues"]},"step.AssigneeType":{"description":"The types of assignees for a step\n1 - User\n2 - Role\n","type":"number","enum":[1,2]},"step.StepType":{"description":"The type of special Step\n0 - Normal - same as not set\n1 - ChallengeResponse\n","type":"number","enum":[0,1]},"step.Assignee":{"description":"The assignee of a Step - the person responsible for completing that Step\n","properties":{"id":{"type":"string"},"type":{"$ref":"#/components/schemas/step.AssigneeType"},"latestChange":{"$ref":"#/components/schemas/diff.Change"},"otherAssignee":{"$ref":"#/components/schemas/step.Assignee"}},"type":"object","required":["id","type"]},"step.StepTypeDiff":{"properties":{"latestChange":{"$ref":"#/components/schemas/diff.Change"},"otherType":{"$ref":"#/components/schemas/step.StepType"}},"type":"object","required":["latestChange","otherType"]},"step.TextElement":{"properties":{"referenceKey":{"description":"referenceKey is in the format of \"<stepId>-<index>\" where index is the position of the element in the description.\nThis is set by the server each time the struct is returned. This field is READ ONLY.\nThe referenceKey is NOT guaranteed to persist across requests\n","type":"string"},"txt":{"type":"string"},"textWrapper":{"$ref":"#/components/schemas/reference.StringWrapper"},"latestChange":{"$ref":"#/components/schemas/diff.Change"}},"type":"object","required":["txt"]},"step.LinkElement":{"properties":{"referenceKey":{"description":"referenceKey is in the format of \"<stepId>-<index>\" where index is the position of the element in the description.\nThis is set by the server each time the struct is returned. This field is READ ONLY.\nThe referenceKey is NOT guaranteed to persist across requests\n","type":"string"},"label":{"type":"string"},"url":{"type":"string"},"latestChange":{"$ref":"#/components/schemas/diff.Change"}},"type":"object","required":["label","url"]},"step.StepDescriptionElement":{"description":"Description for both Fields and BaseSteps.\nIts use on Fields is confusing, given the name.\nIdeally, I would use Thrift's `alias` directive to make a new FieldDescriptionElement type that is exactly StepDescriptionElement.\nHowever, Thrift doesn't handle this in Golang very well.\nFor one thing, Field DescriptionElement is defined as a pointer to StepDescriptionElement.\nFor another, when attached as the `descrip` element on the Field struct type, Thrift sets the type to\n`[]*StepDescriptionElement` instead of `[]*FieldDescriptionElement`.\nSo we're stuck with the confusing state of affairs where a Field's description is a StepDescriptionElement.\n\n","properties":{"txt":{"$ref":"#/components/schemas/step.TextElement"},"link":{"$ref":"#/components/schemas/step.LinkElement"},"doc":{"$ref":"#/components/schemas/document.Document"},"notice":{"$ref":"#/components/schemas/group_headers.NoticeHeader"}},"type":"object","required":["txt","link","doc","notice"]},"step.Field":{"description":"A field that can accompany a Step\n","properties":{"id":{"type":"string"},"key":{"description":"deprecated, use nameWrapper\n","type":"string"},"type":{"$ref":"#/components/schemas/field_data.FieldType"},"fieldData":{"$ref":"#/components/schemas/field_data.FieldData"},"isRequired":{"type":"boolean"},"clientId":{"type":"string"},"formula":{"$ref":"#/components/schemas/formula.Formula"},"descrip":{"description":"Description of the Field.\nPlease see the comment attached to `StepDescriptionElement` for information on why this isn't FieldDescriptionElement\n\n","type":"array","items":{"$ref":"#/components/schemas/step.StepDescriptionElement"}},"nameWrapper":{"$ref":"#/components/schemas/reference.StringWrapper"},"notificationTemplatesField":{"type":"array","items":{"$ref":"#/components/schemas/notification_template.NotificationTemplateField"}},"autoPopulatedByFields":{"type":"array","items":{"$ref":"#/components/schemas/notification_template.Source"}},"triggers":{"type":"array","items":{"$ref":"#/components/schemas/field_data.Trigger"}},"dynamicRules":{"type":"boolean"},"latestChange":{"$ref":"#/components/schemas/diff.Change"},"otherField":{"$ref":"#/components/schemas/step.Field"}},"type":"object","required":["id","key","type","isRequired","clientId","descrip"]},"step.Step":{"description":"The Step struct\n","properties":{"stepFields":{"type":"array","items":{"$ref":"#/components/schemas/step.Field"}},"assignee":{"$ref":"#/components/schemas/step.Assignee"},"stepType":{"$ref":"#/components/schemas/step.StepType"},"stepTypeDiff":{"$ref":"#/components/schemas/step.StepTypeDiff"}},"type":"object","required":["stepFields","stepType"]},"step.SourceTemplateRef":{"description":"Identifies a template\n","properties":{"id":{"type":"string"},"version":{"type":"integer","format":"int32"},"publicVersion":{"type":"integer","format":"int32"},"snapshottedDataSheetValues":{"description":"Map of data sheet set definition id -> data sheet value snapshotted at/after job start\n","type":"object","additionalProperties":{"$ref":"#/components/schemas/data_sheet.DataSheetValue"}}},"type":"object","required":["id","version"]},"step.StepGroup":{"description":"The StepGroup struct\n","properties":{"headers":{"$ref":"#/components/schemas/group_headers.StepGroupHeaders"},"sourceTemplate":{"$ref":"#/components/schemas/step.SourceTemplateRef"}},"type":"object"},"step.StepImpl":{"description":"Union of Step/StepGroup\n","properties":{"step":{"$ref":"#/components/schemas/step.Step"},"stepGroup":{"$ref":"#/components/schemas/step.StepGroup"}},"type":"object","required":["step","stepGroup"]},"step.BaseStep":{"description":"BaseStep is a node in the step hierarchy.  Nodes in the job template tree can be\nSteps or StepGroups, and so BaseStep represents\nthe base class, and StepImpl is the instance data.\n","properties":{"id":{"type":"string"},"title":{"description":"The name of the Step/StepGroup\n","type":"string"},"descrip":{"description":"Description of the Step/StepGroup\n","type":"array","items":{"$ref":"#/components/schemas/step.StepDescriptionElement"}},"impl":{"$ref":"#/components/schemas/step.StepImpl"},"children":{"description":"Child nodes of the StepGroup\n","type":"array","items":{"$ref":"#/components/schemas/step.BaseStep"}},"isComponent":{"description":"True if this StepGroup is a shared component\n","type":"boolean"},"metadataEntry":{"description":"DEPRECATED Step Metadata\n","type":"array","items":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"metadataById":{"description":"Step Metadata\n","type":"object","additionalProperties":{"$ref":"#/components/schemas/metadata.MetadataEntry"}},"jobBaseStepId":{"description":"JobBaseStepId is the unique id of the step INSIDE the job\nThis is used to distinguish if the same step/step group is\nadded to the job more than once\n","type":"string"},"hierarchyPosition":{"description":"Dot-separated integers identifying the step's position in the hierarchy\n","type":"string"},"parentId":{"type":"string"},"parentJobBaseStepId":{"type":"string"},"clientId":{"description":"id generated by client to track this step\n","type":"string"},"clientGeneratedIds":{"description":"True if this step has ids generated by the client and not server\n","type":"boolean"},"titleWrapper":{"$ref":"#/components/schemas/reference.StringWrapper"},"blocking":{"description":"if true, then this step, and those after it, cannot be executed on until the steps prior have all been completed\n","type":"boolean"},"childChange":{"$ref":"#/components/schemas/diff.Change"},"titleDiff":{"$ref":"#/components/schemas/diff.StringDiff"}},"type":"object","required":["id","title","descrip","impl","children","isComponent","jobBaseStepId","hierarchyPosition","parentId","parentJobBaseStepId","clientId","clientGeneratedIds","blocking"]},"step.StepInfo":{"description":"Steps that were added offline\naddedAfterId should be previous step/step group id\nThis is needed as step position could have changed by modifying job online\n","properties":{"parentId":{"type":"string"},"addedAfterId":{"type":"string"},"materializedStep":{"$ref":"#/components/schemas/step.BaseStep"}},"type":"object","required":["parentId","addedAfterId","materializedStep"]},"tag.Tag":{"properties":{"id":{"type":"string"},"teamId":{"description":"The id of the team to which this tag belongs\n","type":"string"},"name":{"description":"The displayed name of a job template tag\n","type":"string"}},"type":"object","required":["id","teamId","name"]},"team.TeamConfig":{"description":"Configuration parameters for a team\n","properties":{"requireReviewFlow":{"description":"if true, require use of the review flow rather than explicit publish() call for templates\n","type":"boolean"},"showStepHierarchyPos":{"type":"boolean"},"defaultLocale":{"type":"string"},"requireTemplateSetReviewFlow":{"description":"if true, require use of the review flow rather than explicit publish() call for template sets\n","type":"boolean"},"backendPdfGen":{"type":"boolean"},"useWebSocket":{"type":"boolean"},"emailSenderOverride":{"type":"string"},"enableObserverRole":{"description":"Deprecated\n","type":"boolean"},"enableTemplateDiffs":{"type":"boolean"},"enableTemplateViews":{"type":"boolean"},"proxyRegion":{"type":"string"},"useParsableCamera":{"type":"boolean"},"previewPdfUrl":{"type":"string"}},"type":"object","required":["requireReviewFlow","requireTemplateSetReviewFlow","backendPdfGen","useWebSocket","enableObserverRole"]},"team.Team":{"description":"Information about a team\n","properties":{"id":{"type":"string"},"name":{"type":"string"},"subdomain":{"type":"string"},"owner":{"$ref":"#/components/schemas/user.User"},"config":{"$ref":"#/components/schemas/team.TeamConfig"},"createdAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"},"regionId":{"type":"string"},"isTrial":{"type":"boolean"},"isDisabled":{"type":"boolean"}},"type":"object","required":["id","name","subdomain","owner","config","createdAt","updatedAt","regionId","isTrial","isDisabled"]},"team.TeamModular":{"description":"Information about a team, modular\n","properties":{"id":{"type":"string"},"name":{"type":"string"},"subdomain":{"type":"string"},"createdAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"},"regionId":{"type":"string"},"owner":{"$ref":"#/components/schemas/user.User"},"config":{"$ref":"#/components/schemas/team.TeamConfig"}},"type":"object","required":["id","name","subdomain","createdAt","updatedAt","regionId"]},"team.TeamParams":{"description":"NOHTML Mutable information about a team\n","properties":{"name":{"type":"string"},"subdomain":{"type":"string"},"config":{"$ref":"#/components/schemas/team.TeamConfig"}},"type":"object"},"team.Region":{"description":"Structure used to indicate the correct hostnames to contact, for\ncustomers with non-US deployments.\n","properties":{"id":{"description":"A region code, such as \"us-west-2\" or \"eu-west-1\"\n","type":"string"},"apiHost":{"description":"The hostname part of the REST API.  The API itself is located at\n<tt>https://</tt><i>&lt;apiHost&gt;</i><tt>/api/</tt>\n","type":"string"},"sigHost":{"description":"Access to real-time updates are via this host, and the websocket protocol.\n","type":"string"},"staticHost":{"type":"string"}},"type":"object","required":["id","apiHost","sigHost","staticHost"]},"team_event.SubdomainProperty":{"properties":{"subdomain":{"type":"string"}},"type":"object","required":["subdomain"]},"team_event.CreateTeamOp":{"description":"corresponding to create(name, regionId)\n","properties":{},"type":"object"},"team_event.ConfigProperty":{"properties":{"config":{"$ref":"#/components/schemas/team.TeamConfig"}},"type":"object","required":["config"]},"team_event.TemplateApprovalWebhookProperty":{"description":"corresponding to setTemplateApprovalWebhook\n","properties":{"webhookUrl":{"type":"string"}},"type":"object","required":["webhookUrl"]},"team_event.TemplateSetApprovalWebhookProperty":{"description":"corresponding to setTemplateSetApprovalWebhook\n","properties":{"webhookUrl":{"type":"string"}},"type":"object","required":["webhookUrl"]},"team_event.AddUserOp":{"description":"Team Roles - add roles to an existing user or invite a new user\none of userId and email is required\n","properties":{"userId":{"type":"string"},"email":{"type":"string"},"roleIds":{"type":"array","items":{"type":"string"}}},"type":"object","required":["roleIds"]},"team_event.RemoveUserOp":{"description":"Team roles - remove roles from team user\ncompletely remove user from team when roleIds is null\n","properties":{"userId":{"type":"string"},"roleIds":{"type":"array","items":{"type":"string"}}},"type":"object","required":["userId"]},"team_event.TeamOp":{"properties":{"title":{"$ref":"#/components/schemas/common_event.TitleProperty"},"config":{"$ref":"#/components/schemas/team_event.ConfigProperty"},"templateApprovalWebhook":{"$ref":"#/components/schemas/team_event.TemplateApprovalWebhookProperty"},"templateSetApprovalWebhook":{"$ref":"#/components/schemas/team_event.TemplateSetApprovalWebhookProperty"},"subdomain":{"$ref":"#/components/schemas/team_event.SubdomainProperty"},"creation":{"$ref":"#/components/schemas/team_event.CreateTeamOp"},"addUser":{"$ref":"#/components/schemas/team_event.AddUserOp"},"removeUser":{"$ref":"#/components/schemas/team_event.RemoveUserOp"}},"type":"object","required":["title","config","templateApprovalWebhook","templateSetApprovalWebhook","subdomain","creation","addUser","removeUser"]},"team_event.TeamEvent":{"properties":{"teamId":{"type":"string"},"pedigree":{"$ref":"#/components/schemas/core_event.Pedigree"},"op":{"$ref":"#/components/schemas/team_event.TeamOp"},"regionId":{"type":"string"}},"type":"object","required":["teamId","pedigree","op","regionId"]},"team_role.SystemTeamRole":{"description":"1 - SUPER_ADMIN\n2 - GUEST\n3 - DEFAULT\n","type":"number","enum":[1,2,3]},"team_role.TeamTemplatePermissions":{"properties":{"view":{"type":"boolean"},"createAndEdit":{"type":"boolean"},"archive":{"type":"boolean"},"unarchive":{"type":"boolean"}},"type":"object","required":["view","createAndEdit","archive","unarchive"]},"team_role.TeamTemplateSetPermissions":{"properties":{"view":{"type":"boolean"},"createAndEdit":{"type":"boolean"},"archive":{"type":"boolean"},"unarchive":{"type":"boolean"}},"type":"object","required":["view","createAndEdit","archive","unarchive"]},"team_role.TeamJobPermissions":{"properties":{"planAndCreate":{"type":"boolean"},"viewAll":{"type":"boolean"},"seeReports":{"type":"boolean"},"edit":{"type":"boolean"}},"type":"object","required":["planAndCreate","viewAll","seeReports","edit"]},"team_role.TeamUserPermissions":{"properties":{"view":{"type":"boolean"},"invite":{"type":"boolean"},"manageTeamRoles":{"type":"boolean"},"manageSuperAdmin":{"type":"boolean"}},"type":"object","required":["view","invite","manageTeamRoles","manageSuperAdmin"]},"team_role.TeamJobRolePermissions":{"properties":{"create":{"type":"boolean"},"edit":{"type":"boolean"},"view":{"type":"boolean"}},"type":"object","required":["create","edit","view"]},"team_role.TeamRolePermissions":{"properties":{"create":{"type":"boolean"},"edit":{"type":"boolean"},"view":{"type":"boolean"}},"type":"object","required":["create","edit","view"]},"team_role.TeamMetadataPermissions":{"properties":{"create":{"type":"boolean"},"edit":{"type":"boolean"}},"type":"object","required":["create","edit"]},"team_role.TeamTagPermissions":{"properties":{"create":{"type":"boolean"},"edit":{"type":"boolean"}},"type":"object","required":["create","edit"]},"team_role.TeamStepGroupCategoryPermissions":{"properties":{"create":{"type":"boolean"},"edit":{"type":"boolean"}},"type":"object","required":["create","edit"]},"team_role.TeamPermissions":{"properties":{"setApprovalWebhooks":{"type":"boolean"},"canAccessAdmin":{"type":"boolean"},"template":{"$ref":"#/components/schemas/team_role.TeamTemplatePermissions"},"templateSet":{"$ref":"#/components/schemas/team_role.TeamTemplateSetPermissions"},"job":{"$ref":"#/components/schemas/team_role.TeamJobPermissions"},"user":{"$ref":"#/components/schemas/team_role.TeamUserPermissions"},"jobRole":{"$ref":"#/components/schemas/team_role.TeamJobRolePermissions"},"teamRole":{"$ref":"#/components/schemas/team_role.TeamRolePermissions"},"metadata":{"$ref":"#/components/schemas/team_role.TeamMetadataPermissions"},"tag":{"$ref":"#/components/schemas/team_role.TeamTagPermissions"},"groupCategory":{"$ref":"#/components/schemas/team_role.TeamStepGroupCategoryPermissions"}},"type":"object","required":["setApprovalWebhooks","canAccessAdmin","template","templateSet","job","user","jobRole","teamRole","metadata","tag","groupCategory"]},"team_role.TeamRoleV2":{"properties":{"id":{"type":"string"},"teamId":{"type":"string"},"name":{"type":"string"},"descrip":{"type":"string"},"permissions":{"$ref":"#/components/schemas/team_role.TeamPermissions"},"systemRole":{"$ref":"#/components/schemas/team_role.SystemTeamRole"},"mutable":{"type":"boolean"}},"type":"object","required":["id","teamId","name","descrip","permissions","mutable"]},"team_role.TeamRoleParams":{"properties":{"name":{"type":"string"},"descrip":{"type":"string"},"permissions":{"$ref":"#/components/schemas/setting.SettingsForm"}},"type":"object"},"template_event.CreateTemplateOp":{"properties":{"teamId":{"type":"string"},"clonedFromTemplate":{"type":"string"}},"type":"object","required":["teamId"]},"template_event.DescripProperty":{"properties":{"descrip":{"type":"string"}},"type":"object","required":["descrip"]},"template_event.TypeProperty":{"properties":{"typ":{"type":"integer","format":"int32"}},"type":"object","required":["typ"]},"template_event.TagUpdateOp":{"properties":{"tagId":{"type":"string"},"name":{"type":"string"},"comment":{"$ref":"#/components/schemas/metadata.MetadataValue"}},"type":"object","required":["tagId"]},"template_event.TagDeleteOp":{"properties":{"tagId":{"type":"string"}},"type":"object","required":["tagId"]},"template_event.LockOp":{"properties":{"force":{"type":"boolean"}},"type":"object","required":["force"]},"template_event.UnLockOp":{"properties":{},"type":"object"},"template_event.ReviewOp":{"properties":{"done":{"type":"boolean"}},"type":"object","required":["done"]},"template_event.PublishOp":{"properties":{"publicVersion":{"type":"integer","format":"int32"}},"type":"object"},"template_event.UpdateStepGroupHeadersOp":{"properties":{"stepGroupId":{"type":"string"},"headers":{"$ref":"#/components/schemas/group_headers.StepGroupHeaders"}},"type":"object","required":["headers"]},"template_event.TemplateOp":{"properties":{"title":{"$ref":"#/components/schemas/common_event.TitleProperty"},"descrip":{"$ref":"#/components/schemas/template_event.DescripProperty"},"typ":{"$ref":"#/components/schemas/template_event.TypeProperty"},"tagUpdate":{"$ref":"#/components/schemas/template_event.TagUpdateOp"},"tagDelete":{"$ref":"#/components/schemas/template_event.TagDeleteOp"},"creation":{"$ref":"#/components/schemas/template_event.CreateTemplateOp"},"addStep":{"$ref":"#/components/schemas/common_event.AddStepOp"},"addStepGroup":{"$ref":"#/components/schemas/common_event.AddStepGroupOp"},"cloneStep":{"$ref":"#/components/schemas/common_event.CloneStepOp"},"cloneStepGroup":{"$ref":"#/components/schemas/common_event.CloneStepGroupOp"},"updateStepGroupHeaders":{"$ref":"#/components/schemas/template_event.UpdateStepGroupHeadersOp"},"addDocument":{"$ref":"#/components/schemas/common_event.AddDocumentOp"},"removeDocument":{"$ref":"#/components/schemas/common_event.RemoveDocumentOp"},"metadataUpdate":{"$ref":"#/components/schemas/common_event.MetadataUpdateOp"},"metadataDelete":{"$ref":"#/components/schemas/common_event.MetadataDeleteOp"},"lock":{"$ref":"#/components/schemas/template_event.LockOp"},"unlock":{"$ref":"#/components/schemas/template_event.UnLockOp"},"review":{"$ref":"#/components/schemas/template_event.ReviewOp"},"publish":{"$ref":"#/components/schemas/template_event.PublishOp"},"archive":{"$ref":"#/components/schemas/common_event.ArchiveOp"},"subscribe":{"$ref":"#/components/schemas/common_event.FetchAndSubscribeOp"},"unsubscribe":{"$ref":"#/components/schemas/common_event.UnsubscribeOp"}},"type":"object","required":["title","descrip","typ","tagUpdate","tagDelete","creation","addStep","addStepGroup","cloneStep","cloneStepGroup","updateStepGroupHeaders","addDocument","removeDocument","metadataUpdate","metadataDelete","lock","unlock","review","publish","archive","subscribe","unsubscribe"]},"template_event.TemplateEvent":{"properties":{"templateId":{"type":"string"},"pedigree":{"$ref":"#/components/schemas/core_event.Pedigree"},"op":{"$ref":"#/components/schemas/template_event.TemplateOp"},"internalVersion":{"type":"integer","format":"int32"},"publicVersion":{"type":"integer","format":"int32"},"publishedVersion":{"type":"integer","format":"int32"},"newInternalVersion":{"type":"integer","format":"int32"},"newPublicVersion":{"type":"integer","format":"int32"},"newPublishedVersion":{"type":"integer","format":"int32"},"template":{"$ref":"#/components/schemas/job_template.JobTemplateModular"},"receivedAt":{"type":"integer","format":"int64"}},"type":"object","required":["templateId","pedigree","op"]},"template_set.TemplateSetParams":{"description":"Mutable parts of the job template\n","properties":{"title":{"description":"Name of the template set\n","type":"string"},"descrip":{"description":"Description of the template set\n","type":"string"},"typ":{"$ref":"#/components/schemas/job_template.TemplateType"}},"type":"object"},"template_set.TemplateSetCounts":{"properties":{"completedJobs":{"type":"integer","format":"int32"},"activeJobs":{"type":"integer","format":"int32"}},"type":"object","required":["completedJobs","activeJobs"]},"template_set.TemplateSet":{"properties":{"id":{"type":"string"},"internalVersion":{"description":"Only increments when <a href=\"#Fn_TemplateSetService_update\">update</a> is called.\n","type":"integer","format":"int32"},"publicVersion":{"description":"Increment logic for <code>publicVersion</code>:<br><br>\nNormal team flow:<br>\n1. A new template set is created with <a href=\"#Fn_TemplateSetService_create\">create</a>, initially <code>publicVersion=0</code> and <code>status=Unpublished</code>.<br>\n2. <code>publicVersion</code> increments by 1 from latest published <code>publicVersion</code> when <a href=\"#Fn_TemplateSetService_publish\">publish</a> is called, and <code>status=Published</code>.<br>\n3. When a new edit is made with <a href=\"#Fn_TemplateSetService_update\">update</a> on either published or unpublished template set, a new entry is created with <code>publicVersion=0</code> and <code>status=Unpublished</code>.<br>\n4. Repeat from step 2) or 3).<br><br>\nReview team flow:<br>\n1. A new template set is created with <a href=\"#Fn_TemplateSetService_create\">create</a>, initially <code>publicVersion=0</code> and <code>status=Unpublished</code>.<br>\n2. <code>publicVersion</code> increments by 1 from max <code>publicVersion</code> when <a href=\"#Fn_TemplateSetService_beginReview\">beginReview</a> is called, and <code>status=InReview</code>. <code>publicVersion</code> does not change if this <code>internalVersion</code> has already been reviewed before, i.e., <code>publicVersion != 0</code>.<br>\n3. <a href=\"#Fn_TemplateSetService_endReview\">endReview</a> must be called next to close review, making <code>status=Unpublished</code>.<br>\n4. A specific <code>publicVersion</code> must be used to call <a href=\"#Fn_TemplateSetService_publishVersion\">publishVersion</a> and make <code>status=Published</code>.<br>\n5. When a new edit is made with <a href=\"#Fn_TemplateSetService_update\">update</a> on either published or unpublished template set, a new entry is created with <code>publicVersion=0</code> and <code>status=Unpublished</code>.<br>\n6. Repeat from step 2) or 5).\n","type":"integer","format":"int32"},"title":{"type":"string"},"descrip":{"description":"Description\n","type":"string"},"status":{"$ref":"#/components/schemas/job_template.JobTemplateStatus"},"teamId":{"type":"string"},"lastAuthoredAt":{"description":"authored time for this edit\n","type":"integer","format":"int64"},"publishedAt":{"description":"published time for this edit, 0 if not published\n","type":"integer","format":"int64"},"archivedAt":{"description":"archive time, 0 means the template set is not archived\n","type":"integer","format":"int64"},"lastAuthorId":{"type":"string"},"lock":{"$ref":"#/components/schemas/job_template.JobTemplateLock"},"publishedVersion":{"description":"Only increments when <a href=\"#Fn_TemplateSetService_publish\">publish</a> or <a href=\"#Fn_TemplateSetService_publishVersion\">publishVersion</a> is called.\nIs the same as <code>publicVersion</code> for normal teams, and only increments on publish for review teams.\nIs 0 for all template sets with <code>status!=Published</code>.\n","type":"integer","format":"int32"},"typ":{"$ref":"#/components/schemas/job_template.TemplateType"},"team":{"$ref":"#/components/schemas/team.TeamModular"},"lastPublishedAt":{"description":"last published time for this template set. 0 if not published\n","type":"integer","format":"int64"},"lastAuthor":{"$ref":"#/components/schemas/user.UserModular"},"templates":{"type":"array","items":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}},"counts":{"$ref":"#/components/schemas/template_set.TemplateSetCounts"},"templateTags":{"type":"array","items":{"$ref":"#/components/schemas/job_template.TemplateTag"}},"lastPublishedVersion":{"description":"last published version (public version) for this template set. 0 if not published\n","type":"integer","format":"int32"},"lastModifiedAt":{"description":"Bumps up on edit, status change, archive\n","type":"integer","format":"int64"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}},"type":"object","required":["id","internalVersion","publicVersion","title","descrip","status","teamId","lastAuthoredAt","publishedAt","archivedAt","lastAuthorId","publishedVersion","typ"]},"template_set.TemplateSetSelectOpts":{"properties":{"includeTeam":{"type":"boolean"},"includeLastPublished":{"description":"includes both lastPublishedAt and lastPublishedVersion\n","type":"boolean"},"includeLastAuthor":{"type":"boolean"},"includeTemplates":{"type":"boolean"},"includeTags":{"type":"boolean"},"includeCounts":{"type":"boolean"},"includeLastModified":{"type":"boolean"},"includeAttributes":{"type":"boolean"}},"type":"object","required":["includeTeam","includeLastPublished","includeLastAuthor","includeTemplates","includeTags","includeCounts","includeLastModified","includeAttributes"]},"template_set.TemplateSetFetchResult":{"properties":{"templateSet":{"$ref":"#/components/schemas/template_set.TemplateSet"},"err":{"$ref":"#/components/schemas/common.SystemException"}},"type":"object","required":["templateSet","err"]},"template_set.TemplateSetQueryResult":{"properties":{"templateSets":{"type":"array","items":{"$ref":"#/components/schemas/template_set.TemplateSet"}},"pageInfo":{"$ref":"#/components/schemas/common.PageInfo"}},"type":"object","required":["templateSets"]},"template_set.TemplateUnion":{"properties":{"templateSet":{"$ref":"#/components/schemas/template_set.TemplateSet"},"template":{"$ref":"#/components/schemas/job_template.JobTemplateModular"}},"type":"object","required":["templateSet","template"]},"template_set.TemplateUnionQueryResult":{"properties":{"templateUnions":{"type":"array","items":{"$ref":"#/components/schemas/template_set.TemplateUnion"}},"pageInfo":{"$ref":"#/components/schemas/common.PageInfo"}},"type":"object","required":["templateUnions"]},"template_set.TemplateUnionFetchResult":{"properties":{"templateResult":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/job_template.TemplateFetchResult"}},"templateSetResult":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/template_set.TemplateSetFetchResult"}}},"type":"object","required":["templateResult","templateSetResult"]},"template_set.TemplateUnionWhereOpts":{"description":"Filtering options to be passed to queryCombined\n","properties":{"whereOpts":{"$ref":"#/components/schemas/job_template.TemplateWhereOpts"},"includeTemplates":{"type":"boolean"},"includeTemplateSets":{"type":"boolean"}},"type":"object","required":["whereOpts","includeTemplates","includeTemplateSets"]},"template_set.TemplateUnionSelectOpts":{"properties":{"templateSetSelectOpts":{"$ref":"#/components/schemas/template_set.TemplateSetSelectOpts"},"templateSelectOpts":{"$ref":"#/components/schemas/job_template.TemplateSelectOpts"}},"type":"object","required":["templateSetSelectOpts","templateSelectOpts"]},"template_set.VersionRef":{"properties":{"id":{"type":"string"},"publicVersion":{"type":"integer","format":"int32"},"isArchived":{"type":"boolean"}},"type":"object","required":["id","publicVersion","isArchived"]},"thread_event.CreateOp":{"properties":{"topic":{"type":"string"},"ptr":{"$ref":"#/components/schemas/messaging.ThreadPtr"}},"type":"object","required":["topic","ptr"]},"thread_event.MessageOp":{"properties":{"body":{"type":"string"},"structuredBody":{"$ref":"#/components/schemas/messaging.StructuredBody"},"category":{"$ref":"#/components/schemas/messaging.ThreadMessageCategory"}},"type":"object","required":["body","category"]},"thread_event.UpdateOp":{"properties":{"params":{"$ref":"#/components/schemas/messaging.ThreadParams"}},"type":"object","required":["params"]},"thread_event.ThreadOp":{"properties":{"message":{"$ref":"#/components/schemas/thread_event.MessageOp"},"creation":{"$ref":"#/components/schemas/thread_event.CreateOp"},"update":{"$ref":"#/components/schemas/thread_event.UpdateOp"},"subscribe":{"$ref":"#/components/schemas/common_event.FetchAndSubscribeOp"},"unsubscribe":{"$ref":"#/components/schemas/common_event.UnsubscribeOp"}},"type":"object","required":["message","creation","update","subscribe","unsubscribe"]},"thread_event.ThreadEvent":{"properties":{"threadId":{"type":"string"},"pedigree":{"$ref":"#/components/schemas/core_event.Pedigree"},"op":{"$ref":"#/components/schemas/thread_event.ThreadOp"},"receivedAt":{"type":"integer","format":"int64"}},"type":"object","required":["threadId","pedigree","op"]},"thread_event.ThreadEventsResult":{"properties":{"events":{"type":"array","items":{"$ref":"#/components/schemas/thread_event.ThreadEvent"}},"nodeVersions":{"description":"The new nodeVersion for the most recent events\n","type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}}},"type":"object","required":["events","nodeVersions"]},"user.TeamRole":{"description":"The user's role(s) in a team\n1 - ADMIN\n2 - AUTHOR\n3 - JOBCREATOR\n4 - EXECUTOR\n5 - PARSABLE_ADMIN\n6 - WORKFLOW_PLANNER\n","type":"number","enum":[1,2,3,4,5,6]},"user.ChangeTokenType":{"description":"NOHTML Defines the type of a ChangeToken sent via email link; will be used as 2-digit hex prefix of token param\n1 - VALIDATE_TOKEN\n2 - JOIN_TOKEN\n3 - FORGOT_PASSWORD_TOKEN\n4 - UPDATE_EMAIL_TOKEN\n","type":"number","enum":[1,2,3,4]},"user.UserOrderBy":{"description":"1 - NAME\n2 - EMAIL\n","type":"number","enum":[1,2]},"user.ChangeToken":{"description":"NOHTML ChangeToken is included in emails sent out to users for validation/changing passwords/etc.\n","properties":{"token":{"type":"string"},"userId":{"type":"string"},"tokenType":{"$ref":"#/components/schemas/user.ChangeTokenType"},"inviteType":{"type":"integer","format":"int32"},"teamId":{"type":"string"},"inviterId":{"type":"string"},"createdAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"}},"type":"object","required":["token","userId","tokenType","inviteType","createdAt","updatedAt"]},"user.User":{"description":"Information about the user\n","properties":{"id":{"type":"string"},"email":{"type":"string"},"name":{"type":"string"},"validatedAt":{"description":"Not validated, if 0\n","type":"integer","format":"int64"}},"type":"object","required":["id","email","name","validatedAt"]},"user.UserKey":{"properties":{"id":{"type":"string"},"email":{"type":"string"}},"type":"object","required":["id","email"]},"user.TeamMembership":{"description":"Team membership information\n","properties":{"addedAt":{"type":"integer","format":"int64"},"updatedAt":{"type":"integer","format":"int64"},"removedAt":{"description":"Not removed, if 0\n","type":"integer","format":"int64"},"roles":{"type":"array","items":{"$ref":"#/components/schemas/user.TeamRole"}}},"type":"object","required":["addedAt","updatedAt","removedAt","roles"]},"user.UserStats":{"description":"Stats for user (per team)\n","properties":{"completedJobs":{"type":"integer","format":"int32"},"activeJobs":{"type":"integer","format":"int32"}},"type":"object","required":["completedJobs","activeJobs"]},"user.UserModular":{"description":"Information about a user, modular\n","properties":{"id":{"type":"string"},"email":{"type":"string"},"name":{"type":"string"},"validatedAt":{"description":"Not validated, if 0\n","type":"integer","format":"int64"},"teamIdToMembership":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/user.TeamMembership"}},"teamIdToStats":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/user.UserStats"}},"teamIdToAttributes":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/abac.AbacAttribute"}}}},"type":"object","required":["id","email","name","validatedAt"]},"user.UserParams":{"description":"Information about a new user\n","properties":{"name":{"type":"string"}},"type":"object"},"user.UserSelectOpts":{"properties":{"includeTeamMembership":{"type":"boolean"},"includeStats":{"type":"boolean"},"includeAttributes":{"type":"boolean"}},"type":"object","required":["includeTeamMembership","includeStats","includeAttributes"]},"user.UserOrder":{"properties":{"field":{"$ref":"#/components/schemas/user.UserOrderBy"},"asc":{"type":"boolean"}},"type":"object","required":["field","asc"]},"user.UserTextSearch":{"properties":{"query":{"type":"string"}},"type":"object","required":["query"]},"user.UserWhereOpts":{"description":"Options for choosing records\n","properties":{"teamId":{"type":"string"},"teamRoles":{"type":"array","items":{"$ref":"#/components/schemas/user.TeamRole"}},"isRemoved":{"type":"boolean"},"txt":{"$ref":"#/components/schemas/user.UserTextSearch"},"pageReq":{"$ref":"#/components/schemas/common.PageReq"}},"type":"object"},"user.UserQueryResult":{"properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/user.UserModular"}},"pageInfo":{"$ref":"#/components/schemas/common.PageInfo"}},"type":"object","required":["users"]},"user.UserFetchResult":{"description":"Result from fetch APIs\n","properties":{"user":{"$ref":"#/components/schemas/user.UserModular"},"err":{"$ref":"#/components/schemas/common.SystemException"}},"type":"object","required":["user","err"]},"websocket.ThreadSubscribe":{"properties":{"threadId":{"type":"string"},"nodeVersions":{"type":"array","items":{"$ref":"#/components/schemas/core_event.NodeVersion"}}},"type":"object","required":["threadId","nodeVersions"]},"websocket.ThreadUnsubscribe":{"properties":{"threadId":{"type":"string"}},"type":"object","required":["threadId"]},"websocket.TemplateSubscribe":{"properties":{"templateId":{"type":"string"}},"type":"object","required":["templateId"]},"websocket.TemplateUnsubscribe":{"properties":{"templateId":{"type":"string"}},"type":"object","required":["templateId"]},"websocket.WebsocketDownSchema":{"description":"Schema for events pushed down to clients via websocket\n","properties":{"thread":{"$ref":"#/components/schemas/thread_event.ThreadEvent"},"legacyEvent":{"type":"string"}},"type":"object","required":["thread","legacyEvent"]},"websocket.WebsocketUpSchema":{"description":"Schema for events pushed up from clients via websocket\n","properties":{"threadSubscribe":{"$ref":"#/components/schemas/websocket.ThreadSubscribe"},"templateSubscribe":{"$ref":"#/components/schemas/websocket.TemplateSubscribe"},"threadUnsubscribe":{"$ref":"#/components/schemas/websocket.ThreadUnsubscribe"},"templateUnsubscribe":{"$ref":"#/components/schemas/websocket.TemplateUnsubscribe"},"legacyEvent":{"type":"string"}},"type":"object","required":["threadSubscribe","templateSubscribe","threadUnsubscribe","templateUnsubscribe","legacyEvent"]}},"securitySchemes":{"ApiKeyAuth":{"type":"apiKey","in":"header","name":"Authorization","description":"Enter your token in the format **Token &lt;token>**"}}},"security":[]}